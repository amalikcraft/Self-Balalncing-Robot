

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat May 04 16:03:34 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Generated 23/03/2023 GMT
    78                           ; 
    79                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F4550 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	idataBANK1
   113   0050B8                     __pidataBANK1:
   114                           	callstack 0
   115                           
   116                           ;initializer for _armKalmanUncertaintyAngle
   117   0050B8  0000               	dw	0
   118   0050BA  4080               	dw	16512
   119                           
   120                           ;initializer for _armdegreeVar
   121                           ;ArmMPU6050.c: 12: int armAx,armAy,armAz,armGy;;ArmMPU6050.c: 13: double armAX, armAY, a
      +                          rmAZ, armt, armGX, armGY, armGZ;;ArmMPU6050.c: 14: double armstateAngle;;ArmMPU6050.c: 1
      +                          5: double armOffset = 8.0;;ArmMPU6050.c: 17: double armdegreeVar = .1;
   122   0050BC  CCCD               	dw	52429
   123   0050BE  3DCC               	dw	15820
   124                           
   125                           ;initializer for _armOffset
   126                           ;ArmMPU6050.c: 12: int armAx,armAy,armAz,armGy;;ArmMPU6050.c: 13: double armAX, armAY, a
      +                          rmAZ, armt, armGX, armGY, armGZ;;ArmMPU6050.c: 14: double armstateAngle;;ArmMPU6050.c: 1
      +                          5: double armOffset = 8.0;
   127   0050C0  0000               	dw	0
   128   0050C2  4100               	dw	16640
   129                           
   130                           ;initializer for _KalmanUncertaintyAngle
   131   0050C4  0000               	dw	0
   132   0050C6  4080               	dw	16512
   133                           
   134                           ;initializer for _degreeVar
   135                           ;WheelMPU6050.c: 13: int Ax,Ay,Az,Gx;;WheelMPU6050.c: 14: double AX, AY, AZ, GX;;WheelMP
      +                          U6050.c: 15: double stateAngle;;WheelMPU6050.c: 16: double wheelOffset = 0.0;;WheelMPU60
      +                          50.c: 19: double degreeVar = .1;
   136   0050C8  CCCD               	dw	52429
   137   0050CA  3DCC               	dw	15820
   138                           
   139                           ;initializer for _armKD
   140                           ;main.c: 15: double CurrentWheelAngle = 0;;main.c: 16: double DesiredAngle = 0;;main.c: 
      +                          17: double AngleError = 0;;main.c: 18: double PrevAngleError = 0;;main.c: 19: double Pre
      +                          vIterm = 0;;main.c: 20: double Pterm;;main.c: 21: double Iterm;;main.c: 22: double Dterm
      +                          ;;main.c: 23: double PID_U = 0;;main.c: 24: double Max = 1;;main.c: 25: double KP = .5, 
      +                          KI = .3, KD = 0.0015;;main.c: 28: double CurrentArmAngle = 0;;main.c: 29: double armDesi
      +                          redAngle = 0;;main.c: 30: double armAngleError = 0;;main.c: 31: double armPrevAngleError
      +                           = 0;
   141   0050CC  999A               	dw	39322
   142   0050CE  3E19               	dw	15897
   143                           
   144                           ;initializer for _armKI
   145                           ;main.c: 15: double CurrentWheelAngle = 0;;main.c: 16: double DesiredAngle = 0;;main.c: 
      +                          17: double AngleError = 0;;main.c: 18: double PrevAngleError = 0;;main.c: 19: double Pre
      +                          vIterm = 0;;main.c: 20: double Pterm;;main.c: 21: double Iterm;;main.c: 22: double Dterm
      +                          ;;main.c: 23: double PID_U = 0;;main.c: 24: double Max = 1;;main.c: 25: double KP = .5, 
      +                          KI = .3, KD = 0.0015;;main.c: 28: double CurrentArmAngle = 0;;main.c: 29: double armDesi
      +                          redAngle = 0;;main.c: 30: double armAngleError = 0;;main.c: 31: double armPrevAngleError
      +                           = 0;
   146   0050D0  126F               	dw	4719
   147   0050D2  3A83               	dw	14979
   148                           
   149                           ;initializer for _armKP
   150                           ;main.c: 15: double CurrentWheelAngle = 0;;main.c: 16: double DesiredAngle = 0;;main.c: 
      +                          17: double AngleError = 0;;main.c: 18: double PrevAngleError = 0;;main.c: 19: double Pre
      +                          vIterm = 0;;main.c: 20: double Pterm;;main.c: 21: double Iterm;;main.c: 22: double Dterm
      +                          ;;main.c: 23: double PID_U = 0;;main.c: 24: double Max = 1;;main.c: 25: double KP = .5, 
      +                          KI = .3, KD = 0.0015;;main.c: 28: double CurrentArmAngle = 0;;main.c: 29: double armDesi
      +                          redAngle = 0;;main.c: 30: double armAngleError = 0;;main.c: 31: double armPrevAngleError
      +                           = 0;
   151   0050D4  0000               	dw	0
   152   0050D6  41C8               	dw	16840
   153                           
   154                           ;initializer for _armMax
   155   0050D8  4000               	dw	16384
   156   0050DA  459C               	dw	17820
   157                           
   158                           ;initializer for _KD
   159                           ;main.c: 15: double CurrentWheelAngle = 0;;main.c: 16: double DesiredAngle = 0;;main.c: 
      +                          17: double AngleError = 0;;main.c: 18: double PrevAngleError = 0;;main.c: 19: double Pre
      +                          vIterm = 0;;main.c: 20: double Pterm;;main.c: 21: double Iterm;;main.c: 22: double Dterm
      +                          ;;main.c: 23: double PID_U = 0;;main.c: 24: double Max = 1;;main.c: 25: double KP = .5, 
      +                          KI = .3, KD = 0.0015;
   160   0050DC  9BA6               	dw	39846
   161   0050DE  3AC4               	dw	15044
   162                           
   163                           ;initializer for _KI
   164                           ;main.c: 15: double CurrentWheelAngle = 0;;main.c: 16: double DesiredAngle = 0;;main.c: 
      +                          17: double AngleError = 0;;main.c: 18: double PrevAngleError = 0;;main.c: 19: double Pre
      +                          vIterm = 0;;main.c: 20: double Pterm;;main.c: 21: double Iterm;;main.c: 22: double Dterm
      +                          ;;main.c: 23: double PID_U = 0;;main.c: 24: double Max = 1;;main.c: 25: double KP = .5, 
      +                          KI = .3, KD = 0.0015;
   165   0050E0  999A               	dw	39322
   166   0050E2  3E99               	dw	16025
   167                           
   168                           ;initializer for _KP
   169                           ;main.c: 15: double CurrentWheelAngle = 0;;main.c: 16: double DesiredAngle = 0;;main.c: 
      +                          17: double AngleError = 0;;main.c: 18: double PrevAngleError = 0;;main.c: 19: double Pre
      +                          vIterm = 0;;main.c: 20: double Pterm;;main.c: 21: double Iterm;;main.c: 22: double Dterm
      +                          ;;main.c: 23: double PID_U = 0;;main.c: 24: double Max = 1;;main.c: 25: double KP = .5, 
      +                          KI = .3, KD = 0.0015;
   170   0050E4  0000               	dw	0
   171   0050E6  3F00               	dw	16128
   172                           
   173                           ;initializer for _Max
   174   0050E8  0000               	dw	0
   175   0050EA  3F80               	dw	16256
   176                           
   177                           	psect	smallconst
   178   000800                     __psmallconst:
   179                           	callstack 0
   180   000800  00                 	db	0
   181   000801                     _atanlo:
   182                           	callstack 0
   183   000801  3769               	dw	14185
   184   000803  31AC               	dw	12716
   185   000805  2168               	dw	8552
   186   000807  3322               	dw	13090
   187   000809  0FB4               	dw	4020
   188   00080B  3314               	dw	13076
   189   00080D  2168               	dw	8552
   190   00080F  33A2               	dw	13218
   191   000811                     __end_of_atanlo:
   192                           	callstack 0
   193   000811                     _atanhi:
   194                           	callstack 0
   195   000811  6338               	dw	25400
   196   000813  3EED               	dw	16109
   197   000815  0FDA               	dw	4058
   198   000817  3F49               	dw	16201
   199   000819  985E               	dw	39006
   200   00081B  3F7B               	dw	16251
   201   00081D  0FDA               	dw	4058
   202   00081F  3FC9               	dw	16329
   203   000821                     __end_of_atanhi:
   204                           	callstack 0
   205   000821  AC25               	dw	44069
   206   000823  3D7C               	dw	15740
   207   000825                     __end_of_aT4:
   208                           	callstack 0
   209   000825  1247               	dw	4679
   210   000827  BDDA               	dw	48602
   211   000829                     __end_of_aT3:
   212                           	callstack 0
   213   000829  F50D               	dw	62733
   214   00082B  3E11               	dw	15889
   215   00082D                     __end_of_aT2:
   216                           	callstack 0
   217   00082D  CA98               	dw	51864
   218   00082F  BE4C               	dw	48716
   219   000831                     __end_of_aT1:
   220                           	callstack 0
   221   000831  AAA9               	dw	43689
   222   000833  3EAA               	dw	16042
   223   000835                     __end_of_aT0:
   224                           	callstack 0
   225   000000                     _TRMT	set	32097
   226   000000                     _BF	set	32312
   227   000000                     _RCEN	set	32299
   228   000000                     _ACKSTAT	set	32302
   229   000000                     _ACKEN	set	32300
   230   000000                     _ACKDT	set	32301
   231   000000                     _PEN	set	32298
   232   000000                     _RSEN	set	32297
   233   000000                     _SEN	set	32296
   234   000000                     _TRISB0	set	31896
   235   000000                     _TRISB1	set	31897
   236   000000                     _LATBbits	set	3978
   237   000000                     _LATCbits	set	3979
   238   000000                     _TRISCbits	set	3988
   239   000000                     _PIE1bits	set	3997
   240   000000                     _SSPCON2	set	4037
   241   000000                     _SSPCON1	set	4038
   242   000000                     _TRISDbits	set	3989
   243   000000                     _OSCCONbits	set	4051
   244   000000                     _SSPIF	set	31987
   245   000000                     _TRISBbits	set	3987
   246   000000                     _LATDbits	set	3980
   247   000000                     _SSPBUF	set	4041
   248   000000                     _SSPADD	set	4040
   249   000000                     _SSPSTAT	set	4039
   250   000000                     _IPR1bits	set	3999
   251   000000                     _RCSTAbits	set	4011
   252   000000                     _SPBRG	set	4015
   253   000000                     _SPBRGH	set	4016
   254   000000                     _BAUDCONbits	set	4024
   255   000000                     _TXREG	set	4013
   256   000000                     _TXSTAbits	set	4012
   257   000835                     STR_1:
   258   000835  20                 	db	32
   259   000836  57                 	db	87	;'W'
   260   000837  68                 	db	104	;'h'
   261   000838  65                 	db	101	;'e'
   262   000839  65                 	db	101	;'e'
   263   00083A  6C                 	db	108	;'l'
   264   00083B  41                 	db	65	;'A'
   265   00083C  6E                 	db	110	;'n'
   266   00083D  67                 	db	103	;'g'
   267   00083E  6C                 	db	108	;'l'
   268   00083F  65                 	db	101	;'e'
   269   000840  20                 	db	32
   270   000841  3D                 	db	61	;'='
   271   000842  20                 	db	32
   272   000843  20                 	db	32
   273   000844  25                 	db	37
   274   000845  2E                 	db	46
   275   000846  31                 	db	49	;'1'
   276   000847  66                 	db	102	;'f'
   277   000848  20                 	db	32
   278   000849  20                 	db	32
   279   00084A  7C                 	db	124
   280   00084B  20                 	db	32
   281   00084C  20                 	db	32
   282   00084D  41                 	db	65	;'A'
   283   00084E  72                 	db	114	;'r'
   284   00084F  6D                 	db	109	;'m'
   285   000850  41                 	db	65	;'A'
   286   000851  6E                 	db	110	;'n'
   287   000852  67                 	db	103	;'g'
   288   000853  6C                 	db	108	;'l'
   289   000854  65                 	db	101	;'e'
   290   000855  3D                 	db	61	;'='
   291   000856  20                 	db	32
   292   000857  25                 	db	37
   293   000858  2E                 	db	46
   294   000859  31                 	db	49	;'1'
   295   00085A  66                 	db	102	;'f'
   296   00085B  20                 	db	32
   297   00085C  20                 	db	32
   298   00085D  25                 	db	37
   299   00085E  64                 	db	100	;'d'
   300   00085F  0D                 	db	13
   301   000860  0A                 	db	10
   302   000861  20                 	db	32
   303   000862  00                 	db	0
   304   000863                     STR_2:
   305   000863  69                 	db	105	;'i'
   306   000864  6E                 	db	110	;'n'
   307   000865  66                 	db	102	;'f'
   308   000866  00                 	db	0
   309   000867                     STR_5:
   310   000867  6E                 	db	110	;'n'
   311   000868  61                 	db	97	;'a'
   312   000869  6E                 	db	110	;'n'
   313   00086A  00                 	db	0
   314   00086B  00                 	db	0	; dummy byte at the end
   315   000000                     
   316                           ; #config settings
   317                           
   318                           	psect	cinit
   319   004E9E                     __pcinit:
   320                           	callstack 0
   321   004E9E                     start_initialization:
   322                           	callstack 0
   323   004E9E                     __initialization:
   324                           	callstack 0
   325                           
   326                           ; Initialize objects allocated to BANK1 (52 bytes)
   327                           ; load TBLPTR registers with __pidataBANK1
   328   004E9E  0EB8               	movlw	low __pidataBANK1
   329   004EA0  6EF6               	movwf	tblptrl,c
   330   004EA2  0E50               	movlw	high __pidataBANK1
   331   004EA4  6EF7               	movwf	tblptrh,c
   332   004EA6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   333   004EA8  6EF8               	movwf	tblptru,c
   334   004EAA  EE01  F09A         	lfsr	0,__pdataBANK1
   335   004EAE  EE10 F034          	lfsr	1,52
   336   004EB2                     copy_data0:
   337   004EB2  0009               	tblrd		*+
   338   004EB4  CFF5 FFEE          	movff	tablat,postinc0
   339   004EB8  50E5               	movf	postdec1,w,c
   340   004EBA  50E1               	movf	fsr1l,w,c
   341   004EBC  E1FA               	bnz	copy_data0
   342                           
   343                           ; Clear objects allocated to BANK2 (80 bytes)
   344   004EBE  EE02  F000         	lfsr	0,__pbssBANK2
   345   004EC2  0E50               	movlw	80
   346   004EC4                     clear_0:
   347   004EC4  6AEE               	clrf	postinc0,c
   348   004EC6  06E8               	decf	wreg,f,c
   349   004EC8  E1FD               	bnz	clear_0
   350                           
   351                           ; Clear objects allocated to BANK1 (154 bytes)
   352   004ECA  EE01  F000         	lfsr	0,__pbssBANK1
   353   004ECE  0E9A               	movlw	154
   354   004ED0                     clear_1:
   355   004ED0  6AEE               	clrf	postinc0,c
   356   004ED2  06E8               	decf	wreg,f,c
   357   004ED4  E1FD               	bnz	clear_1
   358                           
   359                           ; Clear objects allocated to BANK0 (41 bytes)
   360   004ED6  EE00  F0D0         	lfsr	0,__pbssBANK0
   361   004EDA  0E29               	movlw	41
   362   004EDC                     clear_2:
   363   004EDC  6AEE               	clrf	postinc0,c
   364   004EDE  06E8               	decf	wreg,f,c
   365   004EE0  E1FD               	bnz	clear_2
   366   004EE2                     end_of_initialization:
   367                           	callstack 0
   368   004EE2                     __end_of__initialization:
   369                           	callstack 0
   370   004EE2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   371   004EE4  6EF8               	movwf	tblptru,c
   372   004EE6  0100               	movlb	0
   373   004EE8  EF6A  F01F         	goto	_main	;jump to C main() function
   374                           
   375                           	psect	bssBANK0
   376   0000D0                     __pbssBANK0:
   377                           	callstack 0
   378   0000D0                     _armIterm:
   379                           	callstack 0
   380   0000D0                     	ds	4
   381   0000D4                     _armAngleError:
   382                           	callstack 0
   383   0000D4                     	ds	4
   384   0000D8                     _Iterm:
   385                           	callstack 0
   386   0000D8                     	ds	4
   387   0000DC                     _PrevAngleError:
   388                           	callstack 0
   389   0000DC                     	ds	4
   390   0000E0                     _AngleError:
   391                           	callstack 0
   392   0000E0                     	ds	4
   393   0000E4                     _width:
   394                           	callstack 0
   395   0000E4                     	ds	2
   396   0000E6                     _prec:
   397                           	callstack 0
   398   0000E6                     	ds	2
   399   0000E8                     _armGy:
   400                           	callstack 0
   401   0000E8                     	ds	2
   402   0000EA                     _armAz:
   403                           	callstack 0
   404   0000EA                     	ds	2
   405   0000EC                     _armAy:
   406                           	callstack 0
   407   0000EC                     	ds	2
   408   0000EE                     _armAx:
   409                           	callstack 0
   410   0000EE                     	ds	2
   411   0000F0                     _Gx:
   412                           	callstack 0
   413   0000F0                     	ds	2
   414   0000F2                     _Az:
   415                           	callstack 0
   416   0000F2                     	ds	2
   417   0000F4                     _Ay:
   418                           	callstack 0
   419   0000F4                     	ds	2
   420   0000F6                     _Ax:
   421                           	callstack 0
   422   0000F6                     	ds	2
   423   0000F8                     _flags:
   424                           	callstack 0
   425   0000F8                     	ds	1
   426                           
   427                           	psect	bssBANK1
   428   000100                     __pbssBANK1:
   429                           	callstack 0
   430   000100                     _armKalmanOutput:
   431                           	callstack 0
   432   000100                     	ds	8
   433   000108                     _KalmanOutput:
   434                           	callstack 0
   435   000108                     	ds	8
   436   000110                     floorf@F521:
   437                           	callstack 0
   438   000110                     	ds	4
   439   000114                     fabsf@F465:
   440                           	callstack 0
   441   000114                     	ds	4
   442   000118                     ___fpclassifyf@F465:
   443                           	callstack 0
   444   000118                     	ds	4
   445   00011C                     _armKalmanGain:
   446                           	callstack 0
   447   00011C                     	ds	4
   448   000120                     _armKalmanAngle:
   449                           	callstack 0
   450   000120                     	ds	4
   451   000124                     _armstateAngle:
   452                           	callstack 0
   453   000124                     	ds	4
   454   000128                     _armGZ:
   455                           	callstack 0
   456   000128                     	ds	4
   457   00012C                     _armGY:
   458                           	callstack 0
   459   00012C                     	ds	4
   460   000130                     _armGX:
   461                           	callstack 0
   462   000130                     	ds	4
   463   000134                     _armt:
   464                           	callstack 0
   465   000134                     	ds	4
   466   000138                     _armAZ:
   467                           	callstack 0
   468   000138                     	ds	4
   469   00013C                     _armAY:
   470                           	callstack 0
   471   00013C                     	ds	4
   472   000140                     _armAX:
   473                           	callstack 0
   474   000140                     	ds	4
   475   000144                     _KalmanGain:
   476                           	callstack 0
   477   000144                     	ds	4
   478   000148                     _KalmanAngle:
   479                           	callstack 0
   480   000148                     	ds	4
   481   00014C                     _wheelOffset:
   482                           	callstack 0
   483   00014C                     	ds	4
   484   000150                     _stateAngle:
   485                           	callstack 0
   486   000150                     	ds	4
   487   000154                     _GX:
   488                           	callstack 0
   489   000154                     	ds	4
   490   000158                     _AZ:
   491                           	callstack 0
   492   000158                     	ds	4
   493   00015C                     _AY:
   494                           	callstack 0
   495   00015C                     	ds	4
   496   000160                     _AX:
   497                           	callstack 0
   498   000160                     	ds	4
   499   000164                     _armPID_U:
   500                           	callstack 0
   501   000164                     	ds	4
   502   000168                     _armDterm:
   503                           	callstack 0
   504   000168                     	ds	4
   505   00016C                     _armPterm:
   506                           	callstack 0
   507   00016C                     	ds	4
   508   000170                     _armPrevIterm:
   509                           	callstack 0
   510   000170                     	ds	4
   511   000174                     _armPrevAngleError:
   512                           	callstack 0
   513   000174                     	ds	4
   514   000178                     _armDesiredAngle:
   515                           	callstack 0
   516   000178                     	ds	4
   517   00017C                     _CurrentArmAngle:
   518                           	callstack 0
   519   00017C                     	ds	4
   520   000180                     _PID_U:
   521                           	callstack 0
   522   000180                     	ds	4
   523   000184                     _Dterm:
   524                           	callstack 0
   525   000184                     	ds	4
   526   000188                     _Pterm:
   527                           	callstack 0
   528   000188                     	ds	4
   529   00018C                     _PrevIterm:
   530                           	callstack 0
   531   00018C                     	ds	4
   532   000190                     _DesiredAngle:
   533                           	callstack 0
   534   000190                     	ds	4
   535   000194                     _CurrentWheelAngle:
   536                           	callstack 0
   537   000194                     	ds	4
   538   000198                     _errno:
   539                           	callstack 0
   540   000198                     	ds	2
   541                           
   542                           	psect	dataBANK1
   543   00019A                     __pdataBANK1:
   544                           	callstack 0
   545   00019A                     _armKalmanUncertaintyAngle:
   546                           	callstack 0
   547   00019A                     	ds	4
   548   00019E                     _armdegreeVar:
   549                           	callstack 0
   550   00019E                     	ds	4
   551   0001A2                     _armOffset:
   552                           	callstack 0
   553   0001A2                     	ds	4
   554   0001A6                     _KalmanUncertaintyAngle:
   555                           	callstack 0
   556   0001A6                     	ds	4
   557   0001AA                     _degreeVar:
   558                           	callstack 0
   559   0001AA                     	ds	4
   560   0001AE                     _armKD:
   561                           	callstack 0
   562   0001AE                     	ds	4
   563   0001B2                     _armKI:
   564                           	callstack 0
   565   0001B2                     	ds	4
   566   0001B6                     _armKP:
   567                           	callstack 0
   568   0001B6                     	ds	4
   569   0001BA                     _armMax:
   570                           	callstack 0
   571   0001BA                     	ds	4
   572   0001BE                     _KD:
   573                           	callstack 0
   574   0001BE                     	ds	4
   575   0001C2                     _KI:
   576                           	callstack 0
   577   0001C2                     	ds	4
   578   0001C6                     _KP:
   579                           	callstack 0
   580   0001C6                     	ds	4
   581   0001CA                     _Max:
   582                           	callstack 0
   583   0001CA                     	ds	4
   584                           
   585                           	psect	bssBANK2
   586   000200                     __pbssBANK2:
   587                           	callstack 0
   588   000200                     _dbuf:
   589                           	callstack 0
   590   000200                     	ds	80
   591                           
   592                           	psect	cstackBANK2
   593   000250                     __pcstackBANK2:
   594                           	callstack 0
   595   000250                     main@buffer:
   596                           	callstack 0
   597                           
   598                           ; 40 bytes @ 0x0
   599   000250                     	ds	40
   600   000278                     main@h:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x28
   604   000278                     	ds	2
   605   00027A                     main@arm_u:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x2A
   609   00027A                     	ds	2
   610   00027C                     main@wheel_u:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x2C
   614   00027C                     	ds	2
   615                           
   616                           	psect	cstackBANK1
   617   0001CE                     __pcstackBANK1:
   618                           	callstack 0
   619   0001CE                     sprintf@ap:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x0
   623   0001CE                     	ds	1
   624   0001CF                     sprintf@f:
   625                           	callstack 0
   626                           
   627                           ; 12 bytes @ 0x1
   628   0001CF                     	ds	12
   629                           
   630                           	psect	cstackBANK0
   631   000060                     __pcstackBANK0:
   632                           	callstack 0
   633   000060                     ___fldiv@rem:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x0
   637   000060                     	ds	4
   638   000064                     ___fldiv@sign:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x4
   642   000064                     	ds	1
   643   000065                     ___fldiv@new_exp:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x5
   647   000065                     	ds	2
   648   000067                     ___fldiv@grs:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x7
   652   000067                     	ds	4
   653   00006B                     ___fldiv@bexp:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0xB
   657   00006B                     	ds	1
   658   00006C                     ___fldiv@aexp:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0xC
   662   00006C                     	ds	1
   663   00006D                     ??_floorf:
   664   00006D                     WheelKalmanFilter@KalmanState:
   665                           	callstack 0
   666   00006D                     ArmKalmanFilter@armKalmanState:
   667                           	callstack 0
   668   00006D                     _atanf$1820:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0xD
   672   00006D                     	ds	4
   673   000071                     WheelKalmanFilter@KalmanUncertainty:
   674                           	callstack 0
   675   000071                     ArmKalmanFilter@armKalmanUncertainty:
   676                           	callstack 0
   677   000071                     _atanf$1822:
   678                           	callstack 0
   679                           
   680                           ; 4 bytes @ 0x11
   681   000071                     	ds	2
   682   000073                     floorf@m:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0x13
   686   000073                     	ds	2
   687   000075                     WheelKalmanFilter@KalmanInput:
   688                           	callstack 0
   689   000075                     ArmKalmanFilter@armKalmanInput:
   690                           	callstack 0
   691   000075                     _atanf$1823:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x15
   695   000075                     	ds	2
   696   000077                     floorf@e:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x17
   700   000077                     	ds	2
   701   000079                     WheelKalmanFilter@KalmanMeasurement:
   702                           	callstack 0
   703   000079                     ArmKalmanFilter@armKalmanMeasurement:
   704                           	callstack 0
   705   000079                     atanf@s1:
   706                           	callstack 0
   707   000079                     floorf@u:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x19
   711   000079                     	ds	4
   712   00007D                     efgtoa@fp:
   713                           	callstack 0
   714   00007D                     atanf@s2:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x1D
   718   00007D                     	ds	2
   719   00007F                     efgtoa@f:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x1F
   723   00007F                     	ds	2
   724   000081                     _atanf$1819:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x21
   728   000081                     	ds	2
   729   000083                     efgtoa@c:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x23
   733   000083                     	ds	1
   734   000084                     ??_efgtoa:
   735                           
   736                           ; 1 bytes @ 0x24
   737   000084                     	ds	1
   738   000085                     _atanf$1821:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x25
   742   000085                     	ds	1
   743   000086                     efgtoa@ne:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x26
   747   000086                     	ds	2
   748   000088                     efgtoa@p:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x28
   752   000088                     	ds	1
   753   000089                     atanf@sign:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x29
   757   000089                     	ds	1
   758   00008A                     efgtoa@t:
   759                           	callstack 0
   760   00008A                     atanf@w:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x2A
   764   00008A                     	ds	2
   765   00008C                     _efgtoa$1470:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x2C
   769   00008C                     	ds	2
   770   00008E                     atanf@id:
   771                           	callstack 0
   772   00008E                     efgtoa@pp:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x2E
   776   00008E                     	ds	1
   777   00008F                     efgtoa@mode:
   778                           	callstack 0
   779   00008F                     atanf@z:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x2F
   783   00008F                     	ds	1
   784   000090                     efgtoa@nmode:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x30
   788   000090                     	ds	1
   789   000091                     efgtoa@d:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x31
   793   000091                     	ds	2
   794   000093                     efgtoa@m:
   795                           	callstack 0
   796   000093                     atanf@ix:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x33
   800   000093                     	ds	2
   801   000095                     efgtoa@e:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x35
   805   000095                     	ds	2
   806   000097                     ?_ArmMPU6050_Read:
   807                           	callstack 0
   808   000097                     ?_WheelMPU6050_Read:
   809                           	callstack 0
   810   000097                     efgtoa@w:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x37
   814   000097                     	ds	2
   815   000099                     efgtoa@ou:
   816                           	callstack 0
   817                           
   818                           ; 4 bytes @ 0x39
   819   000099                     	ds	2
   820   00009B                     ??_ArmMPU6050_Read:
   821   00009B                     ??_WheelMPU6050_Read:
   822                           
   823                           ; 1 bytes @ 0x3B
   824   00009B                     	ds	2
   825   00009D                     efgtoa@i:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x3D
   829   00009D                     	ds	2
   830   00009F                     efgtoa@h:
   831                           	callstack 0
   832   00009F                     _WheelMPU6050_Read$1814:
   833                           	callstack 0
   834   00009F                     _ArmMPU6050_Read$1817:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x3F
   838   00009F                     	ds	4
   839   0000A3                     efgtoa@l:
   840                           	callstack 0
   841   0000A3                     _WheelMPU6050_Read$1815:
   842                           	callstack 0
   843   0000A3                     _ArmMPU6050_Read$1818:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x43
   847   0000A3                     	ds	4
   848   0000A7                     efgtoa@sign:
   849                           	callstack 0
   850   0000A7                     calibrate_wheel_gyro@i:
   851                           	callstack 0
   852   0000A7                     calibrate_arm_gyro@i:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x47
   856   0000A7                     	ds	1
   857   0000A8                     efgtoa@g:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x48
   861   0000A8                     	ds	4
   862   0000AC                     efgtoa@n:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x4C
   866   0000AC                     	ds	2
   867   0000AE                     efgtoa@u:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0x4E
   871   0000AE                     	ds	4
   872   0000B2                     vfpfcnvrt@fp:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x52
   876   0000B2                     	ds	2
   877   0000B4                     vfpfcnvrt@fmt:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x54
   881   0000B4                     	ds	1
   882   0000B5                     vfpfcnvrt@ap:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x55
   886   0000B5                     	ds	2
   887   0000B7                     vfpfcnvrt@convarg:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x57
   891   0000B7                     	ds	4
   892   0000BB                     vfpfcnvrt@c:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x5B
   896   0000BB                     	ds	1
   897   0000BC                     vfpfcnvrt@cp:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x5C
   901   0000BC                     	ds	1
   902   0000BD                     ?_vfprintf:
   903                           	callstack 0
   904   0000BD                     vfprintf@fp:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x5D
   908   0000BD                     	ds	2
   909   0000BF                     vfprintf@fmt:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x5F
   913   0000BF                     	ds	1
   914   0000C0                     vfprintf@ap:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x60
   918   0000C0                     	ds	2
   919   0000C2                     vfprintf@cfmt:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x62
   923   0000C2                     	ds	1
   924   0000C3                     ?_sprintf:
   925                           	callstack 0
   926   0000C3                     sprintf@s:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x63
   930   0000C3                     	ds	2
   931   0000C5                     sprintf@fmt:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x65
   935   0000C5                     	ds	11
   936                           
   937                           	psect	cstackCOMRAM
   938   000001                     __pcstackCOMRAM:
   939                           	callstack 0
   940   000001                     ??_I2C_Master_Wait:
   941   000001                     ?___fpclassifyf:
   942                           	callstack 0
   943   000001                     ?___wmul:
   944                           	callstack 0
   945   000001                     ?___awdiv:
   946                           	callstack 0
   947   000001                     ?___awmod:
   948                           	callstack 0
   949   000001                     ?___lwdiv:
   950                           	callstack 0
   951   000001                     ?___flmul:
   952                           	callstack 0
   953   000001                     ?_fabsf:
   954                           	callstack 0
   955   000001                     ?_labs:
   956                           	callstack 0
   957   000001                     ?___flneg:
   958                           	callstack 0
   959   000001                     ?___fltol:
   960                           	callstack 0
   961   000001                     ?___xxtofl:
   962                           	callstack 0
   963   000001                     I2C_Read@ACK_NACK:
   964                           	callstack 0
   965   000001                     UART_Write@data:
   966                           	callstack 0
   967   000001                     BothWheels@steps:
   968                           	callstack 0
   969   000001                     ___wmul@multiplier:
   970                           	callstack 0
   971   000001                     ___awdiv@dividend:
   972                           	callstack 0
   973   000001                     ___awmod@dividend:
   974                           	callstack 0
   975   000001                     ___lwdiv@dividend:
   976                           	callstack 0
   977   000001                     memcpy@d1:
   978                           	callstack 0
   979   000001                     fputc@c:
   980                           	callstack 0
   981   000001                     strcpy@dest:
   982                           	callstack 0
   983   000001                     ___fleq@ff1:
   984                           	callstack 0
   985   000001                     ___flneg@f1:
   986                           	callstack 0
   987   000001                     ___fltol@f1:
   988                           	callstack 0
   989   000001                     ___flmul@b:
   990                           	callstack 0
   991   000001                     ___xxtofl@val:
   992                           	callstack 0
   993   000001                     ___fpclassifyf@x:
   994                           	callstack 0
   995   000001                     fabsf@x:
   996                           	callstack 0
   997   000001                     labs@a:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x0
  1001   000001                     	ds	1
  1002   000002                     I2C_Master_Write@data:
  1003                           	callstack 0
  1004   000002                     I2C_Read@Data:
  1005                           	callstack 0
  1006   000002                     UART_Write_String@buf:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x1
  1010   000002                     	ds	1
  1011   000003                     ??_BothWheels:
  1012   000003                     I2C_Start@add:
  1013                           	callstack 0
  1014   000003                     strcpy@src:
  1015                           	callstack 0
  1016   000003                     ___wmul@multiplicand:
  1017                           	callstack 0
  1018   000003                     ___awdiv@divisor:
  1019                           	callstack 0
  1020   000003                     ___awmod@divisor:
  1021                           	callstack 0
  1022   000003                     ___lwdiv@divisor:
  1023                           	callstack 0
  1024   000003                     memcpy@s1:
  1025                           	callstack 0
  1026   000003                     fputc@fp:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x2
  1030   000003                     	ds	1
  1031   000004                     ??_MPU6050_Init:
  1032   000004                     ??_strcpy:
  1033   000004                     BothWheels@frequency:
  1034                           	callstack 0
  1035   000004                     UART_Write_String@i:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x3
  1039   000004                     	ds	1
  1040   000005                     ??___fpclassifyf:
  1041   000005                     ??_fputc:
  1042   000005                     ??_labs:
  1043   000005                     ??___fltol:
  1044   000005                     ??___xxtofl:
  1045   000005                     ___awdiv@counter:
  1046                           	callstack 0
  1047   000005                     ___awmod@counter:
  1048                           	callstack 0
  1049   000005                     ___lwdiv@counter:
  1050                           	callstack 0
  1051   000005                     ___wmul@product:
  1052                           	callstack 0
  1053   000005                     memcpy@n:
  1054                           	callstack 0
  1055   000005                     strcpy@d:
  1056                           	callstack 0
  1057   000005                     ___fleq@ff2:
  1058                           	callstack 0
  1059   000005                     ___flmul@a:
  1060                           	callstack 0
  1061   000005                     fabsf@u:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x4
  1065   000005                     	ds	1
  1066   000006                     ___awdiv@sign:
  1067                           	callstack 0
  1068   000006                     ___awmod@sign:
  1069                           	callstack 0
  1070   000006                     BothWheels@i:
  1071                           	callstack 0
  1072   000006                     ___lwdiv@quotient:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x5
  1076   000006                     	ds	1
  1077   000007                     ?_read_prec_or_width:
  1078                           	callstack 0
  1079   000007                     read_prec_or_width@fmt:
  1080                           	callstack 0
  1081   000007                     memcpy@tmp:
  1082                           	callstack 0
  1083   000007                     ___awdiv@quotient:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x6
  1087   000007                     	ds	1
  1088   000008                     BothWheels@direction:
  1089                           	callstack 0
  1090   000008                     ArmMotor@steps:
  1091                           	callstack 0
  1092   000008                     read_prec_or_width@ap:
  1093                           	callstack 0
  1094   000008                     memcpy@d:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x7
  1098   000008                     	ds	1
  1099   000009                     ??___flmul:
  1100   000009                     ??___fleq:
  1101   000009                     ___fltol@sign1:
  1102                           	callstack 0
  1103   000009                     ___xxtofl@sign:
  1104                           	callstack 0
  1105   000009                     ___fpclassifyf@e:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x8
  1109   000009                     	ds	1
  1110   00000A                     ??_ArmMotor:
  1111   00000A                     ___fltol@exp1:
  1112                           	callstack 0
  1113   00000A                     ___xxtofl@exp:
  1114                           	callstack 0
  1115   00000A                     read_prec_or_width@c:
  1116                           	callstack 0
  1117   00000A                     memcpy@s:
  1118                           	callstack 0
  1119   00000A                     fputs@s:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x9
  1123   00000A                     	ds	1
  1124   00000B                     ?_abs:
  1125                           	callstack 0
  1126   00000B                     ArmMotor@direction:
  1127                           	callstack 0
  1128   00000B                     abs@a:
  1129                           	callstack 0
  1130   00000B                     read_prec_or_width@n:
  1131                           	callstack 0
  1132   00000B                     ___xxtofl@arg:
  1133                           	callstack 0
  1134   00000B                     ___fpclassifyf@u:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0xA
  1138   00000B                     	ds	1
  1139   00000C                     ArmMotor@frequency:
  1140                           	callstack 0
  1141   00000C                     fputs@fp:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0xB
  1145   00000C                     	ds	1
  1146   00000D                     ??_abs:
  1147   00000D                     ___flmul@sign:
  1148                           	callstack 0
  1149                           
  1150                           ; 1 bytes @ 0xC
  1151   00000D                     	ds	1
  1152   00000E                     ___flmul@aexp:
  1153                           	callstack 0
  1154   00000E                     fputs@c:
  1155                           	callstack 0
  1156   00000E                     ArmMotor@k:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0xD
  1160   00000E                     	ds	1
  1161   00000F                     fputs@i:
  1162                           	callstack 0
  1163   00000F                     ___flmul@grs:
  1164                           	callstack 0
  1165                           
  1166                           ; 4 bytes @ 0xE
  1167   00000F                     	ds	1
  1168   000010                     ArmMotor@i:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0xF
  1172   000010                     	ds	1
  1173   000011                     pad@fp:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x10
  1177   000011                     	ds	2
  1178   000013                     ___flmul@bexp:
  1179                           	callstack 0
  1180   000013                     pad@buf:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x12
  1184   000013                     	ds	1
  1185   000014                     ___flmul@prod:
  1186                           	callstack 0
  1187                           
  1188                           ; 4 bytes @ 0x13
  1189   000014                     	ds	1
  1190   000015                     pad@p:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x14
  1194   000015                     	ds	2
  1195   000017                     ??_pad:
  1196                           
  1197                           ; 1 bytes @ 0x16
  1198   000017                     	ds	1
  1199   000018                     ___flmul@temp:
  1200                           	callstack 0
  1201   000018                     pad@i:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x17
  1205   000018                     	ds	2
  1206   00001A                     ?___fladd:
  1207                           	callstack 0
  1208   00001A                     dtoa@fp:
  1209                           	callstack 0
  1210   00001A                     ___flge@ff1:
  1211                           	callstack 0
  1212   00001A                     ___fladd@b:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x19
  1216   00001A                     	ds	2
  1217   00001C                     dtoa@d:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x1B
  1221   00001C                     	ds	2
  1222   00001E                     _dtoa$1439:
  1223                           	callstack 0
  1224   00001E                     ___flge@ff2:
  1225                           	callstack 0
  1226   00001E                     ___fladd@a:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x1D
  1230   00001E                     	ds	2
  1231   000020                     dtoa@w:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x1F
  1235   000020                     	ds	2
  1236   000022                     ??___fladd:
  1237   000022                     ??___flge:
  1238   000022                     dtoa@p:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x21
  1242   000022                     	ds	2
  1243   000024                     dtoa@s:
  1244                           	callstack 0
  1245                           
  1246                           ; 1 bytes @ 0x23
  1247   000024                     	ds	1
  1248   000025                     dtoa@i:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x24
  1252   000025                     	ds	1
  1253   000026                     ___fladd@signs:
  1254                           	callstack 0
  1255                           
  1256                           ; 1 bytes @ 0x25
  1257   000026                     	ds	1
  1258   000027                     ___fladd@aexp:
  1259                           	callstack 0
  1260                           
  1261                           ; 1 bytes @ 0x26
  1262   000027                     	ds	1
  1263   000028                     ___fladd@bexp:
  1264                           	callstack 0
  1265                           
  1266                           ; 1 bytes @ 0x27
  1267   000028                     	ds	1
  1268   000029                     ___fladd@grs:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x28
  1272   000029                     	ds	1
  1273   00002A                     ?_sqrtf:
  1274                           	callstack 0
  1275   00002A                     ?___flsub:
  1276                           	callstack 0
  1277   00002A                     ___flsub@b:
  1278                           	callstack 0
  1279   00002A                     sqrtf@x:
  1280                           	callstack 0
  1281                           
  1282                           ; 4 bytes @ 0x29
  1283   00002A                     	ds	4
  1284   00002E                     ??_sqrtf:
  1285   00002E                     ___flsub@a:
  1286                           	callstack 0
  1287                           
  1288                           ; 4 bytes @ 0x2D
  1289   00002E                     	ds	4
  1290   000032                     ?_ArmBalancePID:
  1291                           	callstack 0
  1292   000032                     ?_WheelBalancePID:
  1293                           	callstack 0
  1294   000032                     ArmBalancePID@InputAngle:
  1295                           	callstack 0
  1296   000032                     WheelBalancePID@InputAngle:
  1297                           	callstack 0
  1298                           
  1299                           ; 4 bytes @ 0x31
  1300   000032                     	ds	1
  1301   000033                     sqrtf@s:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x32
  1305   000033                     	ds	3
  1306   000036                     _ArmBalancePID$1809:
  1307                           	callstack 0
  1308   000036                     _WheelBalancePID$1811:
  1309                           	callstack 0
  1310                           
  1311                           ; 4 bytes @ 0x35
  1312   000036                     	ds	1
  1313   000037                     sqrtf@i:
  1314                           	callstack 0
  1315                           
  1316                           ; 4 bytes @ 0x36
  1317   000037                     	ds	3
  1318   00003A                     _ArmBalancePID$1810:
  1319                           	callstack 0
  1320   00003A                     _WheelBalancePID$1812:
  1321                           	callstack 0
  1322                           
  1323                           ; 4 bytes @ 0x39
  1324   00003A                     	ds	1
  1325   00003B                     sqrtf@q:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x3A
  1329   00003B                     	ds	4
  1330   00003F                     sqrtf@t:
  1331                           	callstack 0
  1332                           
  1333                           ; 4 bytes @ 0x3E
  1334   00003F                     	ds	4
  1335   000043                     sqrtf@m:
  1336                           	callstack 0
  1337                           
  1338                           ; 4 bytes @ 0x42
  1339   000043                     	ds	4
  1340   000047                     sqrtf@r:
  1341                           	callstack 0
  1342                           
  1343                           ; 4 bytes @ 0x46
  1344   000047                     	ds	4
  1345   00004B                     sqrtf@ix:
  1346                           	callstack 0
  1347                           
  1348                           ; 4 bytes @ 0x4A
  1349   00004B                     	ds	4
  1350   00004F                     ?___fldiv:
  1351                           	callstack 0
  1352   00004F                     ___fldiv@b:
  1353                           	callstack 0
  1354                           
  1355                           ; 4 bytes @ 0x4E
  1356   00004F                     	ds	4
  1357   000053                     ___fldiv@a:
  1358                           	callstack 0
  1359                           
  1360                           ; 4 bytes @ 0x52
  1361   000053                     	ds	4
  1362   000057                     ??___fldiv:
  1363                           
  1364                           ; 1 bytes @ 0x56
  1365   000057                     	ds	4
  1366   00005B                     ?_atanf:
  1367                           	callstack 0
  1368   00005B                     ?_floorf:
  1369                           	callstack 0
  1370   00005B                     atanf@x:
  1371                           	callstack 0
  1372   00005B                     floorf@x:
  1373                           	callstack 0
  1374   00005B                     _WheelKalmanFilter$1813:
  1375                           	callstack 0
  1376   00005B                     _ArmKalmanFilter$1816:
  1377                           	callstack 0
  1378                           
  1379                           ; 4 bytes @ 0x5A
  1380   00005B                     	ds	4
  1381   00005F                     ??_atanf:
  1382   00005F                     ??_vfpfcnvrt:
  1383                           
  1384                           ; 1 bytes @ 0x5E
  1385   00005F                     	ds	1
  1386   000060                     
  1387                           ; 1 bytes @ 0x5F
  1388 ;;
  1389 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1390 ;;
  1391 ;; *************** function _main *****************
  1392 ;; Defined at:
  1393 ;;		line 138 in file "main.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  buffer         40    0[BANK2 ] unsigned char [40]
  1398 ;;  wheel_u         2   44[BANK2 ] unsigned int 
  1399 ;;  arm_u           2   42[BANK2 ] unsigned int 
  1400 ;;  h               2   40[BANK2 ] int 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1410 ;;      Params:         0       0       0       0       0       0       0       0       0
  1411 ;;      Locals:         0       0       0      46       0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1413 ;;      Totals:         0       0       0      46       0       0       0       0       0
  1414 ;;Total ram usage:       46 bytes
  1415 ;; Hardware stack levels required when called: 8
  1416 ;; This function calls:
  1417 ;;		_ArmBalancePID
  1418 ;;		_ArmMPU6050_Read
  1419 ;;		_ArmMotor
  1420 ;;		_BothWheels
  1421 ;;		_MPU6050_Init
  1422 ;;		_UART_TX_Init
  1423 ;;		_UART_Write_String
  1424 ;;		_WheelBalancePID
  1425 ;;		_WheelMPU6050_Read
  1426 ;;		___flge
  1427 ;;		___fltol
  1428 ;;		_abs
  1429 ;;		_calibrate_arm_gyro
  1430 ;;		_calibrate_wheel_gyro
  1431 ;;		_initializeCLK
  1432 ;;		_sprintf
  1433 ;; This function is called by:
  1434 ;;		Startup code after reset
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text0
  1439   003ED4                     __ptext0:
  1440                           	callstack 0
  1441   003ED4                     _main:
  1442                           	callstack 23
  1443   003ED4                     
  1444                           ;main.c: 140:     initializeCLK();
  1445   003ED4  EC51  F029         	call	_initializeCLK	;wreg free
  1446                           
  1447                           ;main.c: 141:     UART_TX_Init();
  1448   003ED8  EC02  F029         	call	_UART_TX_Init	;wreg free
  1449   003EDC                     
  1450                           ;main.c: 142:     char buffer[40];;main.c: 144:     MPU6050_Init();
  1451   003EDC  ECEF  F021         	call	_MPU6050_Init	;wreg free
  1452   003EE0                     
  1453                           ;main.c: 145:     calibrate_arm_gyro();
  1454   003EE0  ECC3  F028         	call	_calibrate_arm_gyro	;wreg free
  1455   003EE4                     
  1456                           ;main.c: 146:     calibrate_wheel_gyro();
  1457   003EE4  ECAA  F028         	call	_calibrate_wheel_gyro	;wreg free
  1458   003EE8                     
  1459                           ;main.c: 148:     TRISBbits.RB3 = 0;
  1460   003EE8  9693               	bcf	147,3,c	;volatile
  1461   003EEA                     
  1462                           ;main.c: 149:     TRISBbits.RB4 = 0;
  1463   003EEA  9893               	bcf	147,4,c	;volatile
  1464   003EEC                     
  1465                           ;main.c: 150:     TRISDbits.RD1 = 0;
  1466   003EEC  9295               	bcf	149,1,c	;volatile
  1467   003EEE                     
  1468                           ;main.c: 151:     TRISDbits.RD0 = 0;
  1469   003EEE  9095               	bcf	149,0,c	;volatile
  1470   003EF0                     
  1471                           ;main.c: 157:     int h = 0;
  1472   003EF0  0E00               	movlw	0
  1473   003EF2  0102               	movlb	2	; () banked
  1474   003EF4  6F79               	movwf	(main@h+1)& (0+255),b
  1475   003EF6  0E00               	movlw	0
  1476   003EF8  6F78               	movwf	main@h& (0+255),b
  1477   003EFA                     l7335:
  1478                           
  1479                           ;main.c: 161:         CurrentArmAngle = ArmMPU6050_Read();
  1480   003EFA  EC18  F015         	call	_ArmMPU6050_Read	;wreg free
  1481   003EFE  C097  F17C         	movff	?_ArmMPU6050_Read,_CurrentArmAngle
  1482   003F02  C098  F17D         	movff	?_ArmMPU6050_Read+1,_CurrentArmAngle+1
  1483   003F06  C099  F17E         	movff	?_ArmMPU6050_Read+2,_CurrentArmAngle+2
  1484   003F0A  C09A  F17F         	movff	?_ArmMPU6050_Read+3,_CurrentArmAngle+3
  1485   003F0E                     
  1486                           ;main.c: 162:         armPID_U = ArmBalancePID(CurrentArmAngle);
  1487   003F0E  C17C  F032         	movff	_CurrentArmAngle,ArmBalancePID@InputAngle
  1488   003F12  C17D  F033         	movff	_CurrentArmAngle+1,ArmBalancePID@InputAngle+1
  1489   003F16  C17E  F034         	movff	_CurrentArmAngle+2,ArmBalancePID@InputAngle+2
  1490   003F1A  C17F  F035         	movff	_CurrentArmAngle+3,ArmBalancePID@InputAngle+3
  1491   003F1E  EC2A  F01B         	call	_ArmBalancePID	;wreg free
  1492   003F22  C032  F164         	movff	?_ArmBalancePID,_armPID_U
  1493   003F26  C033  F165         	movff	?_ArmBalancePID+1,_armPID_U+1
  1494   003F2A  C034  F166         	movff	?_ArmBalancePID+2,_armPID_U+2
  1495   003F2E  C035  F167         	movff	?_ArmBalancePID+3,_armPID_U+3
  1496   003F32                     
  1497                           ;main.c: 163:         arm_u = abs(armPID_U);
  1498   003F32  C164  F001         	movff	_armPID_U,___fltol@f1
  1499   003F36  C165  F002         	movff	_armPID_U+1,___fltol@f1+1
  1500   003F3A  C166  F003         	movff	_armPID_U+2,___fltol@f1+2
  1501   003F3E  C167  F004         	movff	_armPID_U+3,___fltol@f1+3
  1502   003F42  EC98  F022         	call	___fltol	;wreg free
  1503   003F46  C001  F00B         	movff	?___fltol,abs@a
  1504   003F4A  C002  F00C         	movff	?___fltol+1,abs@a+1
  1505   003F4E  EC76  F028         	call	_abs	;wreg free
  1506   003F52  C00B  F27A         	movff	?_abs,main@arm_u
  1507   003F56  C00C  F27B         	movff	?_abs+1,main@arm_u+1
  1508   003F5A                     
  1509                           ;main.c: 166:         if(armPID_U>0){
  1510   003F5A  0E00               	movlw	0
  1511   003F5C  6E1A               	movwf	___flge@ff1^0,c
  1512   003F5E  0E00               	movlw	0
  1513   003F60  6E1B               	movwf	(___flge@ff1+1)^0,c
  1514   003F62  0E00               	movlw	0
  1515   003F64  6E1C               	movwf	(___flge@ff1+2)^0,c
  1516   003F66  0E00               	movlw	0
  1517   003F68  6E1D               	movwf	(___flge@ff1+3)^0,c
  1518   003F6A  C164  F01E         	movff	_armPID_U,___flge@ff2
  1519   003F6E  C165  F01F         	movff	_armPID_U+1,___flge@ff2+1
  1520   003F72  C166  F020         	movff	_armPID_U+2,___flge@ff2+2
  1521   003F76  C167  F021         	movff	_armPID_U+3,___flge@ff2+3
  1522   003F7A  EC1B  F023         	call	___flge	;wreg free
  1523   003F7E  B0D8               	btfsc	status,0,c
  1524   003F80  EFC4  F01F         	goto	u8101
  1525   003F84  EFC6  F01F         	goto	u8100
  1526   003F88                     u8101:
  1527   003F88  EFCF  F01F         	goto	l7345
  1528   003F8C                     u8100:
  1529   003F8C                     
  1530                           ;main.c: 167:             ArmMotor(1,arm_u);
  1531   003F8C  C27A  F008         	movff	main@arm_u,ArmMotor@steps
  1532   003F90  C27B  F009         	movff	main@arm_u+1,ArmMotor@steps+1
  1533   003F94  0E01               	movlw	1
  1534   003F96  ECE4  F025         	call	_ArmMotor
  1535                           
  1536                           ;main.c: 169:         }
  1537   003F9A  EFD6  F01F         	goto	l7347
  1538   003F9E                     l7345:
  1539                           
  1540                           ;main.c: 171:             ArmMotor(0,arm_u);
  1541   003F9E  C27A  F008         	movff	main@arm_u,ArmMotor@steps
  1542   003FA2  C27B  F009         	movff	main@arm_u+1,ArmMotor@steps+1
  1543   003FA6  0E00               	movlw	0
  1544   003FA8  ECE4  F025         	call	_ArmMotor
  1545   003FAC                     l7347:
  1546                           
  1547                           ;main.c: 175:         CurrentWheelAngle = WheelMPU6050_Read();
  1548   003FAC  ECDB  F016         	call	_WheelMPU6050_Read	;wreg free
  1549   003FB0  C097  F194         	movff	?_WheelMPU6050_Read,_CurrentWheelAngle
  1550   003FB4  C098  F195         	movff	?_WheelMPU6050_Read+1,_CurrentWheelAngle+1
  1551   003FB8  C099  F196         	movff	?_WheelMPU6050_Read+2,_CurrentWheelAngle+2
  1552   003FBC  C09A  F197         	movff	?_WheelMPU6050_Read+3,_CurrentWheelAngle+3
  1553   003FC0                     
  1554                           ;main.c: 176:         PID_U = WheelBalancePID(CurrentWheelAngle);
  1555   003FC0  C194  F032         	movff	_CurrentWheelAngle,WheelBalancePID@InputAngle
  1556   003FC4  C195  F033         	movff	_CurrentWheelAngle+1,WheelBalancePID@InputAngle+1
  1557   003FC8  C196  F034         	movff	_CurrentWheelAngle+2,WheelBalancePID@InputAngle+2
  1558   003FCC  C197  F035         	movff	_CurrentWheelAngle+3,WheelBalancePID@InputAngle+3
  1559   003FD0  EC8C  F018         	call	_WheelBalancePID	;wreg free
  1560   003FD4  C032  F180         	movff	?_WheelBalancePID,_PID_U
  1561   003FD8  C033  F181         	movff	?_WheelBalancePID+1,_PID_U+1
  1562   003FDC  C034  F182         	movff	?_WheelBalancePID+2,_PID_U+2
  1563   003FE0  C035  F183         	movff	?_WheelBalancePID+3,_PID_U+3
  1564   003FE4                     
  1565                           ;main.c: 177:         wheel_u = abs(PID_U);
  1566   003FE4  C180  F001         	movff	_PID_U,___fltol@f1
  1567   003FE8  C181  F002         	movff	_PID_U+1,___fltol@f1+1
  1568   003FEC  C182  F003         	movff	_PID_U+2,___fltol@f1+2
  1569   003FF0  C183  F004         	movff	_PID_U+3,___fltol@f1+3
  1570   003FF4  EC98  F022         	call	___fltol	;wreg free
  1571   003FF8  C001  F00B         	movff	?___fltol,abs@a
  1572   003FFC  C002  F00C         	movff	?___fltol+1,abs@a+1
  1573   004000  EC76  F028         	call	_abs	;wreg free
  1574   004004  C00B  F27C         	movff	?_abs,main@wheel_u
  1575   004008  C00C  F27D         	movff	?_abs+1,main@wheel_u+1
  1576   00400C                     
  1577                           ;main.c: 178:         if(PID_U>0){
  1578   00400C  0E00               	movlw	0
  1579   00400E  6E1A               	movwf	___flge@ff1^0,c
  1580   004010  0E00               	movlw	0
  1581   004012  6E1B               	movwf	(___flge@ff1+1)^0,c
  1582   004014  0E00               	movlw	0
  1583   004016  6E1C               	movwf	(___flge@ff1+2)^0,c
  1584   004018  0E00               	movlw	0
  1585   00401A  6E1D               	movwf	(___flge@ff1+3)^0,c
  1586   00401C  C180  F01E         	movff	_PID_U,___flge@ff2
  1587   004020  C181  F01F         	movff	_PID_U+1,___flge@ff2+1
  1588   004024  C182  F020         	movff	_PID_U+2,___flge@ff2+2
  1589   004028  C183  F021         	movff	_PID_U+3,___flge@ff2+3
  1590   00402C  EC1B  F023         	call	___flge	;wreg free
  1591   004030  B0D8               	btfsc	status,0,c
  1592   004032  EF1D  F020         	goto	u8111
  1593   004036  EF1F  F020         	goto	u8110
  1594   00403A                     u8111:
  1595   00403A  EF28  F020         	goto	l7357
  1596   00403E                     u8110:
  1597   00403E                     
  1598                           ;main.c: 179:             BothWheels(0,wheel_u);
  1599   00403E  C27C  F001         	movff	main@wheel_u,BothWheels@steps
  1600   004042  C27D  F002         	movff	main@wheel_u+1,BothWheels@steps+1
  1601   004046  0E00               	movlw	0
  1602   004048  ECA3  F026         	call	_BothWheels
  1603                           
  1604                           ;main.c: 180:         }
  1605   00404C  EF2F  F020         	goto	l7359
  1606   004050                     l7357:
  1607                           
  1608                           ;main.c: 182:             BothWheels(1,wheel_u);
  1609   004050  C27C  F001         	movff	main@wheel_u,BothWheels@steps
  1610   004054  C27D  F002         	movff	main@wheel_u+1,BothWheels@steps+1
  1611   004058  0E01               	movlw	1
  1612   00405A  ECA3  F026         	call	_BothWheels
  1613   00405E                     l7359:
  1614                           
  1615                           ;main.c: 185:         sprintf(buffer, " WheelAngle =  %.1f  |  ArmAngle= %.1f  %d\r\n ",
      +                           CurrentWheelAngle, CurrentArmAngle,h);
  1616   00405E  0E50               	movlw	low main@buffer
  1617   004060  0100               	movlb	0	; () banked
  1618   004062  6FC3               	movwf	sprintf@s& (0+255),b
  1619   004064  0E02               	movlw	high main@buffer
  1620   004066  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  1621   004068  0E35               	movlw	low STR_1
  1622   00406A  6FC5               	movwf	sprintf@fmt& (0+255),b
  1623   00406C  C194  F0C6         	movff	_CurrentWheelAngle,?_sprintf+3
  1624   004070  C195  F0C7         	movff	_CurrentWheelAngle+1,?_sprintf+4
  1625   004074  C196  F0C8         	movff	_CurrentWheelAngle+2,?_sprintf+5
  1626   004078  C197  F0C9         	movff	_CurrentWheelAngle+3,?_sprintf+6
  1627   00407C  C17C  F0CA         	movff	_CurrentArmAngle,?_sprintf+7
  1628   004080  C17D  F0CB         	movff	_CurrentArmAngle+1,?_sprintf+8
  1629   004084  C17E  F0CC         	movff	_CurrentArmAngle+2,?_sprintf+9
  1630   004088  C17F  F0CD         	movff	_CurrentArmAngle+3,?_sprintf+10
  1631   00408C  C278  F0CE         	movff	main@h,?_sprintf+11
  1632   004090  C279  F0CF         	movff	main@h+1,?_sprintf+12
  1633   004094  ECFF  F026         	call	_sprintf	;wreg free
  1634   004098                     
  1635                           ;main.c: 186:         UART_Write_String(buffer);
  1636   004098  0E50               	movlw	low main@buffer
  1637   00409A  6E02               	movwf	UART_Write_String@buf^0,c
  1638   00409C  0E02               	movlw	high main@buffer
  1639   00409E  6E03               	movwf	(UART_Write_String@buf+1)^0,c
  1640   0040A0  EC03  F028         	call	_UART_Write_String	;wreg free
  1641   0040A4  EF7D  F01F         	goto	l7335
  1642   0040A8  EF00  F000         	goto	start
  1643   0040AC                     __end_of_main:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function _sprintf *****************
  1647 ;; Defined at:
  1648 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  s               2   99[BANK0 ] PTR unsigned char 
  1651 ;;		 -> main@buffer(40), 
  1652 ;;  fmt             1  101[BANK0 ] PTR const unsigned char 
  1653 ;;		 -> STR_1(46), 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  f              12    1[BANK1 ] struct _IO_FILE
  1656 ;;  ret             2    0        int 
  1657 ;;  ap              1    0[BANK1 ] PTR void [1]
  1658 ;;		 -> ?_sprintf(2), 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  2   99[BANK0 ] int 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         0      13       0       0       0       0       0       0       0
  1669 ;;      Locals:         0       0      13       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1671 ;;      Totals:         0      13      13       0       0       0       0       0       0
  1672 ;;Total ram usage:       26 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 7
  1675 ;; This function calls:
  1676 ;;		_vfprintf
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text1
  1683   004DFE                     __ptext1:
  1684                           	callstack 0
  1685   004DFE                     _sprintf:
  1686                           	callstack 23
  1687   004DFE  0EC6               	movlw	low (?_sprintf+3)
  1688   004E00  0101               	movlb	1	; () banked
  1689   004E02  6FCE               	movwf	sprintf@ap& (0+255),b
  1690   004E04  C0C3  F1CF         	movff	sprintf@s,sprintf@f
  1691   004E08  C0C4  F1D0         	movff	sprintf@s+1,sprintf@f+1
  1692   004E0C                     
  1693                           ; BSR set to: 1
  1694   004E0C  0E00               	movlw	0
  1695   004E0E  6FD3               	movwf	(sprintf@f+4)& (0+255),b
  1696   004E10  0E00               	movlw	0
  1697   004E12  6FD2               	movwf	(sprintf@f+3)& (0+255),b
  1698   004E14                     
  1699                           ; BSR set to: 1
  1700   004E14  0E00               	movlw	0
  1701   004E16  6FDA               	movwf	(sprintf@f+11)& (0+255),b
  1702   004E18  0E00               	movlw	0
  1703   004E1A  6FD9               	movwf	(sprintf@f+10)& (0+255),b
  1704   004E1C                     
  1705                           ; BSR set to: 1
  1706   004E1C  0ECF               	movlw	low sprintf@f
  1707   004E1E  0100               	movlb	0	; () banked
  1708   004E20  6FBD               	movwf	vfprintf@fp& (0+255),b
  1709   004E22  0E01               	movlw	high sprintf@f
  1710   004E24  6FBE               	movwf	(vfprintf@fp+1)& (0+255),b
  1711   004E26  C0C5  F0BF         	movff	sprintf@fmt,vfprintf@fmt
  1712   004E2A  0ECE               	movlw	low sprintf@ap
  1713   004E2C  6FC0               	movwf	vfprintf@ap& (0+255),b
  1714   004E2E  0E01               	movlw	high sprintf@ap
  1715   004E30  6FC1               	movwf	(vfprintf@ap+1)& (0+255),b
  1716   004E32  EC76  F027         	call	_vfprintf	;wreg free
  1717   004E36  0101               	movlb	1	; () banked
  1718   004E38  51D2               	movf	(sprintf@f+3)& (0+255),w,b
  1719   004E3A  0100               	movlb	0	; () banked
  1720   004E3C  25C3               	addwf	sprintf@s& (0+255),w,b
  1721   004E3E  6ED9               	movwf	fsr2l,c
  1722   004E40  0101               	movlb	1	; () banked
  1723   004E42  51D3               	movf	(sprintf@f+4)& (0+255),w,b
  1724   004E44  0100               	movlb	0	; () banked
  1725   004E46  21C4               	addwfc	(sprintf@s+1)& (0+255),w,b
  1726   004E48  6EDA               	movwf	fsr2h,c
  1727   004E4A  6ADF               	clrf	indf2,c
  1728   004E4C                     
  1729                           ; BSR set to: 0
  1730   004E4C  0012               	return		;funcret
  1731   004E4E                     __end_of_sprintf:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _vfprintf *****************
  1735 ;; Defined at:
  1736 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  fp              2   93[BANK0 ] PTR struct _IO_FILE
  1739 ;;		 -> sprintf@f(12), 
  1740 ;;  fmt             1   95[BANK0 ] PTR const unsigned char 
  1741 ;;		 -> STR_1(46), 
  1742 ;;  ap              2   96[BANK0 ] PTR PTR void 
  1743 ;;		 -> sprintf@ap(1), 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  cfmt            1   98[BANK0 ] PTR unsigned char 
  1746 ;;		 -> STR_1(46), 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  2   93[BANK0 ] int 
  1749 ;; Registers used:
  1750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1756 ;;      Params:         0       5       0       0       0       0       0       0       0
  1757 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1759 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1760 ;;Total ram usage:        6 bytes
  1761 ;; Hardware stack levels used: 1
  1762 ;; Hardware stack levels required when called: 6
  1763 ;; This function calls:
  1764 ;;		_vfpfcnvrt
  1765 ;; This function is called by:
  1766 ;;		_sprintf
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text2
  1771   004EEC                     __ptext2:
  1772                           	callstack 0
  1773   004EEC                     _vfprintf:
  1774                           	callstack 23
  1775   004EEC                     
  1776                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1777   004EEC  C0BF  F0C2         	movff	vfprintf@fmt,vfprintf@cfmt
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1780   004EF0  EF87  F027         	goto	l7295
  1781   004EF4                     l7293:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1784   004EF4  C0BD  F0B2         	movff	vfprintf@fp,vfpfcnvrt@fp
  1785   004EF8  C0BE  F0B3         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1786   004EFC  0EC2               	movlw	low vfprintf@cfmt
  1787   004EFE  0100               	movlb	0	; () banked
  1788   004F00  6FB4               	movwf	vfpfcnvrt@fmt& (0+255),b
  1789   004F02  C0C0  F0B5         	movff	vfprintf@ap,vfpfcnvrt@ap
  1790   004F06  C0C1  F0B6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1791   004F0A  ECF9  F019         	call	_vfpfcnvrt	;wreg free
  1792   004F0E                     l7295:
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1795   004F0E  C0C2  FFF6         	movff	vfprintf@cfmt,tblptrl
  1796   004F12                     	if	1	;There is more than 1 active tblptr byte
  1797   004F12  0E08               	movlw	high __smallconst
  1798   004F14  6EF7               	movwf	tblptrh,c
  1799   004F16                     	endif
  1800   004F16                     	if	0	;tblptru may be non-zero
  1801   004F16                     	endif
  1802   004F16                     	if	0	;tblptru may be non-zero
  1803   004F16                     	endif
  1804   004F16  0008               	tblrd		*
  1805   004F18  50F5               	movf	tablat,w,c
  1806   004F1A  0900               	iorlw	0
  1807   004F1C  A4D8               	btfss	status,2,c
  1808   004F1E  EF93  F027         	goto	u8091
  1809   004F22  EF95  F027         	goto	u8090
  1810   004F26                     u8091:
  1811   004F26  EF7A  F027         	goto	l7293
  1812   004F2A                     u8090:
  1813   004F2A                     
  1814                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1815   004F2A  0E00               	movlw	0
  1816   004F2C  0100               	movlb	0	; () banked
  1817   004F2E  6FBE               	movwf	(?_vfprintf+1)& (0+255),b
  1818   004F30  0E00               	movlw	0
  1819   004F32  6FBD               	movwf	?_vfprintf& (0+255),b
  1820   004F34                     
  1821                           ; BSR set to: 0
  1822   004F34  0012               	return		;funcret
  1823   004F36                     __end_of_vfprintf:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _vfpfcnvrt *****************
  1827 ;; Defined at:
  1828 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  fp              2   82[BANK0 ] PTR struct _IO_FILE
  1831 ;;		 -> sprintf@f(12), 
  1832 ;;  fmt             1   84[BANK0 ] PTR PTR unsigned char 
  1833 ;;		 -> vfprintf@cfmt(1), 
  1834 ;;  ap              2   85[BANK0 ] PTR PTR void 
  1835 ;;		 -> sprintf@ap(1), 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  convarg         4   87[BANK0 ] struct .
  1838 ;;  cp              1   92[BANK0 ] PTR unsigned char 
  1839 ;;		 -> STR_1(46), 
  1840 ;;  c               1   91[BANK0 ] unsigned char 
  1841 ;;  done            1    0        _Bool 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1851 ;;      Params:         0       5       0       0       0       0       0       0       0
  1852 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1853 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1854 ;;      Totals:         1      11       0       0       0       0       0       0       0
  1855 ;;Total ram usage:       12 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; Hardware stack levels required when called: 5
  1858 ;; This function calls:
  1859 ;;		_dtoa
  1860 ;;		_efgtoa
  1861 ;;		_fputc
  1862 ;;		_read_prec_or_width
  1863 ;; This function is called by:
  1864 ;;		_vfprintf
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text3
  1869   0033F2                     __ptext3:
  1870                           	callstack 0
  1871   0033F2                     _vfpfcnvrt:
  1872                           	callstack 23
  1873   0033F2                     
  1874                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1875   0033F2  0100               	movlb	0	; () banked
  1876   0033F4  51B4               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1877   0033F6  6ED9               	movwf	fsr2l,c
  1878   0033F8  6ADA               	clrf	fsr2h,c
  1879   0033FA  CFDF FFF6          	movff	indf2,tblptrl
  1880   0033FE                     	if	1	;There is more than 1 active tblptr byte
  1881   0033FE  0E08               	movlw	high __smallconst
  1882   003400  6EF7               	movwf	tblptrh,c
  1883   003402                     	endif
  1884   003402                     	if	0	;tblptru may be non-zero
  1885   003402                     	endif
  1886   003402                     	if	0	;tblptru may be non-zero
  1887   003402                     	endif
  1888   003402  0008               	tblrd		*
  1889   003404  50F5               	movf	tablat,w,c
  1890   003406  0A25               	xorlw	37
  1891   003408  A4D8               	btfss	status,2,c
  1892   00340A  EF09  F01A         	goto	u8041
  1893   00340E  EF0B  F01A         	goto	u8040
  1894   003412                     u8041:
  1895   003412  EF16  F01B         	goto	l7285
  1896   003416                     u8040:
  1897   003416                     
  1898                           ; BSR set to: 0
  1899                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1900   003416  51B4               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1901   003418  6ED9               	movwf	fsr2l,c
  1902   00341A  6ADA               	clrf	fsr2h,c
  1903   00341C  2ADF               	incf	indf2,f,c
  1904   00341E                     
  1905                           ; BSR set to: 0
  1906                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1907   00341E  0E00               	movlw	0
  1908   003420  6FE5               	movwf	(_width+1)& (0+255),b
  1909   003422  0E00               	movlw	0
  1910   003424  6FE4               	movwf	_width& (0+255),b
  1911   003426  C0E4  F0F8         	movff	_width,_flags
  1912   00342A                     
  1913                           ; BSR set to: 0
  1914                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1915   00342A  69E6               	setf	_prec& (0+255),b
  1916   00342C  69E7               	setf	(_prec+1)& (0+255),b
  1917   00342E                     
  1918                           ; BSR set to: 0
  1919                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1920   00342E  51B4               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1921   003430  6ED9               	movwf	fsr2l,c
  1922   003432  6ADA               	clrf	fsr2h,c
  1923   003434  CFDF FFF6          	movff	indf2,tblptrl
  1924   003438                     	if	1	;There is more than 1 active tblptr byte
  1925   003438  0E08               	movlw	high __smallconst
  1926   00343A  6EF7               	movwf	tblptrh,c
  1927   00343C                     	endif
  1928   00343C                     	if	0	;tblptru may be non-zero
  1929   00343C                     	endif
  1930   00343C                     	if	0	;tblptru may be non-zero
  1931   00343C                     	endif
  1932   00343C  0008               	tblrd		*
  1933   00343E  50F5               	movf	tablat,w,c
  1934   003440  0A2E               	xorlw	46
  1935   003442  A4D8               	btfss	status,2,c
  1936   003444  EF26  F01A         	goto	u8051
  1937   003448  EF28  F01A         	goto	u8050
  1938   00344C                     u8051:
  1939   00344C  EF38  F01A         	goto	l7233
  1940   003450                     u8050:
  1941   003450                     
  1942                           ; BSR set to: 0
  1943                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1944   003450  51B4               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1945   003452  6ED9               	movwf	fsr2l,c
  1946   003454  6ADA               	clrf	fsr2h,c
  1947   003456  2ADF               	incf	indf2,f,c
  1948   003458                     
  1949                           ; BSR set to: 0
  1950                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1951   003458  C0B4  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1952   00345C  C0B5  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1953   003460  C0B6  F009         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1954   003464  EC90  F025         	call	_read_prec_or_width	;wreg free
  1955   003468  C007  F0E6         	movff	?_read_prec_or_width,_prec
  1956   00346C  C008  F0E7         	movff	?_read_prec_or_width+1,_prec+1
  1957   003470                     l7233:
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1960   003470  0100               	movlb	0	; () banked
  1961   003472  51B4               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1962   003474  6ED9               	movwf	fsr2l,c
  1963   003476  6ADA               	clrf	fsr2h,c
  1964   003478  50DF               	movf	indf2,w,c
  1965   00347A  6FBC               	movwf	vfpfcnvrt@cp& (0+255),b
  1966   00347C                     
  1967                           ; BSR set to: 0
  1968                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1969   00347C  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1970   003480                     	if	1	;There is more than 1 active tblptr byte
  1971   003480  0E08               	movlw	high __smallconst
  1972   003482  6EF7               	movwf	tblptrh,c
  1973   003484                     	endif
  1974   003484                     	if	0	;tblptru may be non-zero
  1975   003484                     	endif
  1976   003484                     	if	0	;tblptru may be non-zero
  1977   003484                     	endif
  1978   003484  0008               	tblrd		*
  1979   003486  50F5               	movf	tablat,w,c
  1980   003488  0A64               	xorlw	100
  1981   00348A  B4D8               	btfsc	status,2,c
  1982   00348C  EF4A  F01A         	goto	u8061
  1983   003490  EF4C  F01A         	goto	u8060
  1984   003494                     u8061:
  1985   003494  EF5A  F01A         	goto	l7239
  1986   003498                     u8060:
  1987   003498                     
  1988                           ; BSR set to: 0
  1989   003498  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1990   00349C                     	if	1	;There is more than 1 active tblptr byte
  1991   00349C  0E08               	movlw	high __smallconst
  1992   00349E  6EF7               	movwf	tblptrh,c
  1993   0034A0                     	endif
  1994   0034A0                     	if	0	;tblptru may be non-zero
  1995   0034A0                     	endif
  1996   0034A0                     	if	0	;tblptru may be non-zero
  1997   0034A0                     	endif
  1998   0034A0  0008               	tblrd		*
  1999   0034A2  50F5               	movf	tablat,w,c
  2000   0034A4  0A69               	xorlw	105
  2001   0034A6  A4D8               	btfss	status,2,c
  2002   0034A8  EF58  F01A         	goto	u8071
  2003   0034AC  EF5A  F01A         	goto	u8070
  2004   0034B0                     u8071:
  2005   0034B0  EF78  F01A         	goto	l7247
  2006   0034B4                     u8070:
  2007   0034B4                     l7239:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2011   0034B4  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2012   0034B8  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2013   0034BC  0E02               	movlw	2
  2014   0034BE  26DF               	addwf	indf2,f,c
  2015   0034C0  5CDF               	subwf	indf2,w,c
  2016   0034C2  6ED9               	movwf	fsr2l,c
  2017   0034C4  6ADA               	clrf	fsr2h,c
  2018   0034C6  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg
  2019   0034CA  CFDE F0B8          	movff	postinc2,vfpfcnvrt@convarg+1
  2020   0034CE                     
  2021                           ; BSR set to: 0
  2022                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2023   0034CE  51B4               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2024   0034D0  6ED9               	movwf	fsr2l,c
  2025   0034D2  6ADA               	clrf	fsr2h,c
  2026   0034D4  29BC               	incf	vfpfcnvrt@cp& (0+255),w,b
  2027   0034D6  6EDF               	movwf	indf2,c
  2028   0034D8                     
  2029                           ; BSR set to: 0
  2030                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2031   0034D8  C0B2  F01A         	movff	vfpfcnvrt@fp,dtoa@fp
  2032   0034DC  C0B3  F01B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2033   0034E0  C0B7  F01C         	movff	vfpfcnvrt@convarg,dtoa@d
  2034   0034E4  C0B8  F01D         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2035   0034E8  EC30  F021         	call	_dtoa	;wreg free
  2036   0034EC  EF29  F01B         	goto	l1246
  2037   0034F0                     l7247:
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2041   0034F0  51B4               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2042   0034F2  6ED9               	movwf	fsr2l,c
  2043   0034F4  6ADA               	clrf	fsr2h,c
  2044   0034F6  50DF               	movf	indf2,w,c
  2045   0034F8  6FBC               	movwf	vfpfcnvrt@cp& (0+255),b
  2046   0034FA                     
  2047                           ; BSR set to: 0
  2048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2049   0034FA  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2050   0034FE                     	if	1	;There is more than 1 active tblptr byte
  2051   0034FE  0E08               	movlw	high __smallconst
  2052   003500  6EF7               	movwf	tblptrh,c
  2053   003502                     	endif
  2054   003502                     	if	0	;tblptru may be non-zero
  2055   003502                     	endif
  2056   003502                     	if	0	;tblptru may be non-zero
  2057   003502                     	endif
  2058   003502  0008               	tblrd		*
  2059   003504  CFF5 F0BB          	movff	tablat,vfpfcnvrt@c
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2062   003508  EF91  F01A         	goto	l7259
  2063   00350C                     l7251:
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2067   00350C  2BBC               	incf	vfpfcnvrt@cp& (0+255),f,b
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
  2070   00350E  EFA0  F01A         	goto	l7261
  2071   003512                     l7253:
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2075   003512  0E6C               	movlw	108
  2076   003514  6FBB               	movwf	vfpfcnvrt@c& (0+255),b
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
  2079   003516  EFA0  F01A         	goto	l7261
  2080   00351A                     l7255:
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2084   00351A  0E00               	movlw	0
  2085   00351C  6FBB               	movwf	vfpfcnvrt@c& (0+255),b
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
  2088   00351E  EFA0  F01A         	goto	l7261
  2089   003522                     l7259:
  2090                           
  2091                           ; BSR set to: 0
  2092   003522  51BB               	movf	vfpfcnvrt@c& (0+255),w,b
  2093                           
  2094                           ; Switch size 1, requested type "simple"
  2095                           ; Number of cases is 3, Range of values is 76 to 108
  2096                           ; switch strategies available:
  2097                           ; Name         Instructions Cycles
  2098                           ; simple_byte           10     6 (average)
  2099                           ;	Chosen strategy is simple_byte
  2100   003524  0A4C               	xorlw	76	; case 76
  2101   003526  B4D8               	btfsc	status,2,c
  2102   003528  EF86  F01A         	goto	l7251
  2103   00352C  0A2A               	xorlw	42	; case 102
  2104   00352E  B4D8               	btfsc	status,2,c
  2105   003530  EF89  F01A         	goto	l7253
  2106   003534  0A0A               	xorlw	10	; case 108
  2107   003536  B4D8               	btfsc	status,2,c
  2108   003538  EF86  F01A         	goto	l7251
  2109   00353C  EF8D  F01A         	goto	l7255
  2110   003540                     l7261:
  2111                           
  2112                           ; BSR set to: 0
  2113   003540  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2114   003544                     	if	1	;There is more than 1 active tblptr byte
  2115   003544  0E08               	movlw	high __smallconst
  2116   003546  6EF7               	movwf	tblptrh,c
  2117   003548                     	endif
  2118   003548                     	if	0	;tblptru may be non-zero
  2119   003548                     	endif
  2120   003548                     	if	0	;tblptru may be non-zero
  2121   003548                     	endif
  2122   003548  0008               	tblrd		*
  2123   00354A  50F5               	movf	tablat,w,c
  2124   00354C  0A66               	xorlw	102
  2125   00354E  A4D8               	btfss	status,2,c
  2126   003550  EFAC  F01A         	goto	u8081
  2127   003554  EFAE  F01A         	goto	u8080
  2128   003558                     u8081:
  2129   003558  EF0F  F01B         	goto	l7281
  2130   00355C                     u8080:
  2131   00355C  EFDA  F01A         	goto	l7269
  2132   003560                     l7263:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2136   003560  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2137   003564  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2138   003568  CFDF F05F          	movff	indf2,??_vfpfcnvrt
  2139   00356C  0E04               	movlw	4
  2140   00356E  26DF               	addwf	indf2,f,c
  2141   003570  505F               	movf	??_vfpfcnvrt^0,w,c
  2142   003572  6ED9               	movwf	fsr2l,c
  2143   003574  6ADA               	clrf	fsr2h,c
  2144   003576  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg
  2145   00357A  CFDE F0B8          	movff	postinc2,vfpfcnvrt@convarg+1
  2146   00357E  CFDE F0B9          	movff	postinc2,vfpfcnvrt@convarg+2
  2147   003582  CFDE F0BA          	movff	postinc2,vfpfcnvrt@convarg+3
  2148                           
  2149                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
  2150   003586  EFE5  F01A         	goto	l7271
  2151   00358A                     l7265:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2155   00358A  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2156   00358E  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2157   003592  CFDF F05F          	movff	indf2,??_vfpfcnvrt
  2158   003596  0E04               	movlw	4
  2159   003598  26DF               	addwf	indf2,f,c
  2160   00359A  505F               	movf	??_vfpfcnvrt^0,w,c
  2161   00359C  6ED9               	movwf	fsr2l,c
  2162   00359E  6ADA               	clrf	fsr2h,c
  2163   0035A0  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg
  2164   0035A4  CFDE F0B8          	movff	postinc2,vfpfcnvrt@convarg+1
  2165   0035A8  CFDE F0B9          	movff	postinc2,vfpfcnvrt@convarg+2
  2166   0035AC  CFDE F0BA          	movff	postinc2,vfpfcnvrt@convarg+3
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
  2169   0035B0  EFE5  F01A         	goto	l7271
  2170   0035B4                     l7269:
  2171                           
  2172                           ; BSR set to: 0
  2173   0035B4  51BB               	movf	vfpfcnvrt@c& (0+255),w,b
  2174                           
  2175                           ; Switch size 1, requested type "simple"
  2176                           ; Number of cases is 2, Range of values is 76 to 108
  2177                           ; switch strategies available:
  2178                           ; Name         Instructions Cycles
  2179                           ; simple_byte            7     4 (average)
  2180                           ;	Chosen strategy is simple_byte
  2181   0035B6  0A4C               	xorlw	76	; case 76
  2182   0035B8  B4D8               	btfsc	status,2,c
  2183   0035BA  EFC5  F01A         	goto	l7265
  2184   0035BE  0A20               	xorlw	32	; case 108
  2185   0035C0  B4D8               	btfsc	status,2,c
  2186   0035C2  EFB0  F01A         	goto	l7263
  2187   0035C6  EFE5  F01A         	goto	l7271
  2188   0035CA                     l7271:
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2192   0035CA  51B4               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2193   0035CC  6ED9               	movwf	fsr2l,c
  2194   0035CE  6ADA               	clrf	fsr2h,c
  2195   0035D0  29BC               	incf	vfpfcnvrt@cp& (0+255),w,b
  2196   0035D2  6EDF               	movwf	indf2,c
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2199   0035D4  EF03  F01B         	goto	l7279
  2200   0035D8                     l7273:
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2204   0035D8  C0B2  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  2205   0035DC  C0B3  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2206   0035E0  C0B7  F07F         	movff	vfpfcnvrt@convarg,efgtoa@f
  2207   0035E4  C0B8  F080         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2208   0035E8  C0B9  F081         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2209   0035EC  C0BA  F082         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2210   0035F0  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2211   0035F4                     	if	1	;There is more than 1 active tblptr byte
  2212   0035F4  0E08               	movlw	high __smallconst
  2213   0035F6  6EF7               	movwf	tblptrh,c
  2214   0035F8                     	endif
  2215   0035F8                     	if	0	;tblptru may be non-zero
  2216   0035F8                     	endif
  2217   0035F8                     	if	0	;tblptru may be non-zero
  2218   0035F8                     	endif
  2219   0035F8  0008               	tblrd		*
  2220   0035FA  CFF5 F083          	movff	tablat,efgtoa@c
  2221   0035FE  EC36  F004         	call	_efgtoa	;wreg free
  2222   003602  EF29  F01B         	goto	l1246
  2223   003606                     l7279:
  2224                           
  2225                           ; BSR set to: 0
  2226   003606  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2227   00360A                     	if	1	;There is more than 1 active tblptr byte
  2228   00360A  0E08               	movlw	high __smallconst
  2229   00360C  6EF7               	movwf	tblptrh,c
  2230   00360E                     	endif
  2231   00360E                     	if	0	;tblptru may be non-zero
  2232   00360E                     	endif
  2233   00360E                     	if	0	;tblptru may be non-zero
  2234   00360E                     	endif
  2235   00360E  0008               	tblrd		*
  2236   003610  50F5               	movf	tablat,w,c
  2237                           
  2238                           ; Switch size 1, requested type "simple"
  2239                           ; Number of cases is 1, Range of values is 102 to 102
  2240                           ; switch strategies available:
  2241                           ; Name         Instructions Cycles
  2242                           ; simple_byte            4     3 (average)
  2243                           ;	Chosen strategy is simple_byte
  2244   003612  0A66               	xorlw	102	; case 102
  2245   003614  B4D8               	btfsc	status,2,c
  2246   003616  EFEC  F01A         	goto	l7273
  2247   00361A  EF0F  F01B         	goto	l7281
  2248   00361E                     l7281:
  2249                           
  2250                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2251   00361E  0100               	movlb	0	; () banked
  2252   003620  51B4               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2253   003622  6ED9               	movwf	fsr2l,c
  2254   003624  6ADA               	clrf	fsr2h,c
  2255   003626  2ADF               	incf	indf2,f,c
  2256   003628  EF29  F01B         	goto	l1246
  2257   00362C                     l7285:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2261   00362C  51B4               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2262   00362E  6ED9               	movwf	fsr2l,c
  2263   003630  6ADA               	clrf	fsr2h,c
  2264   003632  CFDF FFF6          	movff	indf2,tblptrl
  2265   003636                     	if	1	;There is more than 1 active tblptr byte
  2266   003636  0E08               	movlw	high __smallconst
  2267   003638  6EF7               	movwf	tblptrh,c
  2268   00363A                     	endif
  2269   00363A                     	if	0	;tblptru may be non-zero
  2270   00363A                     	endif
  2271   00363A                     	if	0	;tblptru may be non-zero
  2272   00363A                     	endif
  2273   00363A  0008               	tblrd		*
  2274   00363C  50F5               	movf	tablat,w,c
  2275   00363E  6E01               	movwf	fputc@c^0,c
  2276   003640  6A02               	clrf	(fputc@c+1)^0,c
  2277   003642  C0B2  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2278   003646  C0B3  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2279   00364A  EC1C  F024         	call	_fputc	;wreg free
  2280   00364E  EF0F  F01B         	goto	l7281
  2281   003652                     l1246:
  2282   003652  0012               	return		;funcret
  2283   003654                     __end_of_vfpfcnvrt:
  2284                           	callstack 0
  2285                           
  2286 ;; *************** function _read_prec_or_width *****************
  2287 ;; Defined at:
  2288 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2291 ;;		 -> vfprintf@cfmt(1), 
  2292 ;;  ap              2    7[COMRAM] PTR PTR void [1]
  2293 ;;		 -> sprintf@ap(1), 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  c               1    9[COMRAM] unsigned char 
  2296 ;;  n               2   10[COMRAM] int 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  2    6[COMRAM] int 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2306 ;;      Params:         3       0       0       0       0       0       0       0       0
  2307 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2309 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2310 ;;Total ram usage:        6 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 1
  2313 ;; This function calls:
  2314 ;;		___wmul
  2315 ;; This function is called by:
  2316 ;;		_vfpfcnvrt
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text4
  2321   004B20                     __ptext4:
  2322                           	callstack 0
  2323   004B20                     _read_prec_or_width:
  2324                           	callstack 26
  2325   004B20                     
  2326                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2327   004B20  0E00               	movlw	0
  2328   004B22  6E0C               	movwf	(read_prec_or_width@n+1)^0,c
  2329   004B24  0E00               	movlw	0
  2330   004B26  6E0B               	movwf	read_prec_or_width@n^0,c
  2331   004B28                     
  2332                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2333   004B28  5007               	movf	read_prec_or_width@fmt^0,w,c
  2334   004B2A  6ED9               	movwf	fsr2l,c
  2335   004B2C  6ADA               	clrf	fsr2h,c
  2336   004B2E  CFDF FFF6          	movff	indf2,tblptrl
  2337   004B32                     	if	1	;There is more than 1 active tblptr byte
  2338   004B32  0E08               	movlw	high __smallconst
  2339   004B34  6EF7               	movwf	tblptrh,c
  2340   004B36                     	endif
  2341   004B36                     	if	0	;tblptru may be non-zero
  2342   004B36                     	endif
  2343   004B36                     	if	0	;tblptru may be non-zero
  2344   004B36                     	endif
  2345   004B36  0008               	tblrd		*
  2346   004B38  50F5               	movf	tablat,w,c
  2347   004B3A  0A2A               	xorlw	42
  2348   004B3C  A4D8               	btfss	status,2,c
  2349   004B3E  EFA3  F025         	goto	u8021
  2350   004B42  EFA5  F025         	goto	u8020
  2351   004B46                     u8021:
  2352   004B46  EFCC  F025         	goto	l7217
  2353   004B4A                     u8020:
  2354   004B4A                     
  2355                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2356   004B4A  5007               	movf	read_prec_or_width@fmt^0,w,c
  2357   004B4C  6ED9               	movwf	fsr2l,c
  2358   004B4E  6ADA               	clrf	fsr2h,c
  2359   004B50  2ADF               	incf	indf2,f,c
  2360   004B52                     
  2361                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2362   004B52  C008  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2363   004B56  C009  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2364   004B5A  0E02               	movlw	2
  2365   004B5C  26DF               	addwf	indf2,f,c
  2366   004B5E  5CDF               	subwf	indf2,w,c
  2367   004B60  6ED9               	movwf	fsr2l,c
  2368   004B62  6ADA               	clrf	fsr2h,c
  2369   004B64  CFDE F00B          	movff	postinc2,read_prec_or_width@n
  2370   004B68  CFDE F00C          	movff	postinc2,read_prec_or_width@n+1
  2371                           
  2372                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2373   004B6C  EFDF  F025         	goto	l1234
  2374   004B70                     l7213:
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2377   004B70  C00B  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2378   004B74  C00C  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2379   004B78  0E00               	movlw	0
  2380   004B7A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2381   004B7C  0E0A               	movlw	10
  2382   004B7E  6E03               	movwf	___wmul@multiplicand^0,c
  2383   004B80  ECDC  F028         	call	___wmul	;wreg free
  2384   004B84  500A               	movf	read_prec_or_width@c^0,w,c
  2385   004B86  2401               	addwf	?___wmul^0,w,c
  2386   004B88  6E0B               	movwf	read_prec_or_width@n^0,c
  2387   004B8A  0E00               	movlw	0
  2388   004B8C  2002               	addwfc	(?___wmul+1)^0,w,c
  2389   004B8E  6E0C               	movwf	(read_prec_or_width@n+1)^0,c
  2390   004B90                     
  2391                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2392   004B90  5007               	movf	read_prec_or_width@fmt^0,w,c
  2393   004B92  6ED9               	movwf	fsr2l,c
  2394   004B94  6ADA               	clrf	fsr2h,c
  2395   004B96  2ADF               	incf	indf2,f,c
  2396   004B98                     l7217:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2399   004B98  5007               	movf	read_prec_or_width@fmt^0,w,c
  2400   004B9A  6ED9               	movwf	fsr2l,c
  2401   004B9C  6ADA               	clrf	fsr2h,c
  2402   004B9E  CFDF FFF6          	movff	indf2,tblptrl
  2403   004BA2                     	if	1	;There is more than 1 active tblptr byte
  2404   004BA2  0E08               	movlw	high __smallconst
  2405   004BA4  6EF7               	movwf	tblptrh,c
  2406   004BA6                     	endif
  2407   004BA6                     	if	0	;tblptru may be non-zero
  2408   004BA6                     	endif
  2409   004BA6                     	if	0	;tblptru may be non-zero
  2410   004BA6                     	endif
  2411   004BA6  0008               	tblrd		*
  2412   004BA8  50F5               	movf	tablat,w,c
  2413   004BAA  0FD0               	addlw	208
  2414   004BAC  6E0A               	movwf	read_prec_or_width@c^0,c
  2415   004BAE  0E09               	movlw	9
  2416   004BB0  640A               	cpfsgt	read_prec_or_width@c^0,c
  2417   004BB2  EFDD  F025         	goto	u8031
  2418   004BB6  EFDF  F025         	goto	u8030
  2419   004BBA                     u8031:
  2420   004BBA  EFB8  F025         	goto	l7213
  2421   004BBE                     u8030:
  2422   004BBE                     l1234:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2425   004BBE  C00B  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2426   004BC2  C00C  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2427   004BC6  0012               	return		;funcret
  2428   004BC8                     __end_of_read_prec_or_width:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function ___wmul *****************
  2432 ;; Defined at:
  2433 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  multiplier      2    0[COMRAM] unsigned int 
  2436 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  product         2    4[COMRAM] unsigned int 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  2    0[COMRAM] unsigned int 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0, prodl, prodh
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2448 ;;      Params:         4       0       0       0       0       0       0       0       0
  2449 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2451 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2452 ;;Total ram usage:        6 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; This function calls:
  2455 ;;		Nothing
  2456 ;; This function is called by:
  2457 ;;		_read_prec_or_width
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text5
  2462   0051B8                     __ptext5:
  2463                           	callstack 0
  2464   0051B8                     ___wmul:
  2465                           	callstack 26
  2466   0051B8  5001               	movf	___wmul@multiplier^0,w,c
  2467   0051BA  0203               	mulwf	___wmul@multiplicand^0,c
  2468   0051BC  CFF3 F005          	movff	prodl,___wmul@product
  2469   0051C0  CFF4 F006          	movff	prodh,___wmul@product+1
  2470   0051C4  5001               	movf	___wmul@multiplier^0,w,c
  2471   0051C6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2472   0051C8  50F3               	movf	243,w,c
  2473   0051CA  2606               	addwf	(___wmul@product+1)^0,f,c
  2474   0051CC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2475   0051CE  0203               	mulwf	___wmul@multiplicand^0,c
  2476   0051D0  50F3               	movf	243,w,c
  2477   0051D2  2606               	addwf	(___wmul@product+1)^0,f,c
  2478   0051D4  C005  F001         	movff	___wmul@product,?___wmul
  2479   0051D8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2480   0051DC  0012               	return		;funcret
  2481   0051DE                     __end_of___wmul:
  2482                           	callstack 0
  2483                           
  2484 ;; *************** function _efgtoa *****************
  2485 ;; Defined at:
  2486 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  2489 ;;		 -> sprintf@f(12), 
  2490 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  2491 ;;  c               1   35[BANK0 ] unsigned char 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  u               4   78[BANK0 ] struct flui
  2494 ;;  g               4   72[BANK0 ] struct flui
  2495 ;;  l               4   67[BANK0 ] struct flui
  2496 ;;  h               4   63[BANK0 ] struct flui
  2497 ;;  ou              4   57[BANK0 ] struct flui
  2498 ;;  n               2   76[BANK0 ] int 
  2499 ;;  i               2   61[BANK0 ] int 
  2500 ;;  w               2   55[BANK0 ] int 
  2501 ;;  e               2   53[BANK0 ] int 
  2502 ;;  m               2   51[BANK0 ] int 
  2503 ;;  d               2   49[BANK0 ] int 
  2504 ;;  t               2   42[BANK0 ] int 
  2505 ;;  p               2   40[BANK0 ] int 
  2506 ;;  ne              2   38[BANK0 ] int 
  2507 ;;  sign            1   71[BANK0 ] unsigned char 
  2508 ;;  nmode           1   48[BANK0 ] unsigned char 
  2509 ;;  mode            1   47[BANK0 ] unsigned char 
  2510 ;;  pp              1   46[BANK0 ] unsigned char 
  2511 ;;  esign           1    0        unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2521 ;;      Params:         0       7       0       0       0       0       0       0       0
  2522 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2523 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2524 ;;      Totals:         0      53       0       0       0       0       0       0       0
  2525 ;;Total ram usage:       53 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; Hardware stack levels required when called: 4
  2528 ;; This function calls:
  2529 ;;		___fladd
  2530 ;;		___fldiv
  2531 ;;		___fleq
  2532 ;;		___flge
  2533 ;;		___flmul
  2534 ;;		___flneg
  2535 ;;		___flsub
  2536 ;;		___fltol
  2537 ;;		___fpclassifyf
  2538 ;;		_floorf
  2539 ;;		_labs
  2540 ;;		_memcpy
  2541 ;;		_pad
  2542 ;;		_strcpy
  2543 ;; This function is called by:
  2544 ;;		_vfpfcnvrt
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text6
  2549   00086C                     __ptext6:
  2550                           	callstack 0
  2551   00086C                     _efgtoa:
  2552                           	callstack 23
  2553   00086C                     
  2554                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2555   00086C  0E00               	movlw	0
  2556   00086E  0100               	movlb	0	; () banked
  2557   000870  6FA7               	movwf	efgtoa@sign& (0+255),b
  2558   000872                     
  2559                           ; BSR set to: 0
  2560                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2561   000872  C07F  F0A8         	movff	efgtoa@f,efgtoa@g
  2562   000876  C080  F0A9         	movff	efgtoa@f+1,efgtoa@g+1
  2563   00087A  C081  F0AA         	movff	efgtoa@f+2,efgtoa@g+2
  2564   00087E  C082  F0AB         	movff	efgtoa@f+3,efgtoa@g+3
  2565   000882                     
  2566                           ; BSR set to: 0
  2567                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2568   000882  BFAB               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2569   000884  EF48  F004         	goto	u7700
  2570   000888  EF46  F004         	goto	u7701
  2571   00088C                     u7701:
  2572   00088C  EF5C  F004         	goto	l6993
  2573   000890                     u7700:
  2574   000890                     
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2577   000890  0E01               	movlw	1
  2578   000892  6FA7               	movwf	efgtoa@sign& (0+255),b
  2579   000894                     
  2580                           ; BSR set to: 0
  2581                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2582   000894  C0A8  F001         	movff	efgtoa@g,___flneg@f1
  2583   000898  C0A9  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2584   00089C  C0AA  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2585   0008A0  C0AB  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2586   0008A4  EC40  F028         	call	___flneg	;wreg free
  2587   0008A8  C001  F0A8         	movff	?___flneg,efgtoa@g
  2588   0008AC  C002  F0A9         	movff	?___flneg+1,efgtoa@g+1
  2589   0008B0  C003  F0AA         	movff	?___flneg+2,efgtoa@g+2
  2590   0008B4  C004  F0AB         	movff	?___flneg+3,efgtoa@g+3
  2591   0008B8                     l6993:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2594   0008B8  0E00               	movlw	0
  2595   0008BA  0100               	movlb	0	; () banked
  2596   0008BC  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  2597   0008BE  0E00               	movlw	0
  2598   0008C0  6FAC               	movwf	efgtoa@n& (0+255),b
  2599   0008C2                     
  2600                           ; BSR set to: 0
  2601                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2602   0008C2  C0E4  F097         	movff	_width,efgtoa@w
  2603   0008C6  C0E5  F098         	movff	_width+1,efgtoa@w+1
  2604   0008CA                     
  2605                           ; BSR set to: 0
  2606                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2607   0008CA  51A7               	movf	efgtoa@sign& (0+255),w,b
  2608   0008CC  B4D8               	btfsc	status,2,c
  2609   0008CE  EF6B  F004         	goto	u7711
  2610   0008D2  EF6D  F004         	goto	u7710
  2611   0008D6                     u7711:
  2612   0008D6  EF81  F004         	goto	l7007
  2613   0008DA                     u7710:
  2614   0008DA                     
  2615                           ; BSR set to: 0
  2616                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2617   0008DA  51A7               	movf	efgtoa@sign& (0+255),w,b
  2618   0008DC  A4D8               	btfss	status,2,c
  2619   0008DE  EF73  F004         	goto	u7721
  2620   0008E2  EF75  F004         	goto	u7720
  2621   0008E6                     u7721:
  2622   0008E6  EF7B  F004         	goto	l7003
  2623   0008EA                     u7720:
  2624   0008EA                     
  2625                           ; BSR set to: 0
  2626   0008EA  0E00               	movlw	0
  2627   0008EC  6F8D               	movwf	(_efgtoa$1470+1)& (0+255),b
  2628   0008EE  0E2B               	movlw	43
  2629   0008F0  6F8C               	movwf	_efgtoa$1470& (0+255),b
  2630   0008F2  EF7F  F004         	goto	l7005
  2631   0008F6                     l7003:
  2632                           
  2633                           ; BSR set to: 0
  2634   0008F6  0E00               	movlw	0
  2635   0008F8  6F8D               	movwf	(_efgtoa$1470+1)& (0+255),b
  2636   0008FA  0E2D               	movlw	45
  2637   0008FC  6F8C               	movwf	_efgtoa$1470& (0+255),b
  2638   0008FE                     l7005:
  2639                           
  2640                           ; BSR set to: 0
  2641   0008FE  C08C  F0A7         	movff	_efgtoa$1470,efgtoa@sign
  2642   000902                     l7007:
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2646   000902  C0A8  F001         	movff	efgtoa@g,___fpclassifyf@x
  2647   000906  C0A9  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2648   00090A  C0AA  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2649   00090E  C0AB  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2650   000912  EC9D  F023         	call	___fpclassifyf	;wreg free
  2651   000916  0401               	decf	?___fpclassifyf^0,w,c
  2652   000918  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2653   00091A  A4D8               	btfss	status,2,c
  2654   00091C  EF92  F004         	goto	u7731
  2655   000920  EF94  F004         	goto	u7730
  2656   000924                     u7731:
  2657   000924  EFC5  F004         	goto	l7025
  2658   000928                     u7730:
  2659   000928                     
  2660                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2661   000928  0100               	movlb	0	; () banked
  2662   00092A  51A7               	movf	efgtoa@sign& (0+255),w,b
  2663   00092C  B4D8               	btfsc	status,2,c
  2664   00092E  EF9B  F004         	goto	u7741
  2665   000932  EF9D  F004         	goto	u7740
  2666   000936                     u7741:
  2667   000936  EFA6  F004         	goto	l7017
  2668   00093A                     u7740:
  2669   00093A                     
  2670                           ; BSR set to: 0
  2671                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2672   00093A  C0A7  F200         	movff	efgtoa@sign,_dbuf
  2673   00093E                     
  2674                           ; BSR set to: 0
  2675                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
  2676   00093E  0797               	decf	efgtoa@w& (0+255),f,b
  2677   000940  A0D8               	btfss	status,0,c
  2678   000942  0798               	decf	(efgtoa@w+1)& (0+255),f,b
  2679   000944                     
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2682   000944  0E00               	movlw	0
  2683   000946  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  2684   000948  0E01               	movlw	1
  2685   00094A  6FAC               	movwf	efgtoa@n& (0+255),b
  2686   00094C                     l7017:
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2690   00094C  0E00               	movlw	low _dbuf
  2691   00094E  25AC               	addwf	efgtoa@n& (0+255),w,b
  2692   000950  6E01               	movwf	strcpy@dest^0,c
  2693   000952  0E02               	movlw	high _dbuf
  2694   000954  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2695   000956  6E02               	movwf	(strcpy@dest+1)^0,c
  2696   000958  0E63               	movlw	low STR_2
  2697   00095A  6E03               	movwf	strcpy@src^0,c
  2698   00095C  EC23  F028         	call	_strcpy	;wreg free
  2699   000960                     l7019:
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2702   000960  0100               	movlb	0	; () banked
  2703   000962  0EFD               	movlw	253
  2704   000964  2797               	addwf	efgtoa@w& (0+255),f,b
  2705   000966  0EFF               	movlw	255
  2706   000968  2398               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2707   00096A                     
  2708                           ; BSR set to: 0
  2709                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2710   00096A  C07D  F011         	movff	efgtoa@fp,pad@fp
  2711   00096E  C07E  F012         	movff	efgtoa@fp+1,pad@fp+1
  2712   000972  0E00               	movlw	low _dbuf
  2713   000974  6E13               	movwf	pad@buf^0,c
  2714   000976  0E02               	movlw	high _dbuf
  2715   000978  6E14               	movwf	(pad@buf+1)^0,c
  2716   00097A  C097  F015         	movff	efgtoa@w,pad@p
  2717   00097E  C098  F016         	movff	efgtoa@w+1,pad@p+1
  2718   000982  EC6C  F026         	call	_pad	;wreg free
  2719   000986  EF2D  F009         	goto	l1189
  2720   00098A                     l7025:
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2723   00098A  C0A8  F001         	movff	efgtoa@g,___fpclassifyf@x
  2724   00098E  C0A9  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2725   000992  C0AA  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2726   000996  C0AB  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2727   00099A  EC9D  F023         	call	___fpclassifyf	;wreg free
  2728   00099E  5001               	movf	?___fpclassifyf^0,w,c
  2729   0009A0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2730   0009A2  A4D8               	btfss	status,2,c
  2731   0009A4  EFD6  F004         	goto	u7751
  2732   0009A8  EFD8  F004         	goto	u7750
  2733   0009AC                     u7751:
  2734   0009AC  EFF6  F004         	goto	l7043
  2735   0009B0                     u7750:
  2736   0009B0                     
  2737                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2738   0009B0  0100               	movlb	0	; () banked
  2739   0009B2  51A7               	movf	efgtoa@sign& (0+255),w,b
  2740   0009B4  B4D8               	btfsc	status,2,c
  2741   0009B6  EFDF  F004         	goto	u7761
  2742   0009BA  EFE1  F004         	goto	u7760
  2743   0009BE                     u7761:
  2744   0009BE  EFEA  F004         	goto	l7035
  2745   0009C2                     u7760:
  2746   0009C2                     
  2747                           ; BSR set to: 0
  2748                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2749   0009C2  C0A7  F200         	movff	efgtoa@sign,_dbuf
  2750   0009C6                     
  2751                           ; BSR set to: 0
  2752                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
  2753   0009C6  0797               	decf	efgtoa@w& (0+255),f,b
  2754   0009C8  A0D8               	btfss	status,0,c
  2755   0009CA  0798               	decf	(efgtoa@w+1)& (0+255),f,b
  2756   0009CC                     
  2757                           ; BSR set to: 0
  2758                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2759   0009CC  0E00               	movlw	0
  2760   0009CE  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  2761   0009D0  0E01               	movlw	1
  2762   0009D2  6FAC               	movwf	efgtoa@n& (0+255),b
  2763   0009D4                     l7035:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2767   0009D4  0E00               	movlw	low _dbuf
  2768   0009D6  25AC               	addwf	efgtoa@n& (0+255),w,b
  2769   0009D8  6E01               	movwf	strcpy@dest^0,c
  2770   0009DA  0E02               	movlw	high _dbuf
  2771   0009DC  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2772   0009DE  6E02               	movwf	(strcpy@dest+1)^0,c
  2773   0009E0  0E67               	movlw	low STR_5
  2774   0009E2  6E03               	movwf	strcpy@src^0,c
  2775   0009E4  EC23  F028         	call	_strcpy	;wreg free
  2776   0009E8  EFB0  F004         	goto	l7019
  2777   0009EC                     l7043:
  2778                           
  2779                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2780   0009EC  0E00               	movlw	0
  2781   0009EE  0100               	movlb	0	; () banked
  2782   0009F0  6FAE               	movwf	efgtoa@u& (0+255),b
  2783   0009F2  0E00               	movlw	0
  2784   0009F4  6FAF               	movwf	(efgtoa@u+1)& (0+255),b
  2785   0009F6  0E80               	movlw	128
  2786   0009F8  6FB0               	movwf	(efgtoa@u+2)& (0+255),b
  2787   0009FA  0E3F               	movlw	63
  2788   0009FC  6FB1               	movwf	(efgtoa@u+3)& (0+255),b
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2791   0009FE  0E00               	movlw	0
  2792   000A00  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  2793   000A02  0E00               	movlw	0
  2794   000A04  6F95               	movwf	efgtoa@e& (0+255),b
  2795   000A06                     
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2798   000A06  C0A8  F001         	movff	efgtoa@g,___fleq@ff1
  2799   000A0A  C0A9  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2800   000A0E  C0AA  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2801   000A12  C0AB  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2802   000A16  0E00               	movlw	0
  2803   000A18  6E05               	movwf	___fleq@ff2^0,c
  2804   000A1A  0E00               	movlw	0
  2805   000A1C  6E06               	movwf	(___fleq@ff2+1)^0,c
  2806   000A1E  0E00               	movlw	0
  2807   000A20  6E07               	movwf	(___fleq@ff2+2)^0,c
  2808   000A22  0E00               	movlw	0
  2809   000A24  6E08               	movwf	(___fleq@ff2+3)^0,c
  2810   000A26  EC3B  F025         	call	___fleq	;wreg free
  2811   000A2A  B0D8               	btfsc	status,0,c
  2812   000A2C  EF1A  F005         	goto	u7771
  2813   000A30  EF1C  F005         	goto	u7770
  2814   000A34                     u7771:
  2815   000A34  EFFB  F005         	goto	l1192
  2816   000A38                     u7770:
  2817   000A38  EF29  F005         	goto	l7051
  2818   000A3C                     l1194:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2821   000A3C  C099  F0AE         	movff	efgtoa@ou,efgtoa@u
  2822   000A40  C09A  F0AF         	movff	efgtoa@ou+1,efgtoa@u+1
  2823   000A44  C09B  F0B0         	movff	efgtoa@ou+2,efgtoa@u+2
  2824   000A48  C09C  F0B1         	movff	efgtoa@ou+3,efgtoa@u+3
  2825   000A4C                     
  2826                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2827   000A4C  0100               	movlb	0	; () banked
  2828   000A4E  4B95               	infsnz	efgtoa@e& (0+255),f,b
  2829   000A50  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  2830   000A52                     l7051:
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2833   000A52  C0AE  F001         	movff	efgtoa@u,___flmul@b
  2834   000A56  C0AF  F002         	movff	efgtoa@u+1,___flmul@b+1
  2835   000A5A  C0B0  F003         	movff	efgtoa@u+2,___flmul@b+2
  2836   000A5E  C0B1  F004         	movff	efgtoa@u+3,___flmul@b+3
  2837   000A62  0E00               	movlw	0
  2838   000A64  6E05               	movwf	___flmul@a^0,c
  2839   000A66  0E00               	movlw	0
  2840   000A68  6E06               	movwf	(___flmul@a+1)^0,c
  2841   000A6A  0E20               	movlw	32
  2842   000A6C  6E07               	movwf	(___flmul@a+2)^0,c
  2843   000A6E  0E41               	movlw	65
  2844   000A70  6E08               	movwf	(___flmul@a+3)^0,c
  2845   000A72  EC46  F00F         	call	___flmul	;wreg free
  2846   000A76  C001  F099         	movff	?___flmul,efgtoa@ou
  2847   000A7A  C002  F09A         	movff	?___flmul+1,efgtoa@ou+1
  2848   000A7E  C003  F09B         	movff	?___flmul+2,efgtoa@ou+2
  2849   000A82  C004  F09C         	movff	?___flmul+3,efgtoa@ou+3
  2850   000A86  0100               	movlb	0	; () banked
  2851   000A88  5199               	movf	efgtoa@ou& (0+255),w,b
  2852   000A8A  5DA8               	subwf	efgtoa@g& (0+255),w,b
  2853   000A8C  6E01               	movwf	labs@a^0,c
  2854   000A8E  519A               	movf	(efgtoa@ou+1)& (0+255),w,b
  2855   000A90  59A9               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2856   000A92  6E02               	movwf	(labs@a+1)^0,c
  2857   000A94  519B               	movf	(efgtoa@ou+2)& (0+255),w,b
  2858   000A96  59AA               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2859   000A98  6E03               	movwf	(labs@a+2)^0,c
  2860   000A9A  519C               	movf	(efgtoa@ou+3)& (0+255),w,b
  2861   000A9C  59AB               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2862   000A9E  6E04               	movwf	(labs@a+3)^0,c
  2863   000AA0  ECD4  F026         	call	_labs	;wreg free
  2864   000AA4  BE04               	btfsc	(?_labs+3)^0,7,c
  2865   000AA6  EF60  F005         	goto	u7781
  2866   000AAA  5004               	movf	(?_labs+3)^0,w,c
  2867   000AAC  1003               	iorwf	(?_labs+2)^0,w,c
  2868   000AAE  1002               	iorwf	(?_labs+1)^0,w,c
  2869   000AB0  E109               	bnz	u7780
  2870   000AB2  0E02               	movlw	2
  2871   000AB4  5C01               	subwf	?_labs^0,w,c
  2872   000AB6  A0D8               	btfss	status,0,c
  2873   000AB8  EF60  F005         	goto	u7781
  2874   000ABC  EF62  F005         	goto	u7780
  2875   000AC0                     u7781:
  2876   000AC0  EF1E  F005         	goto	l1194
  2877   000AC4                     u7780:
  2878   000AC4  C099  F01A         	movff	efgtoa@ou,___flge@ff1
  2879   000AC8  C09A  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  2880   000ACC  C09B  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  2881   000AD0  C09C  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  2882   000AD4  C0A8  F01E         	movff	efgtoa@g,___flge@ff2
  2883   000AD8  C0A9  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  2884   000ADC  C0AA  F020         	movff	efgtoa@g+2,___flge@ff2+2
  2885   000AE0  C0AB  F021         	movff	efgtoa@g+3,___flge@ff2+3
  2886   000AE4  EC1B  F023         	call	___flge	;wreg free
  2887   000AE8  A0D8               	btfss	status,0,c
  2888   000AEA  EF79  F005         	goto	u7791
  2889   000AEE  EF7B  F005         	goto	u7790
  2890   000AF2                     u7791:
  2891   000AF2  EF1E  F005         	goto	l1194
  2892   000AF6                     u7790:
  2893   000AF6                     
  2894                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2895   000AF6  0100               	movlb	0	; () banked
  2896   000AF8  51AE               	movf	efgtoa@u& (0+255),w,b
  2897   000AFA  5DA8               	subwf	efgtoa@g& (0+255),w,b
  2898   000AFC  6E01               	movwf	labs@a^0,c
  2899   000AFE  51AF               	movf	(efgtoa@u+1)& (0+255),w,b
  2900   000B00  59A9               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2901   000B02  6E02               	movwf	(labs@a+1)^0,c
  2902   000B04  51B0               	movf	(efgtoa@u+2)& (0+255),w,b
  2903   000B06  59AA               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2904   000B08  6E03               	movwf	(labs@a+2)^0,c
  2905   000B0A  51B1               	movf	(efgtoa@u+3)& (0+255),w,b
  2906   000B0C  59AB               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2907   000B0E  6E04               	movwf	(labs@a+3)^0,c
  2908   000B10  ECD4  F026         	call	_labs	;wreg free
  2909   000B14  BE04               	btfsc	(?_labs+3)^0,7,c
  2910   000B16  EF9A  F005         	goto	u7800
  2911   000B1A  5004               	movf	(?_labs+3)^0,w,c
  2912   000B1C  1003               	iorwf	(?_labs+2)^0,w,c
  2913   000B1E  1002               	iorwf	(?_labs+1)^0,w,c
  2914   000B20  E107               	bnz	u7801
  2915   000B22  0E02               	movlw	2
  2916   000B24  5C01               	subwf	?_labs^0,w,c
  2917   000B26  B0D8               	btfsc	status,0,c
  2918   000B28  EF98  F005         	goto	u7801
  2919   000B2C  EF9A  F005         	goto	u7800
  2920   000B30                     u7801:
  2921   000B30  EFE2  F005         	goto	l7069
  2922   000B34                     u7800:
  2923   000B34                     l7059:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2926   000B34  C0AE  F0A8         	movff	efgtoa@u,efgtoa@g
  2927   000B38  C0AF  F0A9         	movff	efgtoa@u+1,efgtoa@g+1
  2928   000B3C  C0B0  F0AA         	movff	efgtoa@u+2,efgtoa@g+2
  2929   000B40  C0B1  F0AB         	movff	efgtoa@u+3,efgtoa@g+3
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
  2932   000B44  EFFB  F005         	goto	l1192
  2933   000B48                     l7061:
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2936   000B48  C0AE  F04F         	movff	efgtoa@u,___fldiv@b
  2937   000B4C  C0AF  F050         	movff	efgtoa@u+1,___fldiv@b+1
  2938   000B50  C0B0  F051         	movff	efgtoa@u+2,___fldiv@b+2
  2939   000B54  C0B1  F052         	movff	efgtoa@u+3,___fldiv@b+3
  2940   000B58  0E00               	movlw	0
  2941   000B5A  6E53               	movwf	___fldiv@a^0,c
  2942   000B5C  0E00               	movlw	0
  2943   000B5E  6E54               	movwf	(___fldiv@a+1)^0,c
  2944   000B60  0E20               	movlw	32
  2945   000B62  6E55               	movwf	(___fldiv@a+2)^0,c
  2946   000B64  0E41               	movlw	65
  2947   000B66  6E56               	movwf	(___fldiv@a+3)^0,c
  2948   000B68  EC4A  F013         	call	___fldiv	;wreg free
  2949   000B6C  C04F  F0AE         	movff	?___fldiv,efgtoa@u
  2950   000B70  C050  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  2951   000B74  C051  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  2952   000B78  C052  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  2953   000B7C                     
  2954                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
  2955   000B7C  0100               	movlb	0	; () banked
  2956   000B7E  0795               	decf	efgtoa@e& (0+255),f,b
  2957   000B80  A0D8               	btfss	status,0,c
  2958   000B82  0796               	decf	(efgtoa@e+1)& (0+255),f,b
  2959   000B84                     
  2960                           ; BSR set to: 0
  2961                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2962   000B84  51AE               	movf	efgtoa@u& (0+255),w,b
  2963   000B86  5DA8               	subwf	efgtoa@g& (0+255),w,b
  2964   000B88  6E01               	movwf	labs@a^0,c
  2965   000B8A  51AF               	movf	(efgtoa@u+1)& (0+255),w,b
  2966   000B8C  59A9               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2967   000B8E  6E02               	movwf	(labs@a+1)^0,c
  2968   000B90  51B0               	movf	(efgtoa@u+2)& (0+255),w,b
  2969   000B92  59AA               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2970   000B94  6E03               	movwf	(labs@a+2)^0,c
  2971   000B96  51B1               	movf	(efgtoa@u+3)& (0+255),w,b
  2972   000B98  59AB               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2973   000B9A  6E04               	movwf	(labs@a+3)^0,c
  2974   000B9C  ECD4  F026         	call	_labs	;wreg free
  2975   000BA0  BE04               	btfsc	(?_labs+3)^0,7,c
  2976   000BA2  EFE0  F005         	goto	u7810
  2977   000BA6  5004               	movf	(?_labs+3)^0,w,c
  2978   000BA8  1003               	iorwf	(?_labs+2)^0,w,c
  2979   000BAA  1002               	iorwf	(?_labs+1)^0,w,c
  2980   000BAC  E107               	bnz	u7811
  2981   000BAE  0E02               	movlw	2
  2982   000BB0  5C01               	subwf	?_labs^0,w,c
  2983   000BB2  B0D8               	btfsc	status,0,c
  2984   000BB4  EFDE  F005         	goto	u7811
  2985   000BB8  EFE0  F005         	goto	u7810
  2986   000BBC                     u7811:
  2987   000BBC  EFE2  F005         	goto	l7069
  2988   000BC0                     u7810:
  2989   000BC0  EF9A  F005         	goto	l7059
  2990   000BC4                     l7069:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  2993   000BC4  C0A8  F01A         	movff	efgtoa@g,___flge@ff1
  2994   000BC8  C0A9  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2995   000BCC  C0AA  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2996   000BD0  C0AB  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2997   000BD4  C0AE  F01E         	movff	efgtoa@u,___flge@ff2
  2998   000BD8  C0AF  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2999   000BDC  C0B0  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3000   000BE0  C0B1  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3001   000BE4  EC1B  F023         	call	___flge	;wreg free
  3002   000BE8  A0D8               	btfss	status,0,c
  3003   000BEA  EFF9  F005         	goto	u7821
  3004   000BEE  EFFB  F005         	goto	u7820
  3005   000BF2                     u7821:
  3006   000BF2  EFA4  F005         	goto	l7061
  3007   000BF6                     u7820:
  3008   000BF6                     l1192:
  3009                           
  3010                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3011   000BF6  C083  F08F         	movff	efgtoa@c,efgtoa@mode
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3014   000BFA  C08F  F090         	movff	efgtoa@mode,efgtoa@nmode
  3015   000BFE                     
  3016                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3017   000BFE  0100               	movlb	0	; () banked
  3018   000C00  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  3019   000C02  EF05  F006         	goto	u7831
  3020   000C06  EF07  F006         	goto	u7830
  3021   000C0A                     u7831:
  3022   000C0A  EF0D  F006         	goto	l7075
  3023   000C0E                     u7830:
  3024   000C0E                     
  3025                           ; BSR set to: 0
  3026   000C0E  C0E6  F088         	movff	_prec,efgtoa@p
  3027   000C12  C0E7  F089         	movff	_prec+1,efgtoa@p+1
  3028   000C16  EF11  F006         	goto	l7077
  3029   000C1A                     l7075:
  3030                           
  3031                           ; BSR set to: 0
  3032   000C1A  0E00               	movlw	0
  3033   000C1C  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  3034   000C1E  0E06               	movlw	6
  3035   000C20  6F88               	movwf	efgtoa@p& (0+255),b
  3036   000C22                     l7077:
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3040   000C22  C088  F093         	movff	efgtoa@p,efgtoa@m
  3041   000C26  C089  F094         	movff	efgtoa@p+1,efgtoa@m+1
  3042   000C2A                     
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3045   000C2A  4B93               	infsnz	efgtoa@m& (0+255),f,b
  3046   000C2C  2B94               	incf	(efgtoa@m+1)& (0+255),f,b
  3047   000C2E                     
  3048                           ; BSR set to: 0
  3049                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3050   000C2E  0E66               	movlw	102
  3051   000C30  1990               	xorwf	efgtoa@nmode& (0+255),w,b
  3052   000C32  A4D8               	btfss	status,2,c
  3053   000C34  EF1E  F006         	goto	u7841
  3054   000C38  EF20  F006         	goto	u7840
  3055   000C3C                     u7841:
  3056   000C3C  EF40  F006         	goto	l7091
  3057   000C40                     u7840:
  3058   000C40                     
  3059                           ; BSR set to: 0
  3060                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3061   000C40  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3062   000C42  EF27  F006         	goto	u7850
  3063   000C46  EF25  F006         	goto	u7851
  3064   000C4A                     u7851:
  3065   000C4A  EF33  F006         	goto	l7087
  3066   000C4E                     u7850:
  3067   000C4E                     
  3068                           ; BSR set to: 0
  3069                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3070   000C4E  0E00               	movlw	0
  3071   000C50  6FAE               	movwf	efgtoa@u& (0+255),b
  3072   000C52  0E00               	movlw	0
  3073   000C54  6FAF               	movwf	(efgtoa@u+1)& (0+255),b
  3074   000C56  0E80               	movlw	128
  3075   000C58  6FB0               	movwf	(efgtoa@u+2)& (0+255),b
  3076   000C5A  0E3F               	movlw	63
  3077   000C5C  6FB1               	movwf	(efgtoa@u+3)& (0+255),b
  3078                           
  3079                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3080   000C5E  0E00               	movlw	0
  3081   000C60  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  3082   000C62  0E00               	movlw	0
  3083   000C64  6F95               	movwf	efgtoa@e& (0+255),b
  3084   000C66                     l7087:
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3088   000C66  0E67               	movlw	103
  3089   000C68  198F               	xorwf	efgtoa@mode& (0+255),w,b
  3090   000C6A  B4D8               	btfsc	status,2,c
  3091   000C6C  EF3A  F006         	goto	u7861
  3092   000C70  EF3C  F006         	goto	u7860
  3093   000C74                     u7861:
  3094   000C74  EF40  F006         	goto	l7091
  3095   000C78                     u7860:
  3096   000C78                     
  3097                           ; BSR set to: 0
  3098                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3099   000C78  5195               	movf	efgtoa@e& (0+255),w,b
  3100   000C7A  2793               	addwf	efgtoa@m& (0+255),f,b
  3101   000C7C  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  3102   000C7E  2394               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3103   000C80                     l7091:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3107   000C80  0E00               	movlw	0
  3108   000C82  6F9E               	movwf	(efgtoa@i+1)& (0+255),b
  3109   000C84  0E00               	movlw	0
  3110   000C86  6F9D               	movwf	efgtoa@i& (0+255),b
  3111   000C88                     
  3112                           ; BSR set to: 0
  3113                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3114   000C88  C0A8  F09F         	movff	efgtoa@g,efgtoa@h
  3115   000C8C  C0A9  F0A0         	movff	efgtoa@g+1,efgtoa@h+1
  3116   000C90  C0AA  F0A1         	movff	efgtoa@g+2,efgtoa@h+2
  3117   000C94  C0AB  F0A2         	movff	efgtoa@g+3,efgtoa@h+3
  3118   000C98                     
  3119                           ; BSR set to: 0
  3120                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3121   000C98  C0AE  F099         	movff	efgtoa@u,efgtoa@ou
  3122   000C9C  C0AF  F09A         	movff	efgtoa@u+1,efgtoa@ou+1
  3123   000CA0  C0B0  F09B         	movff	efgtoa@u+2,efgtoa@ou+2
  3124   000CA4  C0B1  F09C         	movff	efgtoa@u+3,efgtoa@ou+3
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3127   000CA8  EFD1  F006         	goto	l7105
  3128   000CAC                     l7097:
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3132   000CAC  C09F  F04F         	movff	efgtoa@h,___fldiv@b
  3133   000CB0  C0A0  F050         	movff	efgtoa@h+1,___fldiv@b+1
  3134   000CB4  C0A1  F051         	movff	efgtoa@h+2,___fldiv@b+2
  3135   000CB8  C0A2  F052         	movff	efgtoa@h+3,___fldiv@b+3
  3136   000CBC  C0AE  F053         	movff	efgtoa@u,___fldiv@a
  3137   000CC0  C0AF  F054         	movff	efgtoa@u+1,___fldiv@a+1
  3138   000CC4  C0B0  F055         	movff	efgtoa@u+2,___fldiv@a+2
  3139   000CC8  C0B1  F056         	movff	efgtoa@u+3,___fldiv@a+3
  3140   000CCC  EC4A  F013         	call	___fldiv	;wreg free
  3141   000CD0  C04F  F05B         	movff	?___fldiv,floorf@x
  3142   000CD4  C050  F05C         	movff	?___fldiv+1,floorf@x+1
  3143   000CD8  C051  F05D         	movff	?___fldiv+2,floorf@x+2
  3144   000CDC  C052  F05E         	movff	?___fldiv+3,floorf@x+3
  3145   000CE0  EC51  F01C         	call	_floorf	;wreg free
  3146   000CE4  C05B  F0A3         	movff	?_floorf,efgtoa@l
  3147   000CE8  C05C  F0A4         	movff	?_floorf+1,efgtoa@l+1
  3148   000CEC  C05D  F0A5         	movff	?_floorf+2,efgtoa@l+2
  3149   000CF0  C05E  F0A6         	movff	?_floorf+3,efgtoa@l+3
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3152   000CF4  C0A3  F001         	movff	efgtoa@l,___fltol@f1
  3153   000CF8  C0A4  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3154   000CFC  C0A5  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3155   000D00  C0A6  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3156   000D04  EC98  F022         	call	___fltol	;wreg free
  3157   000D08  C001  F091         	movff	?___fltol,efgtoa@d
  3158   000D0C  C002  F092         	movff	?___fltol+1,efgtoa@d+1
  3159   000D10                     
  3160                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3161   000D10  C09F  F02A         	movff	efgtoa@h,___flsub@b
  3162   000D14  C0A0  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3163   000D18  C0A1  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3164   000D1C  C0A2  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3165   000D20  C0A3  F005         	movff	efgtoa@l,___flmul@a
  3166   000D24  C0A4  F006         	movff	efgtoa@l+1,___flmul@a+1
  3167   000D28  C0A5  F007         	movff	efgtoa@l+2,___flmul@a+2
  3168   000D2C  C0A6  F008         	movff	efgtoa@l+3,___flmul@a+3
  3169   000D30  C0AE  F001         	movff	efgtoa@u,___flmul@b
  3170   000D34  C0AF  F002         	movff	efgtoa@u+1,___flmul@b+1
  3171   000D38  C0B0  F003         	movff	efgtoa@u+2,___flmul@b+2
  3172   000D3C  C0B1  F004         	movff	efgtoa@u+3,___flmul@b+3
  3173   000D40  EC46  F00F         	call	___flmul	;wreg free
  3174   000D44  C001  F02E         	movff	?___flmul,___flsub@a
  3175   000D48  C002  F02F         	movff	?___flmul+1,___flsub@a+1
  3176   000D4C  C003  F030         	movff	?___flmul+2,___flsub@a+2
  3177   000D50  C004  F031         	movff	?___flmul+3,___flsub@a+3
  3178   000D54  ECBE  F027         	call	___flsub	;wreg free
  3179   000D58  C02A  F09F         	movff	?___flsub,efgtoa@h
  3180   000D5C  C02B  F0A0         	movff	?___flsub+1,efgtoa@h+1
  3181   000D60  C02C  F0A1         	movff	?___flsub+2,efgtoa@h+2
  3182   000D64  C02D  F0A2         	movff	?___flsub+3,efgtoa@h+3
  3183   000D68                     
  3184                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3185   000D68  C0AE  F04F         	movff	efgtoa@u,___fldiv@b
  3186   000D6C  C0AF  F050         	movff	efgtoa@u+1,___fldiv@b+1
  3187   000D70  C0B0  F051         	movff	efgtoa@u+2,___fldiv@b+2
  3188   000D74  C0B1  F052         	movff	efgtoa@u+3,___fldiv@b+3
  3189   000D78  0E00               	movlw	0
  3190   000D7A  6E53               	movwf	___fldiv@a^0,c
  3191   000D7C  0E00               	movlw	0
  3192   000D7E  6E54               	movwf	(___fldiv@a+1)^0,c
  3193   000D80  0E20               	movlw	32
  3194   000D82  6E55               	movwf	(___fldiv@a+2)^0,c
  3195   000D84  0E41               	movlw	65
  3196   000D86  6E56               	movwf	(___fldiv@a+3)^0,c
  3197   000D88  EC4A  F013         	call	___fldiv	;wreg free
  3198   000D8C  C04F  F0AE         	movff	?___fldiv,efgtoa@u
  3199   000D90  C050  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  3200   000D94  C051  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  3201   000D98  C052  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  3202   000D9C                     
  3203                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3204   000D9C  0100               	movlb	0	; () banked
  3205   000D9E  4B9D               	infsnz	efgtoa@i& (0+255),f,b
  3206   000DA0  2B9E               	incf	(efgtoa@i+1)& (0+255),f,b
  3207   000DA2                     l7105:
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3211   000DA2  5193               	movf	efgtoa@m& (0+255),w,b
  3212   000DA4  5D9D               	subwf	efgtoa@i& (0+255),w,b
  3213   000DA6  519E               	movf	(efgtoa@i+1)& (0+255),w,b
  3214   000DA8  0A80               	xorlw	128
  3215   000DAA  6F84               	movwf	??_efgtoa& (0+255),b
  3216   000DAC  5194               	movf	(efgtoa@m+1)& (0+255),w,b
  3217   000DAE  0A80               	xorlw	128
  3218   000DB0  5984               	subwfb	??_efgtoa& (0+255),w,b
  3219   000DB2  A0D8               	btfss	status,0,c
  3220   000DB4  EFDE  F006         	goto	u7871
  3221   000DB8  EFE0  F006         	goto	u7870
  3222   000DBC                     u7871:
  3223   000DBC  EF56  F006         	goto	l7097
  3224   000DC0                     u7870:
  3225   000DC0                     
  3226                           ; BSR set to: 0
  3227                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3228   000DC0  C0AE  F001         	movff	efgtoa@u,___flmul@b
  3229   000DC4  C0AF  F002         	movff	efgtoa@u+1,___flmul@b+1
  3230   000DC8  C0B0  F003         	movff	efgtoa@u+2,___flmul@b+2
  3231   000DCC  C0B1  F004         	movff	efgtoa@u+3,___flmul@b+3
  3232   000DD0  0E00               	movlw	0
  3233   000DD2  6E05               	movwf	___flmul@a^0,c
  3234   000DD4  0E00               	movlw	0
  3235   000DD6  6E06               	movwf	(___flmul@a+1)^0,c
  3236   000DD8  0EA0               	movlw	160
  3237   000DDA  6E07               	movwf	(___flmul@a+2)^0,c
  3238   000DDC  0E40               	movlw	64
  3239   000DDE  6E08               	movwf	(___flmul@a+3)^0,c
  3240   000DE0  EC46  F00F         	call	___flmul	;wreg free
  3241   000DE4  C001  F0A3         	movff	?___flmul,efgtoa@l
  3242   000DE8  C002  F0A4         	movff	?___flmul+1,efgtoa@l+1
  3243   000DEC  C003  F0A5         	movff	?___flmul+2,efgtoa@l+2
  3244   000DF0  C004  F0A6         	movff	?___flmul+3,efgtoa@l+3
  3245   000DF4                     
  3246                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3247   000DF4  C09F  F01A         	movff	efgtoa@h,___flge@ff1
  3248   000DF8  C0A0  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3249   000DFC  C0A1  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3250   000E00  C0A2  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3251   000E04  C0A3  F01E         	movff	efgtoa@l,___flge@ff2
  3252   000E08  C0A4  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3253   000E0C  C0A5  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3254   000E10  C0A6  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3255   000E14  EC1B  F023         	call	___flge	;wreg free
  3256   000E18  B0D8               	btfsc	status,0,c
  3257   000E1A  EF11  F007         	goto	u7881
  3258   000E1E  EF13  F007         	goto	u7880
  3259   000E22                     u7881:
  3260   000E22  EF1E  F007         	goto	l7113
  3261   000E26                     u7880:
  3262   000E26                     
  3263                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3264   000E26  0E00               	movlw	0
  3265   000E28  0100               	movlb	0	; () banked
  3266   000E2A  6FA3               	movwf	efgtoa@l& (0+255),b
  3267   000E2C  0E00               	movlw	0
  3268   000E2E  6FA4               	movwf	(efgtoa@l+1)& (0+255),b
  3269   000E30  0E00               	movlw	0
  3270   000E32  6FA5               	movwf	(efgtoa@l+2)& (0+255),b
  3271   000E34  0E00               	movlw	0
  3272   000E36  6FA6               	movwf	(efgtoa@l+3)& (0+255),b
  3273                           
  3274                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
  3275   000E38  EF47  F007         	goto	l7119
  3276   000E3C                     l7113:
  3277                           
  3278                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3279   000E3C  C09F  F001         	movff	efgtoa@h,___fleq@ff1
  3280   000E40  C0A0  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3281   000E44  C0A1  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3282   000E48  C0A2  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3283   000E4C  C0A3  F005         	movff	efgtoa@l,___fleq@ff2
  3284   000E50  C0A4  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3285   000E54  C0A5  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3286   000E58  C0A6  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3287   000E5C  EC3B  F025         	call	___fleq	;wreg free
  3288   000E60  A0D8               	btfss	status,0,c
  3289   000E62  EF35  F007         	goto	u7891
  3290   000E66  EF37  F007         	goto	u7890
  3291   000E6A                     u7891:
  3292   000E6A  EF47  F007         	goto	l7119
  3293   000E6E                     u7890:
  3294   000E6E  0100               	movlb	0	; () banked
  3295   000E70  B191               	btfsc	efgtoa@d& (0+255),0,b
  3296   000E72  EF3D  F007         	goto	u7901
  3297   000E76  EF3F  F007         	goto	u7900
  3298   000E7A                     u7901:
  3299   000E7A  EF47  F007         	goto	l7119
  3300   000E7E                     u7900:
  3301   000E7E                     
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3304   000E7E  0E00               	movlw	0
  3305   000E80  6FA3               	movwf	efgtoa@l& (0+255),b
  3306   000E82  0E00               	movlw	0
  3307   000E84  6FA4               	movwf	(efgtoa@l+1)& (0+255),b
  3308   000E86  0E00               	movlw	0
  3309   000E88  6FA5               	movwf	(efgtoa@l+2)& (0+255),b
  3310   000E8A  0E00               	movlw	0
  3311   000E8C  6FA6               	movwf	(efgtoa@l+3)& (0+255),b
  3312   000E8E                     l7119:
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3315   000E8E  C0A8  F01A         	movff	efgtoa@g,___fladd@b
  3316   000E92  C0A9  F01B         	movff	efgtoa@g+1,___fladd@b+1
  3317   000E96  C0AA  F01C         	movff	efgtoa@g+2,___fladd@b+2
  3318   000E9A  C0AB  F01D         	movff	efgtoa@g+3,___fladd@b+3
  3319   000E9E  C0A3  F01E         	movff	efgtoa@l,___fladd@a
  3320   000EA2  C0A4  F01F         	movff	efgtoa@l+1,___fladd@a+1
  3321   000EA6  C0A5  F020         	movff	efgtoa@l+2,___fladd@a+2
  3322   000EAA  C0A6  F021         	movff	efgtoa@l+3,___fladd@a+3
  3323   000EAE  ECE6  F00C         	call	___fladd	;wreg free
  3324   000EB2  C01A  F09F         	movff	?___fladd,efgtoa@h
  3325   000EB6  C01B  F0A0         	movff	?___fladd+1,efgtoa@h+1
  3326   000EBA  C01C  F0A1         	movff	?___fladd+2,efgtoa@h+2
  3327   000EBE  C01D  F0A2         	movff	?___fladd+3,efgtoa@h+3
  3328   000EC2                     
  3329                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3330   000EC2  C09F  F01A         	movff	efgtoa@h,___flge@ff1
  3331   000EC6  C0A0  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3332   000ECA  C0A1  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3333   000ECE  C0A2  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3334   000ED2  0E00               	movlw	0
  3335   000ED4  6E05               	movwf	___flmul@a^0,c
  3336   000ED6  0E00               	movlw	0
  3337   000ED8  6E06               	movwf	(___flmul@a+1)^0,c
  3338   000EDA  0E20               	movlw	32
  3339   000EDC  6E07               	movwf	(___flmul@a+2)^0,c
  3340   000EDE  0E41               	movlw	65
  3341   000EE0  6E08               	movwf	(___flmul@a+3)^0,c
  3342   000EE2  C099  F001         	movff	efgtoa@ou,___flmul@b
  3343   000EE6  C09A  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3344   000EEA  C09B  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3345   000EEE  C09C  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3346   000EF2  EC46  F00F         	call	___flmul	;wreg free
  3347   000EF6  C001  F01E         	movff	?___flmul,___flge@ff2
  3348   000EFA  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3349   000EFE  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3350   000F02  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3351   000F06  EC1B  F023         	call	___flge	;wreg free
  3352   000F0A  A0D8               	btfss	status,0,c
  3353   000F0C  EF8A  F007         	goto	u7911
  3354   000F10  EF8C  F007         	goto	u7910
  3355   000F14                     u7911:
  3356   000F14  EFB5  F007         	goto	l7131
  3357   000F18                     u7910:
  3358   000F18                     
  3359                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
  3360   000F18  0100               	movlb	0	; () banked
  3361   000F1A  4B95               	infsnz	efgtoa@e& (0+255),f,b
  3362   000F1C  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  3363   000F1E                     
  3364                           ; BSR set to: 0
  3365                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3366   000F1E  C099  F001         	movff	efgtoa@ou,___flmul@b
  3367   000F22  C09A  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3368   000F26  C09B  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3369   000F2A  C09C  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3370   000F2E  0E00               	movlw	0
  3371   000F30  6E05               	movwf	___flmul@a^0,c
  3372   000F32  0E00               	movlw	0
  3373   000F34  6E06               	movwf	(___flmul@a+1)^0,c
  3374   000F36  0E20               	movlw	32
  3375   000F38  6E07               	movwf	(___flmul@a+2)^0,c
  3376   000F3A  0E41               	movlw	65
  3377   000F3C  6E08               	movwf	(___flmul@a+3)^0,c
  3378   000F3E  EC46  F00F         	call	___flmul	;wreg free
  3379   000F42  C001  F099         	movff	?___flmul,efgtoa@ou
  3380   000F46  C002  F09A         	movff	?___flmul+1,efgtoa@ou+1
  3381   000F4A  C003  F09B         	movff	?___flmul+2,efgtoa@ou+2
  3382   000F4E  C004  F09C         	movff	?___flmul+3,efgtoa@ou+3
  3383   000F52                     
  3384                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3385   000F52  0E66               	movlw	102
  3386   000F54  0100               	movlb	0	; () banked
  3387   000F56  1990               	xorwf	efgtoa@nmode& (0+255),w,b
  3388   000F58  A4D8               	btfss	status,2,c
  3389   000F5A  EFB1  F007         	goto	u7921
  3390   000F5E  EFB3  F007         	goto	u7920
  3391   000F62                     u7921:
  3392   000F62  EFB5  F007         	goto	l7131
  3393   000F66                     u7920:
  3394   000F66                     
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
  3397   000F66  4B93               	infsnz	efgtoa@m& (0+255),f,b
  3398   000F68  2B94               	incf	(efgtoa@m+1)& (0+255),f,b
  3399   000F6A                     l7131:
  3400                           
  3401                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3402   000F6A  C099  F0AE         	movff	efgtoa@ou,efgtoa@u
  3403   000F6E  C09A  F0AF         	movff	efgtoa@ou+1,efgtoa@u+1
  3404   000F72  C09B  F0B0         	movff	efgtoa@ou+2,efgtoa@u+2
  3405   000F76  C09C  F0B1         	movff	efgtoa@ou+3,efgtoa@u+3
  3406   000F7A                     
  3407                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3408   000F7A  C095  F086         	movff	efgtoa@e,efgtoa@ne
  3409   000F7E  C096  F087         	movff	efgtoa@e+1,efgtoa@ne+1
  3410   000F82                     
  3411                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3412   000F82  0E00               	movlw	0
  3413   000F84  0100               	movlb	0	; () banked
  3414   000F86  6F8E               	movwf	efgtoa@pp& (0+255),b
  3415   000F88                     
  3416                           ; BSR set to: 0
  3417                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3418   000F88  0E00               	movlw	0
  3419   000F8A  6F8B               	movwf	(efgtoa@t+1)& (0+255),b
  3420   000F8C  0E00               	movlw	0
  3421   000F8E  6F8A               	movwf	efgtoa@t& (0+255),b
  3422   000F90                     
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3425   000F90  0E00               	movlw	0
  3426   000F92  6F9E               	movwf	(efgtoa@i+1)& (0+255),b
  3427   000F94  0E00               	movlw	0
  3428   000F96  6F9D               	movwf	efgtoa@i& (0+255),b
  3429                           
  3430                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3431   000F98  EFB3  F008         	goto	l7181
  3432   000F9C                     l7141:
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3436   000F9C  C09F  F04F         	movff	efgtoa@h,___fldiv@b
  3437   000FA0  C0A0  F050         	movff	efgtoa@h+1,___fldiv@b+1
  3438   000FA4  C0A1  F051         	movff	efgtoa@h+2,___fldiv@b+2
  3439   000FA8  C0A2  F052         	movff	efgtoa@h+3,___fldiv@b+3
  3440   000FAC  C0AE  F053         	movff	efgtoa@u,___fldiv@a
  3441   000FB0  C0AF  F054         	movff	efgtoa@u+1,___fldiv@a+1
  3442   000FB4  C0B0  F055         	movff	efgtoa@u+2,___fldiv@a+2
  3443   000FB8  C0B1  F056         	movff	efgtoa@u+3,___fldiv@a+3
  3444   000FBC  EC4A  F013         	call	___fldiv	;wreg free
  3445   000FC0  C04F  F05B         	movff	?___fldiv,floorf@x
  3446   000FC4  C050  F05C         	movff	?___fldiv+1,floorf@x+1
  3447   000FC8  C051  F05D         	movff	?___fldiv+2,floorf@x+2
  3448   000FCC  C052  F05E         	movff	?___fldiv+3,floorf@x+3
  3449   000FD0  EC51  F01C         	call	_floorf	;wreg free
  3450   000FD4  C05B  F0A3         	movff	?_floorf,efgtoa@l
  3451   000FD8  C05C  F0A4         	movff	?_floorf+1,efgtoa@l+1
  3452   000FDC  C05D  F0A5         	movff	?_floorf+2,efgtoa@l+2
  3453   000FE0  C05E  F0A6         	movff	?_floorf+3,efgtoa@l+3
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3456   000FE4  C0A3  F001         	movff	efgtoa@l,___fltol@f1
  3457   000FE8  C0A4  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3458   000FEC  C0A5  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3459   000FF0  C0A6  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3460   000FF4  EC98  F022         	call	___fltol	;wreg free
  3461   000FF8  BE02               	btfsc	(?___fltol+1)^0,7,c
  3462   000FFA  EF0A  F008         	goto	u7930
  3463   000FFE  5002               	movf	(?___fltol+1)^0,w,c
  3464   001000  E107               	bnz	u7931
  3465   001002  0E0A               	movlw	10
  3466   001004  5C01               	subwf	?___fltol^0,w,c
  3467   001006  B0D8               	btfsc	status,0,c
  3468   001008  EF08  F008         	goto	u7931
  3469   00100C  EF0A  F008         	goto	u7930
  3470   001010                     u7931:
  3471   001010  EF1A  F008         	goto	l7145
  3472   001014                     u7930:
  3473   001014  C0A3  F001         	movff	efgtoa@l,___fltol@f1
  3474   001018  C0A4  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3475   00101C  C0A5  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3476   001020  C0A6  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3477   001024  EC98  F022         	call	___fltol	;wreg free
  3478   001028  C001  F091         	movff	?___fltol,efgtoa@d
  3479   00102C  C002  F092         	movff	?___fltol+1,efgtoa@d+1
  3480   001030  EF1F  F008         	goto	l1222
  3481   001034                     l7145:
  3482   001034  0E00               	movlw	0
  3483   001036  0100               	movlb	0	; () banked
  3484   001038  6F92               	movwf	(efgtoa@d+1)& (0+255),b
  3485   00103A  0E09               	movlw	9
  3486   00103C  6F91               	movwf	efgtoa@d& (0+255),b
  3487   00103E                     l1222:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3490   00103E  0100               	movlb	0	; () banked
  3491   001040  518E               	movf	efgtoa@pp& (0+255),w,b
  3492   001042  A4D8               	btfss	status,2,c
  3493   001044  EF26  F008         	goto	u7941
  3494   001048  EF28  F008         	goto	u7940
  3495   00104C                     u7941:
  3496   00104C  EF50  F008         	goto	l7165
  3497   001050                     u7940:
  3498   001050                     
  3499                           ; BSR set to: 0
  3500   001050  BF87               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3501   001052  EF2F  F008         	goto	u7950
  3502   001056  EF2D  F008         	goto	u7951
  3503   00105A                     u7951:
  3504   00105A  EF50  F008         	goto	l7165
  3505   00105E                     u7950:
  3506   00105E                     
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3509   00105E  0E00               	movlw	low _dbuf
  3510   001060  25AC               	addwf	efgtoa@n& (0+255),w,b
  3511   001062  6ED9               	movwf	fsr2l,c
  3512   001064  0E02               	movlw	high _dbuf
  3513   001066  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3514   001068  6EDA               	movwf	fsr2h,c
  3515   00106A  0E2E               	movlw	46
  3516   00106C  6EDF               	movwf	indf2,c
  3517   00106E                     
  3518                           ; BSR set to: 0
  3519   00106E  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  3520   001070  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  3521   001072                     
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3524   001072  0797               	decf	efgtoa@w& (0+255),f,b
  3525   001074  A0D8               	btfss	status,0,c
  3526   001076  0798               	decf	(efgtoa@w+1)& (0+255),f,b
  3527   001078                     
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3530   001078  0E01               	movlw	1
  3531   00107A  6F8E               	movwf	efgtoa@pp& (0+255),b
  3532   00107C  EF50  F008         	goto	l7165
  3533   001080                     l7157:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3537   001080  0E00               	movlw	low _dbuf
  3538   001082  25AC               	addwf	efgtoa@n& (0+255),w,b
  3539   001084  6ED9               	movwf	fsr2l,c
  3540   001086  0E02               	movlw	high _dbuf
  3541   001088  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3542   00108A  6EDA               	movwf	fsr2h,c
  3543   00108C  0E30               	movlw	48
  3544   00108E  6EDF               	movwf	indf2,c
  3545   001090                     
  3546                           ; BSR set to: 0
  3547   001090  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  3548   001092  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  3549   001094                     
  3550                           ; BSR set to: 0
  3551                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3552   001094  0797               	decf	efgtoa@w& (0+255),f,b
  3553   001096  A0D8               	btfss	status,0,c
  3554   001098  0798               	decf	(efgtoa@w+1)& (0+255),f,b
  3555   00109A                     
  3556                           ; BSR set to: 0
  3557                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3558   00109A  078A               	decf	efgtoa@t& (0+255),f,b
  3559   00109C  A0D8               	btfss	status,0,c
  3560   00109E  078B               	decf	(efgtoa@t+1)& (0+255),f,b
  3561   0010A0                     l7165:
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3565   0010A0  518A               	movf	efgtoa@t& (0+255),w,b
  3566   0010A2  118B               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3567   0010A4  A4D8               	btfss	status,2,c
  3568   0010A6  EF57  F008         	goto	u7961
  3569   0010AA  EF59  F008         	goto	u7960
  3570   0010AE                     u7961:
  3571   0010AE  EF40  F008         	goto	l7157
  3572   0010B2                     u7960:
  3573   0010B2                     
  3574                           ; BSR set to: 0
  3575                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3576   0010B2  0E00               	movlw	low _dbuf
  3577   0010B4  25AC               	addwf	efgtoa@n& (0+255),w,b
  3578   0010B6  6ED9               	movwf	fsr2l,c
  3579   0010B8  0E02               	movlw	high _dbuf
  3580   0010BA  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3581   0010BC  6EDA               	movwf	fsr2h,c
  3582   0010BE  5191               	movf	efgtoa@d& (0+255),w,b
  3583   0010C0  0F30               	addlw	48
  3584   0010C2  6EDF               	movwf	indf2,c
  3585   0010C4                     
  3586                           ; BSR set to: 0
  3587   0010C4  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  3588   0010C6  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  3589   0010C8                     
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3592   0010C8  0797               	decf	efgtoa@w& (0+255),f,b
  3593   0010CA  A0D8               	btfss	status,0,c
  3594   0010CC  0798               	decf	(efgtoa@w+1)& (0+255),f,b
  3595   0010CE                     
  3596                           ; BSR set to: 0
  3597                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3598   0010CE  C09F  F02A         	movff	efgtoa@h,___flsub@b
  3599   0010D2  C0A0  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3600   0010D6  C0A1  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3601   0010DA  C0A2  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3602   0010DE  C0A3  F005         	movff	efgtoa@l,___flmul@a
  3603   0010E2  C0A4  F006         	movff	efgtoa@l+1,___flmul@a+1
  3604   0010E6  C0A5  F007         	movff	efgtoa@l+2,___flmul@a+2
  3605   0010EA  C0A6  F008         	movff	efgtoa@l+3,___flmul@a+3
  3606   0010EE  C0AE  F001         	movff	efgtoa@u,___flmul@b
  3607   0010F2  C0AF  F002         	movff	efgtoa@u+1,___flmul@b+1
  3608   0010F6  C0B0  F003         	movff	efgtoa@u+2,___flmul@b+2
  3609   0010FA  C0B1  F004         	movff	efgtoa@u+3,___flmul@b+3
  3610   0010FE  EC46  F00F         	call	___flmul	;wreg free
  3611   001102  C001  F02E         	movff	?___flmul,___flsub@a
  3612   001106  C002  F02F         	movff	?___flmul+1,___flsub@a+1
  3613   00110A  C003  F030         	movff	?___flmul+2,___flsub@a+2
  3614   00110E  C004  F031         	movff	?___flmul+3,___flsub@a+3
  3615   001112  ECBE  F027         	call	___flsub	;wreg free
  3616   001116  C02A  F09F         	movff	?___flsub,efgtoa@h
  3617   00111A  C02B  F0A0         	movff	?___flsub+1,efgtoa@h+1
  3618   00111E  C02C  F0A1         	movff	?___flsub+2,efgtoa@h+2
  3619   001122  C02D  F0A2         	movff	?___flsub+3,efgtoa@h+3
  3620   001126                     
  3621                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3622   001126  C0AE  F04F         	movff	efgtoa@u,___fldiv@b
  3623   00112A  C0AF  F050         	movff	efgtoa@u+1,___fldiv@b+1
  3624   00112E  C0B0  F051         	movff	efgtoa@u+2,___fldiv@b+2
  3625   001132  C0B1  F052         	movff	efgtoa@u+3,___fldiv@b+3
  3626   001136  0E00               	movlw	0
  3627   001138  6E53               	movwf	___fldiv@a^0,c
  3628   00113A  0E00               	movlw	0
  3629   00113C  6E54               	movwf	(___fldiv@a+1)^0,c
  3630   00113E  0E20               	movlw	32
  3631   001140  6E55               	movwf	(___fldiv@a+2)^0,c
  3632   001142  0E41               	movlw	65
  3633   001144  6E56               	movwf	(___fldiv@a+3)^0,c
  3634   001146  EC4A  F013         	call	___fldiv	;wreg free
  3635   00114A  C04F  F0AE         	movff	?___fldiv,efgtoa@u
  3636   00114E  C050  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  3637   001152  C051  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  3638   001156  C052  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  3639   00115A                     
  3640                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3641   00115A  0100               	movlb	0	; () banked
  3642   00115C  0786               	decf	efgtoa@ne& (0+255),f,b
  3643   00115E  A0D8               	btfss	status,0,c
  3644   001160  0787               	decf	(efgtoa@ne+1)& (0+255),f,b
  3645   001162                     
  3646                           ; BSR set to: 0
  3647                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3648   001162  4B9D               	infsnz	efgtoa@i& (0+255),f,b
  3649   001164  2B9E               	incf	(efgtoa@i+1)& (0+255),f,b
  3650   001166                     l7181:
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3654   001166  5193               	movf	efgtoa@m& (0+255),w,b
  3655   001168  5D9D               	subwf	efgtoa@i& (0+255),w,b
  3656   00116A  519E               	movf	(efgtoa@i+1)& (0+255),w,b
  3657   00116C  0A80               	xorlw	128
  3658   00116E  6F84               	movwf	??_efgtoa& (0+255),b
  3659   001170  5194               	movf	(efgtoa@m+1)& (0+255),w,b
  3660   001172  0A80               	xorlw	128
  3661   001174  5984               	subwfb	??_efgtoa& (0+255),w,b
  3662   001176  B0D8               	btfsc	status,0,c
  3663   001178  EFC0  F008         	goto	u7971
  3664   00117C  EFC2  F008         	goto	u7970
  3665   001180                     u7971:
  3666   001180  EFD0  F008         	goto	l7185
  3667   001184                     u7970:
  3668   001184                     
  3669                           ; BSR set to: 0
  3670   001184  BFAD               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3671   001186  EFCE  F008         	goto	u7981
  3672   00118A  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  3673   00118C  E109               	bnz	u7980
  3674   00118E  0E4B               	movlw	75
  3675   001190  5DAC               	subwf	efgtoa@n& (0+255),w,b
  3676   001192  A0D8               	btfss	status,0,c
  3677   001194  EFCE  F008         	goto	u7981
  3678   001198  EFD0  F008         	goto	u7980
  3679   00119C                     u7981:
  3680   00119C  EFCE  F007         	goto	l7141
  3681   0011A0                     u7980:
  3682   0011A0                     l7185:
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3686   0011A0  0E00               	movlw	0
  3687   0011A2  6F9E               	movwf	(efgtoa@i+1)& (0+255),b
  3688   0011A4  0E4F               	movlw	79
  3689   0011A6  6F9D               	movwf	efgtoa@i& (0+255),b
  3690   0011A8                     
  3691                           ; BSR set to: 0
  3692                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3693   0011A8  0E00               	movlw	low _dbuf
  3694   0011AA  259D               	addwf	efgtoa@i& (0+255),w,b
  3695   0011AC  6ED9               	movwf	fsr2l,c
  3696   0011AE  0E02               	movlw	high _dbuf
  3697   0011B0  219E               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3698   0011B2  6EDA               	movwf	fsr2h,c
  3699   0011B4  6ADF               	clrf	indf2,c
  3700   0011B6                     
  3701                           ; BSR set to: 0
  3702                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3703   0011B6  0E00               	movlw	low _dbuf
  3704   0011B8  6F84               	movwf	??_efgtoa& (0+255),b
  3705   0011BA  0E02               	movlw	high _dbuf
  3706   0011BC  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3707   0011BE  51AC               	movf	efgtoa@n& (0+255),w,b
  3708   0011C0  5F84               	subwf	??_efgtoa& (0+255),f,b
  3709   0011C2  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  3710   0011C4  5B85               	subwfb	(??_efgtoa+1)& (0+255),f,b
  3711   0011C6  519D               	movf	efgtoa@i& (0+255),w,b
  3712   0011C8  2584               	addwf	??_efgtoa& (0+255),w,b
  3713   0011CA  6E01               	movwf	memcpy@d1^0,c
  3714   0011CC  519E               	movf	(efgtoa@i+1)& (0+255),w,b
  3715   0011CE  2185               	addwfc	(??_efgtoa+1)& (0+255),w,b
  3716   0011D0  6E02               	movwf	(memcpy@d1+1)^0,c
  3717   0011D2  0E00               	movlw	low _dbuf
  3718   0011D4  6E03               	movwf	memcpy@s1^0,c
  3719   0011D6  0E02               	movlw	high _dbuf
  3720   0011D8  6E04               	movwf	(memcpy@s1+1)^0,c
  3721   0011DA  C0AC  F005         	movff	efgtoa@n,memcpy@n
  3722   0011DE  C0AD  F006         	movff	efgtoa@n+1,memcpy@n+1
  3723   0011E2  EC27  F027         	call	_memcpy	;wreg free
  3724   0011E6                     
  3725                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3726   0011E6  0100               	movlb	0	; () banked
  3727   0011E8  51AC               	movf	efgtoa@n& (0+255),w,b
  3728   0011EA  5D9D               	subwf	efgtoa@i& (0+255),w,b
  3729   0011EC  6FAC               	movwf	efgtoa@n& (0+255),b
  3730   0011EE  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  3731   0011F0  599E               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3732   0011F2  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  3733   0011F4                     
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3736   0011F4  51A7               	movf	efgtoa@sign& (0+255),w,b
  3737   0011F6  A4D8               	btfss	status,2,c
  3738   0011F8  EF00  F009         	goto	u7991
  3739   0011FC  EF03  F009         	goto	u7990
  3740   001200                     u7991:
  3741   001200  0E01               	movlw	1
  3742   001202  EF04  F009         	goto	u8000
  3743   001206                     u7990:
  3744   001206  0E00               	movlw	0
  3745   001208                     u8000:
  3746   001208  6F9D               	movwf	efgtoa@i& (0+255),b
  3747   00120A  6B9E               	clrf	(efgtoa@i+1)& (0+255),b
  3748   00120C                     
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3751   00120C  51A7               	movf	efgtoa@sign& (0+255),w,b
  3752   00120E  B4D8               	btfsc	status,2,c
  3753   001210  EF0C  F009         	goto	u8011
  3754   001214  EF0E  F009         	goto	u8010
  3755   001218                     u8011:
  3756   001218  EF19  F009         	goto	l7199
  3757   00121C                     u8010:
  3758   00121C                     
  3759                           ; BSR set to: 0
  3760                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3761   00121C  07AC               	decf	efgtoa@n& (0+255),f,b
  3762   00121E  A0D8               	btfss	status,0,c
  3763   001220  07AD               	decf	(efgtoa@n+1)& (0+255),f,b
  3764   001222  0E00               	movlw	low _dbuf
  3765   001224  25AC               	addwf	efgtoa@n& (0+255),w,b
  3766   001226  6ED9               	movwf	fsr2l,c
  3767   001228  0E02               	movlw	high _dbuf
  3768   00122A  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3769   00122C  6EDA               	movwf	fsr2h,c
  3770   00122E  C0A7  FFDF         	movff	efgtoa@sign,indf2
  3771   001232                     l7199:
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3775   001232  519D               	movf	efgtoa@i& (0+255),w,b
  3776   001234  5F97               	subwf	efgtoa@w& (0+255),f,b
  3777   001236  519E               	movf	(efgtoa@i+1)& (0+255),w,b
  3778   001238  5B98               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3779   00123A                     
  3780                           ; BSR set to: 0
  3781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3782   00123A  C07D  F011         	movff	efgtoa@fp,pad@fp
  3783   00123E  C07E  F012         	movff	efgtoa@fp+1,pad@fp+1
  3784   001242  0E00               	movlw	low _dbuf
  3785   001244  25AC               	addwf	efgtoa@n& (0+255),w,b
  3786   001246  6E13               	movwf	pad@buf^0,c
  3787   001248  0E02               	movlw	high _dbuf
  3788   00124A  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3789   00124C  6E14               	movwf	(pad@buf+1)^0,c
  3790   00124E  C097  F015         	movff	efgtoa@w,pad@p
  3791   001252  C098  F016         	movff	efgtoa@w+1,pad@p+1
  3792   001256  EC6C  F026         	call	_pad	;wreg free
  3793   00125A                     l1189:
  3794   00125A  0012               	return		;funcret
  3795   00125C                     __end_of_efgtoa:
  3796                           	callstack 0
  3797                           
  3798 ;; *************** function _strcpy *****************
  3799 ;; Defined at:
  3800 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3803 ;;		 -> dbuf(80), 
  3804 ;;  src             1    2[COMRAM] PTR const unsigned char 
  3805 ;;		 -> STR_5(4), STR_2(4), 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;  d               2    4[COMRAM] PTR unsigned char 
  3808 ;;		 -> dbuf(80), 
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  2    0[COMRAM] PTR unsigned char 
  3811 ;; Registers used:
  3812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3818 ;;      Params:         3       0       0       0       0       0       0       0       0
  3819 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3820 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3821 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3822 ;;Total ram usage:        6 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_efgtoa
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text7
  3832   005046                     __ptext7:
  3833                           	callstack 0
  3834   005046                     _strcpy:
  3835                           	callstack 26
  3836   005046  C001  F005         	movff	strcpy@dest,strcpy@d
  3837   00504A  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  3838   00504E                     l5771:
  3839   00504E  2A03               	incf	strcpy@src^0,f,c
  3840   005050  0403               	decf	strcpy@src^0,w,c
  3841   005052  6E04               	movwf	??_strcpy^0,c
  3842   005054  C004  FFF6         	movff	??_strcpy,tblptrl
  3843   005058                     	if	1	;There is more than 1 active tblptr byte
  3844   005058  0E08               	movlw	high __smallconst
  3845   00505A  6EF7               	movwf	tblptrh,c
  3846   00505C                     	endif
  3847   00505C                     	if	0	;tblptru may be non-zero
  3848   00505C                     	endif
  3849   00505C                     	if	0	;tblptru may be non-zero
  3850   00505C                     	endif
  3851   00505C  C005  FFD9         	movff	strcpy@d,fsr2l
  3852   005060  C006  FFDA         	movff	strcpy@d+1,fsr2h
  3853   005064  4A05               	infsnz	strcpy@d^0,f,c
  3854   005066  2A06               	incf	(strcpy@d+1)^0,f,c
  3855   005068  0008               	tblrd		*
  3856   00506A  CFF5 FFDF          	movff	tablat,indf2
  3857   00506E  50DF               	movf	indf2,w,c
  3858   005070  A4D8               	btfss	status,2,c
  3859   005072  EF3D  F028         	goto	u6291
  3860   005076  EF3F  F028         	goto	u6290
  3861   00507A                     u6291:
  3862   00507A  EF27  F028         	goto	l5771
  3863   00507E                     u6290:
  3864   00507E  0012               	return		;funcret
  3865   005080                     __end_of_strcpy:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _memcpy *****************
  3869 ;; Defined at:
  3870 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  d1              2    0[COMRAM] PTR void 
  3873 ;;		 -> dbuf(80), 
  3874 ;;  s1              2    2[COMRAM] PTR const void 
  3875 ;;		 -> dbuf(80), 
  3876 ;;  n               2    4[COMRAM] unsigned int 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3879 ;;		 -> dbuf(80), 
  3880 ;;  d               2    7[COMRAM] PTR unsigned char 
  3881 ;;		 -> dbuf(80), 
  3882 ;;  tmp             1    6[COMRAM] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  2    0[COMRAM] PTR void 
  3885 ;; Registers used:
  3886 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3892 ;;      Params:         6       0       0       0       0       0       0       0       0
  3893 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3895 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3896 ;;Total ram usage:       11 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_efgtoa
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text8
  3906   004E4E                     __ptext8:
  3907                           	callstack 0
  3908   004E4E                     _memcpy:
  3909                           	callstack 26
  3910   004E4E  C003  F00A         	movff	memcpy@s1,memcpy@s
  3911   004E52  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  3912   004E56  C001  F008         	movff	memcpy@d1,memcpy@d
  3913   004E5A  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  3914   004E5E  EF41  F027         	goto	l5819
  3915   004E62                     l5811:
  3916   004E62  C00A  FFD9         	movff	memcpy@s,fsr2l
  3917   004E66  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  3918   004E6A  50DF               	movf	indf2,w,c
  3919   004E6C  6E07               	movwf	memcpy@tmp^0,c
  3920   004E6E  4A0A               	infsnz	memcpy@s^0,f,c
  3921   004E70  2A0B               	incf	(memcpy@s+1)^0,f,c
  3922   004E72  C008  FFD9         	movff	memcpy@d,fsr2l
  3923   004E76  C009  FFDA         	movff	memcpy@d+1,fsr2h
  3924   004E7A  C007  FFDF         	movff	memcpy@tmp,indf2
  3925   004E7E  4A08               	infsnz	memcpy@d^0,f,c
  3926   004E80  2A09               	incf	(memcpy@d+1)^0,f,c
  3927   004E82                     l5819:
  3928   004E82  0605               	decf	memcpy@n^0,f,c
  3929   004E84  A0D8               	btfss	status,0,c
  3930   004E86  0606               	decf	(memcpy@n+1)^0,f,c
  3931   004E88  2805               	incf	memcpy@n^0,w,c
  3932   004E8A  E106               	bnz	u6411
  3933   004E8C  2806               	incf	(memcpy@n+1)^0,w,c
  3934   004E8E  A4D8               	btfss	status,2,c
  3935   004E90  EF4C  F027         	goto	u6411
  3936   004E94  EF4E  F027         	goto	u6410
  3937   004E98                     u6411:
  3938   004E98  EF31  F027         	goto	l5811
  3939   004E9C                     u6410:
  3940   004E9C  0012               	return		;funcret
  3941   004E9E                     __end_of_memcpy:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function _labs *****************
  3945 ;; Defined at:
  3946 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  a               4    0[COMRAM] long 
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;		None
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  4    0[COMRAM] long 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2, status,0
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3960 ;;      Params:         4       0       0       0       0       0       0       0       0
  3961 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3962 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3963 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3964 ;;Total ram usage:        8 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_efgtoa
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text9
  3974   004DA8                     __ptext9:
  3975                           	callstack 0
  3976   004DA8                     _labs:
  3977                           	callstack 26
  3978   004DA8  BE04               	btfsc	(labs@a+3)^0,7,c
  3979   004DAA  EFD9  F026         	goto	u6301
  3980   004DAE  EFDB  F026         	goto	u6300
  3981   004DB2                     u6301:
  3982   004DB2  EFE5  F026         	goto	l5777
  3983   004DB6                     u6300:
  3984   004DB6  C001  F001         	movff	labs@a,?_labs
  3985   004DBA  C002  F002         	movff	labs@a+1,?_labs+1
  3986   004DBE  C003  F003         	movff	labs@a+2,?_labs+2
  3987   004DC2  C004  F004         	movff	labs@a+3,?_labs+3
  3988   004DC6  EFFE  F026         	goto	l1288
  3989   004DCA                     l5777:
  3990   004DCA  C001  F005         	movff	labs@a,??_labs
  3991   004DCE  C002  F006         	movff	labs@a+1,??_labs+1
  3992   004DD2  C003  F007         	movff	labs@a+2,??_labs+2
  3993   004DD6  C004  F008         	movff	labs@a+3,??_labs+3
  3994   004DDA  1E05               	comf	??_labs^0,f,c
  3995   004DDC  1E06               	comf	(??_labs+1)^0,f,c
  3996   004DDE  1E07               	comf	(??_labs+2)^0,f,c
  3997   004DE0  1E08               	comf	(??_labs+3)^0,f,c
  3998   004DE2  2A05               	incf	??_labs^0,f,c
  3999   004DE4  0E00               	movlw	0
  4000   004DE6  2206               	addwfc	(??_labs+1)^0,f,c
  4001   004DE8  2207               	addwfc	(??_labs+2)^0,f,c
  4002   004DEA  2208               	addwfc	(??_labs+3)^0,f,c
  4003   004DEC  C005  F001         	movff	??_labs,?_labs
  4004   004DF0  C006  F002         	movff	??_labs+1,?_labs+1
  4005   004DF4  C007  F003         	movff	??_labs+2,?_labs+2
  4006   004DF8  C008  F004         	movff	??_labs+3,?_labs+3
  4007   004DFC                     l1288:
  4008   004DFC  0012               	return		;funcret
  4009   004DFE                     __end_of_labs:
  4010                           	callstack 0
  4011                           
  4012 ;; *************** function _floorf *****************
  4013 ;; Defined at:
  4014 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  x               4   90[COMRAM] float 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  u               4   25[BANK0 ] struct .
  4019 ;;  m               4   19[BANK0 ] unsigned long 
  4020 ;;  e               2   23[BANK0 ] int 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  4   90[COMRAM] float 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4030 ;;      Params:         4       0       0       0       0       0       0       0       0
  4031 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4032 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4033 ;;      Totals:         4      16       0       0       0       0       0       0       0
  4034 ;;Total ram usage:       20 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; This function calls:
  4037 ;;		Nothing
  4038 ;; This function is called by:
  4039 ;;		_efgtoa
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text10
  4044   0038A2                     __ptext10:
  4045                           	callstack 0
  4046   0038A2                     _floorf:
  4047                           	callstack 26
  4048   0038A2  C110  F079         	movff	floorf@F521,floorf@u
  4049   0038A6  C111  F07A         	movff	floorf@F521+1,floorf@u+1
  4050   0038AA  C112  F07B         	movff	floorf@F521+2,floorf@u+2
  4051   0038AE  C113  F07C         	movff	floorf@F521+3,floorf@u+3
  4052   0038B2  C05B  F079         	movff	floorf@x,floorf@u
  4053   0038B6  C05C  F07A         	movff	floorf@x+1,floorf@u+1
  4054   0038BA  C05D  F07B         	movff	floorf@x+2,floorf@u+2
  4055   0038BE  C05E  F07C         	movff	floorf@x+3,floorf@u+3
  4056   0038C2  0E81               	movlw	129
  4057   0038C4  0100               	movlb	0	; () banked
  4058   0038C6  6F6D               	movwf	??_floorf& (0+255),b
  4059   0038C8  0EFF               	movlw	255
  4060   0038CA  6F6E               	movwf	(??_floorf+1)& (0+255),b
  4061   0038CC  C079  F06F         	movff	floorf@u,??_floorf+2
  4062   0038D0  C07A  F070         	movff	floorf@u+1,??_floorf+3
  4063   0038D4  C07B  F071         	movff	floorf@u+2,??_floorf+4
  4064   0038D8  C07C  F072         	movff	floorf@u+3,??_floorf+5
  4065   0038DC  0E18               	movlw	24
  4066   0038DE  EF76  F01C         	goto	u6310
  4067   0038E2                     u6315:
  4068   0038E2  90D8               	bcf	status,0,c
  4069   0038E4  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  4070   0038E6  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  4071   0038E8  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  4072   0038EA  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  4073   0038EC                     u6310:
  4074   0038EC  2EE8               	decfsz	wreg,f,c
  4075   0038EE  EF71  F01C         	goto	u6315
  4076   0038F2  516F               	movf	(??_floorf+2)& (0+255),w,b
  4077   0038F4  256D               	addwf	??_floorf& (0+255),w,b
  4078   0038F6  6F77               	movwf	floorf@e& (0+255),b
  4079   0038F8  0E00               	movlw	0
  4080   0038FA  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  4081   0038FC  6F78               	movwf	(floorf@e+1)& (0+255),b
  4082   0038FE  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  4083   003900  EF8B  F01C         	goto	u6321
  4084   003904  5178               	movf	(floorf@e+1)& (0+255),w,b
  4085   003906  E109               	bnz	u6320
  4086   003908  0E17               	movlw	23
  4087   00390A  5D77               	subwf	floorf@e& (0+255),w,b
  4088   00390C  A0D8               	btfss	status,0,c
  4089   00390E  EF8B  F01C         	goto	u6321
  4090   003912  EF8D  F01C         	goto	u6320
  4091   003916                     u6321:
  4092   003916  EF97  F01C         	goto	l5787
  4093   00391A                     u6320:
  4094   00391A                     l5785:
  4095                           
  4096                           ; BSR set to: 0
  4097   00391A  C05B  F05B         	movff	floorf@x,?_floorf
  4098   00391E  C05C  F05C         	movff	floorf@x+1,?_floorf+1
  4099   003922  C05D  F05D         	movff	floorf@x+2,?_floorf+2
  4100   003926  C05E  F05E         	movff	floorf@x+3,?_floorf+3
  4101   00392A  EF5B  F01D         	goto	l1274
  4102   00392E                     l5787:
  4103                           
  4104                           ; BSR set to: 0
  4105   00392E  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  4106   003930  EF9C  F01C         	goto	u6331
  4107   003934  EF9E  F01C         	goto	u6330
  4108   003938                     u6331:
  4109   003938  EF0F  F01D         	goto	l5797
  4110   00393C                     u6330:
  4111   00393C                     
  4112                           ; BSR set to: 0
  4113   00393C  C077  F06D         	movff	floorf@e,??_floorf
  4114   003940  0EFF               	movlw	255
  4115   003942  6F6E               	movwf	(??_floorf+1)& (0+255),b
  4116   003944  0EFF               	movlw	255
  4117   003946  6F6F               	movwf	(??_floorf+2)& (0+255),b
  4118   003948  0E7F               	movlw	127
  4119   00394A  6F70               	movwf	(??_floorf+3)& (0+255),b
  4120   00394C  0E00               	movlw	0
  4121   00394E  6F71               	movwf	(??_floorf+4)& (0+255),b
  4122   003950                     u6345:
  4123   003950  676D               	tstfsz	??_floorf& (0+255),b
  4124   003952  EFAD  F01C         	goto	u6346
  4125   003956  EFB5  F01C         	goto	u6347
  4126   00395A                     u6346:
  4127   00395A  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  4128   00395C  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  4129   00395E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  4130   003960  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  4131   003962  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  4132   003964  2F6D               	decfsz	??_floorf& (0+255),f,b
  4133   003966  EFA8  F01C         	goto	u6345
  4134   00396A                     u6347:
  4135   00396A  C06E  F073         	movff	??_floorf+1,floorf@m
  4136   00396E  C06F  F074         	movff	??_floorf+2,floorf@m+1
  4137   003972  C070  F075         	movff	??_floorf+3,floorf@m+2
  4138   003976  C071  F076         	movff	??_floorf+4,floorf@m+3
  4139   00397A  0100               	movlb	0	; () banked
  4140   00397C  5173               	movf	floorf@m& (0+255),w,b
  4141   00397E  1579               	andwf	floorf@u& (0+255),w,b
  4142   003980  6F6D               	movwf	??_floorf& (0+255),b
  4143   003982  5174               	movf	(floorf@m+1)& (0+255),w,b
  4144   003984  157A               	andwf	(floorf@u+1)& (0+255),w,b
  4145   003986  6F6E               	movwf	(??_floorf+1)& (0+255),b
  4146   003988  5175               	movf	(floorf@m+2)& (0+255),w,b
  4147   00398A  157B               	andwf	(floorf@u+2)& (0+255),w,b
  4148   00398C  6F6F               	movwf	(??_floorf+2)& (0+255),b
  4149   00398E  5176               	movf	(floorf@m+3)& (0+255),w,b
  4150   003990  157C               	andwf	(floorf@u+3)& (0+255),w,b
  4151   003992  6F70               	movwf	(??_floorf+3)& (0+255),b
  4152   003994  516D               	movf	??_floorf& (0+255),w,b
  4153   003996  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  4154   003998  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  4155   00399A  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  4156   00399C  A4D8               	btfss	status,2,c
  4157   00399E  EFD3  F01C         	goto	u6351
  4158   0039A2  EFD5  F01C         	goto	u6350
  4159   0039A6                     u6351:
  4160   0039A6  EFD7  F01C         	goto	l5793
  4161   0039AA                     u6350:
  4162   0039AA  EF8D  F01C         	goto	l5785
  4163   0039AE                     l5793:
  4164                           
  4165                           ; BSR set to: 0
  4166   0039AE  C079  F06D         	movff	floorf@u,??_floorf
  4167   0039B2  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  4168   0039B6  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  4169   0039BA  C07C  F070         	movff	floorf@u+3,??_floorf+3
  4170   0039BE  0E20               	movlw	32
  4171   0039C0  EFE7  F01C         	goto	u6360
  4172   0039C4                     u6365:
  4173   0039C4  90D8               	bcf	status,0,c
  4174   0039C6  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  4175   0039C8  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  4176   0039CA  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  4177   0039CC  336D               	rrcf	??_floorf& (0+255),f,b
  4178   0039CE                     u6360:
  4179   0039CE  2EE8               	decfsz	wreg,f,c
  4180   0039D0  EFE2  F01C         	goto	u6365
  4181   0039D4  516D               	movf	??_floorf& (0+255),w,b
  4182   0039D6  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  4183   0039D8  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  4184   0039DA  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  4185   0039DC  B4D8               	btfsc	status,2,c
  4186   0039DE  EFF3  F01C         	goto	u6371
  4187   0039E2  EFF5  F01C         	goto	u6370
  4188   0039E6                     u6371:
  4189   0039E6  EFFD  F01C         	goto	l1277
  4190   0039EA                     u6370:
  4191   0039EA                     
  4192                           ; BSR set to: 0
  4193   0039EA  5173               	movf	floorf@m& (0+255),w,b
  4194   0039EC  2779               	addwf	floorf@u& (0+255),f,b
  4195   0039EE  5174               	movf	(floorf@m+1)& (0+255),w,b
  4196   0039F0  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  4197   0039F2  5175               	movf	(floorf@m+2)& (0+255),w,b
  4198   0039F4  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  4199   0039F6  5176               	movf	(floorf@m+3)& (0+255),w,b
  4200   0039F8  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  4201   0039FA                     l1277:
  4202                           
  4203                           ; BSR set to: 0
  4204   0039FA  1D73               	comf	floorf@m& (0+255),w,b
  4205   0039FC  6F6D               	movwf	??_floorf& (0+255),b
  4206   0039FE  1D74               	comf	(floorf@m+1)& (0+255),w,b
  4207   003A00  6F6E               	movwf	(??_floorf+1)& (0+255),b
  4208   003A02  1D75               	comf	(floorf@m+2)& (0+255),w,b
  4209   003A04  6F6F               	movwf	(??_floorf+2)& (0+255),b
  4210   003A06  1D76               	comf	(floorf@m+3)& (0+255),w,b
  4211   003A08  6F70               	movwf	(??_floorf+3)& (0+255),b
  4212   003A0A  516D               	movf	??_floorf& (0+255),w,b
  4213   003A0C  1779               	andwf	floorf@u& (0+255),f,b
  4214   003A0E  516E               	movf	(??_floorf+1)& (0+255),w,b
  4215   003A10  177A               	andwf	(floorf@u+1)& (0+255),f,b
  4216   003A12  516F               	movf	(??_floorf+2)& (0+255),w,b
  4217   003A14  177B               	andwf	(floorf@u+2)& (0+255),f,b
  4218   003A16  5170               	movf	(??_floorf+3)& (0+255),w,b
  4219   003A18  177C               	andwf	(floorf@u+3)& (0+255),f,b
  4220   003A1A  EF53  F01D         	goto	l5805
  4221   003A1E                     l5797:
  4222                           
  4223                           ; BSR set to: 0
  4224   003A1E  C079  F06D         	movff	floorf@u,??_floorf
  4225   003A22  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  4226   003A26  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  4227   003A2A  C07C  F070         	movff	floorf@u+3,??_floorf+3
  4228   003A2E  0E20               	movlw	32
  4229   003A30  EF1F  F01D         	goto	u6380
  4230   003A34                     u6385:
  4231   003A34  90D8               	bcf	status,0,c
  4232   003A36  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  4233   003A38  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  4234   003A3A  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  4235   003A3C  336D               	rrcf	??_floorf& (0+255),f,b
  4236   003A3E                     u6380:
  4237   003A3E  2EE8               	decfsz	wreg,f,c
  4238   003A40  EF1A  F01D         	goto	u6385
  4239   003A44  516D               	movf	??_floorf& (0+255),w,b
  4240   003A46  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  4241   003A48  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  4242   003A4A  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  4243   003A4C  A4D8               	btfss	status,2,c
  4244   003A4E  EF2B  F01D         	goto	u6391
  4245   003A52  EF2D  F01D         	goto	u6390
  4246   003A56                     u6391:
  4247   003A56  EF37  F01D         	goto	l5801
  4248   003A5A                     u6390:
  4249   003A5A                     
  4250                           ; BSR set to: 0
  4251   003A5A  0E00               	movlw	0
  4252   003A5C  6F79               	movwf	floorf@u& (0+255),b
  4253   003A5E  0E00               	movlw	0
  4254   003A60  6F7A               	movwf	(floorf@u+1)& (0+255),b
  4255   003A62  0E00               	movlw	0
  4256   003A64  6F7B               	movwf	(floorf@u+2)& (0+255),b
  4257   003A66  0E00               	movlw	0
  4258   003A68  6F7C               	movwf	(floorf@u+3)& (0+255),b
  4259   003A6A  EF53  F01D         	goto	l5805
  4260   003A6E                     l5801:
  4261                           
  4262                           ; BSR set to: 0
  4263   003A6E  90D8               	bcf	status,0,c
  4264   003A70  3579               	rlcf	floorf@u& (0+255),w,b
  4265   003A72  6F6D               	movwf	??_floorf& (0+255),b
  4266   003A74  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  4267   003A76  6F6E               	movwf	(??_floorf+1)& (0+255),b
  4268   003A78  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  4269   003A7A  6F6F               	movwf	(??_floorf+2)& (0+255),b
  4270   003A7C  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  4271   003A7E  6F70               	movwf	(??_floorf+3)& (0+255),b
  4272   003A80  516D               	movf	??_floorf& (0+255),w,b
  4273   003A82  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  4274   003A84  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  4275   003A86  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  4276   003A88  B4D8               	btfsc	status,2,c
  4277   003A8A  EF49  F01D         	goto	u6401
  4278   003A8E  EF4B  F01D         	goto	u6400
  4279   003A92                     u6401:
  4280   003A92  EF53  F01D         	goto	l5805
  4281   003A96                     u6400:
  4282   003A96                     
  4283                           ; BSR set to: 0
  4284   003A96  0E00               	movlw	0
  4285   003A98  6F79               	movwf	floorf@u& (0+255),b
  4286   003A9A  0E00               	movlw	0
  4287   003A9C  6F7A               	movwf	(floorf@u+1)& (0+255),b
  4288   003A9E  0E80               	movlw	128
  4289   003AA0  6F7B               	movwf	(floorf@u+2)& (0+255),b
  4290   003AA2  0EBF               	movlw	191
  4291   003AA4  6F7C               	movwf	(floorf@u+3)& (0+255),b
  4292   003AA6                     l5805:
  4293                           
  4294                           ; BSR set to: 0
  4295   003AA6  C079  F05B         	movff	floorf@u,?_floorf
  4296   003AAA  C07A  F05C         	movff	floorf@u+1,?_floorf+1
  4297   003AAE  C07B  F05D         	movff	floorf@u+2,?_floorf+2
  4298   003AB2  C07C  F05E         	movff	floorf@u+3,?_floorf+3
  4299   003AB6                     l1274:
  4300                           
  4301                           ; BSR set to: 0
  4302   003AB6  0012               	return		;funcret
  4303   003AB8                     __end_of_floorf:
  4304                           	callstack 0
  4305                           
  4306 ;; *************** function ___fltol *****************
  4307 ;; Defined at:
  4308 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  f1              4    0[COMRAM] float 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  exp1            1    9[COMRAM] unsigned char 
  4313 ;;  sign1           1    8[COMRAM] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  4    0[COMRAM] long 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4323 ;;      Params:         4       0       0       0       0       0       0       0       0
  4324 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4325 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4326 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4327 ;;Total ram usage:       10 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_main
  4333 ;;		_efgtoa
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text11
  4338   004530                     __ptext11:
  4339                           	callstack 0
  4340   004530                     ___fltol:
  4341                           	callstack 26
  4342   004530  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4343   004532  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4344   004534  6E0A               	movwf	___fltol@exp1^0,c
  4345   004536  500A               	movf	___fltol@exp1^0,w,c
  4346   004538  A4D8               	btfss	status,2,c
  4347   00453A  EFA1  F022         	goto	u6131
  4348   00453E  EFA3  F022         	goto	u6130
  4349   004542                     u6131:
  4350   004542  EFAD  F022         	goto	l5697
  4351   004546                     u6130:
  4352   004546                     l5693:
  4353   004546  0E00               	movlw	0
  4354   004548  6E01               	movwf	?___fltol^0,c
  4355   00454A  0E00               	movlw	0
  4356   00454C  6E02               	movwf	(?___fltol+1)^0,c
  4357   00454E  0E00               	movlw	0
  4358   004550  6E03               	movwf	(?___fltol+2)^0,c
  4359   004552  0E00               	movlw	0
  4360   004554  6E04               	movwf	(?___fltol+3)^0,c
  4361   004556  EF1A  F023         	goto	l681
  4362   00455A                     l5697:
  4363   00455A  C001  F005         	movff	___fltol@f1,??___fltol
  4364   00455E  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4365   004562  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4366   004566  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4367   00456A  0E20               	movlw	32
  4368   00456C  EFBD  F022         	goto	u6140
  4369   004570                     u6145:
  4370   004570  90D8               	bcf	status,0,c
  4371   004572  3208               	rrcf	(??___fltol+3)^0,f,c
  4372   004574  3207               	rrcf	(??___fltol+2)^0,f,c
  4373   004576  3206               	rrcf	(??___fltol+1)^0,f,c
  4374   004578  3205               	rrcf	??___fltol^0,f,c
  4375   00457A                     u6140:
  4376   00457A  2EE8               	decfsz	wreg,f,c
  4377   00457C  EFB8  F022         	goto	u6145
  4378   004580  5005               	movf	??___fltol^0,w,c
  4379   004582  6E09               	movwf	___fltol@sign1^0,c
  4380   004584  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4381   004586  0EFF               	movlw	255
  4382   004588  1601               	andwf	___fltol@f1^0,f,c
  4383   00458A  0EFF               	movlw	255
  4384   00458C  1602               	andwf	(___fltol@f1+1)^0,f,c
  4385   00458E  0EFF               	movlw	255
  4386   004590  1603               	andwf	(___fltol@f1+2)^0,f,c
  4387   004592  0E00               	movlw	0
  4388   004594  1604               	andwf	(___fltol@f1+3)^0,f,c
  4389   004596  0E96               	movlw	150
  4390   004598  5E0A               	subwf	___fltol@exp1^0,f,c
  4391   00459A  BE0A               	btfsc	___fltol@exp1^0,7,c
  4392   00459C  EFD4  F022         	goto	u6150
  4393   0045A0  EFD2  F022         	goto	u6151
  4394   0045A4                     u6151:
  4395   0045A4  EFEA  F022         	goto	l5717
  4396   0045A8                     u6150:
  4397   0045A8  500A               	movf	___fltol@exp1^0,w,c
  4398   0045AA  0A80               	xorlw	128
  4399   0045AC  0F97               	addlw	151
  4400   0045AE  B0D8               	btfsc	status,0,c
  4401   0045B0  EFDC  F022         	goto	u6161
  4402   0045B4  EFDE  F022         	goto	u6160
  4403   0045B8                     u6161:
  4404   0045B8  EFE0  F022         	goto	l5713
  4405   0045BC                     u6160:
  4406   0045BC  EFA3  F022         	goto	l5693
  4407   0045C0                     l5713:
  4408   0045C0  90D8               	bcf	status,0,c
  4409   0045C2  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4410   0045C4  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4411   0045C6  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4412   0045C8  3201               	rrcf	___fltol@f1^0,f,c
  4413   0045CA  3E0A               	incfsz	___fltol@exp1^0,f,c
  4414   0045CC  EFE0  F022         	goto	l5713
  4415   0045D0  EF02  F023         	goto	l5727
  4416   0045D4                     l5717:
  4417   0045D4  0E1F               	movlw	31
  4418   0045D6  640A               	cpfsgt	___fltol@exp1^0,c
  4419   0045D8  EFF0  F022         	goto	u6171
  4420   0045DC  EFF2  F022         	goto	u6170
  4421   0045E0                     u6171:
  4422   0045E0  EFFA  F022         	goto	l5725
  4423   0045E4                     u6170:
  4424   0045E4  EFA3  F022         	goto	l5693
  4425   0045E8                     l5723:
  4426   0045E8  90D8               	bcf	status,0,c
  4427   0045EA  3601               	rlcf	___fltol@f1^0,f,c
  4428   0045EC  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4429   0045EE  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4430   0045F0  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4431   0045F2  060A               	decf	___fltol@exp1^0,f,c
  4432   0045F4                     l5725:
  4433   0045F4  500A               	movf	___fltol@exp1^0,w,c
  4434   0045F6  A4D8               	btfss	status,2,c
  4435   0045F8  EF00  F023         	goto	u6181
  4436   0045FC  EF02  F023         	goto	u6180
  4437   004600                     u6181:
  4438   004600  EFF4  F022         	goto	l5723
  4439   004604                     u6180:
  4440   004604                     l5727:
  4441   004604  5009               	movf	___fltol@sign1^0,w,c
  4442   004606  B4D8               	btfsc	status,2,c
  4443   004608  EF08  F023         	goto	u6191
  4444   00460C  EF0A  F023         	goto	u6190
  4445   004610                     u6191:
  4446   004610  EF12  F023         	goto	l5731
  4447   004614                     u6190:
  4448   004614  1E04               	comf	(___fltol@f1+3)^0,f,c
  4449   004616  1E03               	comf	(___fltol@f1+2)^0,f,c
  4450   004618  1E02               	comf	(___fltol@f1+1)^0,f,c
  4451   00461A  6C01               	negf	___fltol@f1^0,c
  4452   00461C  0E00               	movlw	0
  4453   00461E  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4454   004620  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4455   004622  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4456   004624                     l5731:
  4457   004624  C001  F001         	movff	___fltol@f1,?___fltol
  4458   004628  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4459   00462C  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4460   004630  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4461   004634                     l681:
  4462   004634  0012               	return		;funcret
  4463   004636                     __end_of___fltol:
  4464                           	callstack 0
  4465                           
  4466 ;; *************** function ___fleq *****************
  4467 ;; Defined at:
  4468 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;  ff1             4    0[COMRAM] long 
  4471 ;;  ff2             4    4[COMRAM] long 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;		None
  4474 ;; Return value:  Size  Location     Type
  4475 ;;		None               void
  4476 ;; Registers used:
  4477 ;;		wreg, status,2, status,0
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4483 ;;      Params:         8       0       0       0       0       0       0       0       0
  4484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4485 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4486 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4487 ;;Total ram usage:       12 bytes
  4488 ;; Hardware stack levels used: 1
  4489 ;; This function calls:
  4490 ;;		Nothing
  4491 ;; This function is called by:
  4492 ;;		_efgtoa
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text12
  4497   004A76                     __ptext12:
  4498                           	callstack 0
  4499   004A76                     ___fleq:
  4500                           	callstack 26
  4501   004A76  0E00               	movlw	0
  4502   004A78  1401               	andwf	___fleq@ff1^0,w,c
  4503   004A7A  6E09               	movwf	??___fleq^0,c
  4504   004A7C  0E00               	movlw	0
  4505   004A7E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4506   004A80  6E0A               	movwf	(??___fleq+1)^0,c
  4507   004A82  0E80               	movlw	128
  4508   004A84  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4509   004A86  6E0B               	movwf	(??___fleq+2)^0,c
  4510   004A88  0E7F               	movlw	127
  4511   004A8A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4512   004A8C  6E0C               	movwf	(??___fleq+3)^0,c
  4513   004A8E  5009               	movf	??___fleq^0,w,c
  4514   004A90  100A               	iorwf	(??___fleq+1)^0,w,c
  4515   004A92  100B               	iorwf	(??___fleq+2)^0,w,c
  4516   004A94  100C               	iorwf	(??___fleq+3)^0,w,c
  4517   004A96  A4D8               	btfss	status,2,c
  4518   004A98  EF50  F025         	goto	u6041
  4519   004A9C  EF52  F025         	goto	u6040
  4520   004AA0                     u6041:
  4521   004AA0  EF5A  F025         	goto	l5649
  4522   004AA4                     u6040:
  4523   004AA4  0E00               	movlw	0
  4524   004AA6  6E01               	movwf	___fleq@ff1^0,c
  4525   004AA8  0E00               	movlw	0
  4526   004AAA  6E02               	movwf	(___fleq@ff1+1)^0,c
  4527   004AAC  0E00               	movlw	0
  4528   004AAE  6E03               	movwf	(___fleq@ff1+2)^0,c
  4529   004AB0  0E00               	movlw	0
  4530   004AB2  6E04               	movwf	(___fleq@ff1+3)^0,c
  4531   004AB4                     l5649:
  4532   004AB4  0E00               	movlw	0
  4533   004AB6  1405               	andwf	___fleq@ff2^0,w,c
  4534   004AB8  6E09               	movwf	??___fleq^0,c
  4535   004ABA  0E00               	movlw	0
  4536   004ABC  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4537   004ABE  6E0A               	movwf	(??___fleq+1)^0,c
  4538   004AC0  0E80               	movlw	128
  4539   004AC2  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4540   004AC4  6E0B               	movwf	(??___fleq+2)^0,c
  4541   004AC6  0E7F               	movlw	127
  4542   004AC8  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4543   004ACA  6E0C               	movwf	(??___fleq+3)^0,c
  4544   004ACC  5009               	movf	??___fleq^0,w,c
  4545   004ACE  100A               	iorwf	(??___fleq+1)^0,w,c
  4546   004AD0  100B               	iorwf	(??___fleq+2)^0,w,c
  4547   004AD2  100C               	iorwf	(??___fleq+3)^0,w,c
  4548   004AD4  A4D8               	btfss	status,2,c
  4549   004AD6  EF6F  F025         	goto	u6051
  4550   004ADA  EF71  F025         	goto	u6050
  4551   004ADE                     u6051:
  4552   004ADE  EF79  F025         	goto	l5653
  4553   004AE2                     u6050:
  4554   004AE2  0E00               	movlw	0
  4555   004AE4  6E05               	movwf	___fleq@ff2^0,c
  4556   004AE6  0E00               	movlw	0
  4557   004AE8  6E06               	movwf	(___fleq@ff2+1)^0,c
  4558   004AEA  0E00               	movlw	0
  4559   004AEC  6E07               	movwf	(___fleq@ff2+2)^0,c
  4560   004AEE  0E00               	movlw	0
  4561   004AF0  6E08               	movwf	(___fleq@ff2+3)^0,c
  4562   004AF2                     l5653:
  4563   004AF2  5005               	movf	___fleq@ff2^0,w,c
  4564   004AF4  1801               	xorwf	___fleq@ff1^0,w,c
  4565   004AF6  E10F               	bnz	u6060
  4566   004AF8  5006               	movf	(___fleq@ff2+1)^0,w,c
  4567   004AFA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4568   004AFC  E10C               	bnz	u6060
  4569   004AFE  5007               	movf	(___fleq@ff2+2)^0,w,c
  4570   004B00  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4571   004B02  E109               	bnz	u6060
  4572   004B04  5008               	movf	(___fleq@ff2+3)^0,w,c
  4573   004B06  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4574   004B08  B4D8               	btfsc	status,2,c
  4575   004B0A  EF89  F025         	goto	u6061
  4576   004B0E  EF8B  F025         	goto	u6060
  4577   004B12                     u6061:
  4578   004B12  EF8E  F025         	goto	l5657
  4579   004B16                     u6060:
  4580   004B16  90D8               	bcf	status,0,c
  4581   004B18  EF8F  F025         	goto	l643
  4582   004B1C                     l5657:
  4583   004B1C  80D8               	bsf	status,0,c
  4584   004B1E                     l643:
  4585   004B1E  0012               	return		;funcret
  4586   004B20                     __end_of___fleq:
  4587                           	callstack 0
  4588                           
  4589 ;; *************** function _dtoa *****************
  4590 ;; Defined at:
  4591 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  4594 ;;		 -> sprintf@f(12), 
  4595 ;;  d               2   27[COMRAM] int 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  i               2   36[COMRAM] int 
  4598 ;;  p               2   33[COMRAM] int 
  4599 ;;  w               2   31[COMRAM] int 
  4600 ;;  s               1   35[COMRAM] unsigned char 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4610 ;;      Params:         4       0       0       0       0       0       0       0       0
  4611 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4613 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4614 ;;Total ram usage:       13 bytes
  4615 ;; Hardware stack levels used: 1
  4616 ;; Hardware stack levels required when called: 4
  4617 ;; This function calls:
  4618 ;;		___awdiv
  4619 ;;		___awmod
  4620 ;;		_abs
  4621 ;;		_pad
  4622 ;; This function is called by:
  4623 ;;		_vfpfcnvrt
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text13
  4628   004260                     __ptext13:
  4629                           	callstack 0
  4630   004260                     _dtoa:
  4631                           	callstack 23
  4632   004260                     
  4633                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  4634   004260  BE1D               	btfsc	(dtoa@d+1)^0,7,c
  4635   004262  EF35  F021         	goto	u7611
  4636   004266  EF38  F021         	goto	u7610
  4637   00426A                     u7611:
  4638   00426A  0E01               	movlw	1
  4639   00426C  EF39  F021         	goto	u7620
  4640   004270                     u7610:
  4641   004270  0E00               	movlw	0
  4642   004272                     u7620:
  4643   004272  6E24               	movwf	dtoa@s^0,c
  4644                           
  4645                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  4646   004274  0100               	movlb	0	; () banked
  4647   004276  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  4648   004278  EF42  F021         	goto	u7630
  4649   00427C  EF40  F021         	goto	u7631
  4650   004280                     u7631:
  4651   004280  EF48  F021         	goto	l1164
  4652   004284                     u7630:
  4653   004284                     
  4654                           ; BSR set to: 0
  4655   004284  0E00               	movlw	0
  4656   004286  6E23               	movwf	(dtoa@p+1)^0,c
  4657   004288  0E01               	movlw	1
  4658   00428A  6E22               	movwf	dtoa@p^0,c
  4659   00428C  EF4C  F021         	goto	l1166
  4660   004290                     l1164:
  4661                           
  4662                           ; BSR set to: 0
  4663   004290  C0E6  F022         	movff	_prec,dtoa@p
  4664   004294  C0E7  F023         	movff	_prec+1,dtoa@p+1
  4665   004298                     l1166:
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  4669   004298  C0E4  F020         	movff	_width,dtoa@w
  4670   00429C  C0E5  F021         	movff	_width+1,dtoa@w+1
  4671   0042A0                     
  4672                           ; BSR set to: 0
  4673                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  4674   0042A0  5024               	movf	dtoa@s^0,w,c
  4675   0042A2  B4D8               	btfsc	status,2,c
  4676   0042A4  EF56  F021         	goto	u7641
  4677   0042A8  EF58  F021         	goto	u7640
  4678   0042AC                     u7641:
  4679   0042AC  EF6F  F021         	goto	l1167
  4680   0042B0                     u7640:
  4681   0042B0                     
  4682                           ; BSR set to: 0
  4683                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  4684   0042B0  0620               	decf	dtoa@w^0,f,c
  4685   0042B2  A0D8               	btfss	status,0,c
  4686   0042B4  0621               	decf	(dtoa@w+1)^0,f,c
  4687   0042B6                     
  4688                           ; BSR set to: 0
  4689                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  4690   0042B6  5024               	movf	dtoa@s^0,w,c
  4691   0042B8  A4D8               	btfss	status,2,c
  4692   0042BA  EF61  F021         	goto	u7651
  4693   0042BE  EF63  F021         	goto	u7650
  4694   0042C2                     u7651:
  4695   0042C2  EF69  F021         	goto	l6951
  4696   0042C6                     u7650:
  4697   0042C6                     
  4698                           ; BSR set to: 0
  4699   0042C6  0E00               	movlw	0
  4700   0042C8  6E1F               	movwf	(_dtoa$1439+1)^0,c
  4701   0042CA  0E2B               	movlw	43
  4702   0042CC  6E1E               	movwf	_dtoa$1439^0,c
  4703   0042CE  EF6D  F021         	goto	l6953
  4704   0042D2                     l6951:
  4705                           
  4706                           ; BSR set to: 0
  4707   0042D2  0E00               	movlw	0
  4708   0042D4  6E1F               	movwf	(_dtoa$1439+1)^0,c
  4709   0042D6  0E2D               	movlw	45
  4710   0042D8  6E1E               	movwf	_dtoa$1439^0,c
  4711   0042DA                     l6953:
  4712                           
  4713                           ; BSR set to: 0
  4714   0042DA  C01E  F024         	movff	_dtoa$1439,dtoa@s
  4715   0042DE                     l1167:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  4719   0042DE  0E00               	movlw	0
  4720   0042E0  6E26               	movwf	(dtoa@i+1)^0,c
  4721   0042E2  0E4F               	movlw	79
  4722   0042E4  6E25               	movwf	dtoa@i^0,c
  4723   0042E6                     
  4724                           ; BSR set to: 0
  4725                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  4726   0042E6  0E00               	movlw	0
  4727   0042E8  0102               	movlb	2	; () banked
  4728   0042EA  6F4F               	movwf	(_dbuf+79)& (0+255),b
  4729                           
  4730                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  4731   0042EC  EFA8  F021         	goto	l6967
  4732   0042F0                     l6957:
  4733                           
  4734                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  4735   0042F0  0625               	decf	dtoa@i^0,f,c
  4736   0042F2  A0D8               	btfss	status,0,c
  4737   0042F4  0626               	decf	(dtoa@i+1)^0,f,c
  4738   0042F6                     
  4739                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  4740   0042F6  0E00               	movlw	low _dbuf
  4741   0042F8  2425               	addwf	dtoa@i^0,w,c
  4742   0042FA  6ED9               	movwf	fsr2l,c
  4743   0042FC  0E02               	movlw	high _dbuf
  4744   0042FE  2026               	addwfc	(dtoa@i+1)^0,w,c
  4745   004300  6EDA               	movwf	fsr2h,c
  4746   004302  C01C  F001         	movff	dtoa@d,___awmod@dividend
  4747   004306  C01D  F002         	movff	dtoa@d+1,___awmod@dividend+1
  4748   00430A  0E00               	movlw	0
  4749   00430C  6E04               	movwf	(___awmod@divisor+1)^0,c
  4750   00430E  0E0A               	movlw	10
  4751   004310  6E03               	movwf	___awmod@divisor^0,c
  4752   004312  ECE3  F024         	call	___awmod	;wreg free
  4753   004316  C001  F00B         	movff	?___awmod,abs@a
  4754   00431A  C002  F00C         	movff	?___awmod+1,abs@a+1
  4755   00431E  EC76  F028         	call	_abs	;wreg free
  4756   004322  500B               	movf	?_abs^0,w,c
  4757   004324  0F30               	addlw	48
  4758   004326  6EDF               	movwf	indf2,c
  4759   004328                     
  4760                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
  4761   004328  0622               	decf	dtoa@p^0,f,c
  4762   00432A  A0D8               	btfss	status,0,c
  4763   00432C  0623               	decf	(dtoa@p+1)^0,f,c
  4764   00432E                     
  4765                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  4766   00432E  0620               	decf	dtoa@w^0,f,c
  4767   004330  A0D8               	btfss	status,0,c
  4768   004332  0621               	decf	(dtoa@w+1)^0,f,c
  4769   004334                     
  4770                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  4771   004334  C01C  F001         	movff	dtoa@d,___awdiv@dividend
  4772   004338  C01D  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  4773   00433C  0E00               	movlw	0
  4774   00433E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4775   004340  0E0A               	movlw	10
  4776   004342  6E03               	movwf	___awdiv@divisor^0,c
  4777   004344  EC81  F024         	call	___awdiv	;wreg free
  4778   004348  C001  F01C         	movff	?___awdiv,dtoa@d
  4779   00434C  C002  F01D         	movff	?___awdiv+1,dtoa@d+1
  4780   004350                     l6967:
  4781                           
  4782                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  4783   004350  BE26               	btfsc	(dtoa@i+1)^0,7,c
  4784   004352  EFB3  F021         	goto	u7661
  4785   004356  5026               	movf	(dtoa@i+1)^0,w,c
  4786   004358  E108               	bnz	u7660
  4787   00435A  0425               	decf	dtoa@i^0,w,c
  4788   00435C  A0D8               	btfss	status,0,c
  4789   00435E  EFB3  F021         	goto	u7661
  4790   004362  EFB5  F021         	goto	u7660
  4791   004366                     u7661:
  4792   004366  EFCB  F021         	goto	l6973
  4793   00436A                     u7660:
  4794   00436A  501C               	movf	dtoa@d^0,w,c
  4795   00436C  101D               	iorwf	(dtoa@d+1)^0,w,c
  4796   00436E  A4D8               	btfss	status,2,c
  4797   004370  EFBC  F021         	goto	u7671
  4798   004374  EFBE  F021         	goto	u7670
  4799   004378                     u7671:
  4800   004378  EF78  F021         	goto	l6957
  4801   00437C                     u7670:
  4802   00437C  BE23               	btfsc	(dtoa@p+1)^0,7,c
  4803   00437E  EFCB  F021         	goto	u7680
  4804   004382  5023               	movf	(dtoa@p+1)^0,w,c
  4805   004384  E106               	bnz	u7681
  4806   004386  0422               	decf	dtoa@p^0,w,c
  4807   004388  B0D8               	btfsc	status,0,c
  4808   00438A  EFC9  F021         	goto	u7681
  4809   00438E  EFCB  F021         	goto	u7680
  4810   004392                     u7681:
  4811   004392  EF78  F021         	goto	l6957
  4812   004396                     u7680:
  4813   004396                     l6973:
  4814                           
  4815                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  4816   004396  5024               	movf	dtoa@s^0,w,c
  4817   004398  B4D8               	btfsc	status,2,c
  4818   00439A  EFD1  F021         	goto	u7691
  4819   00439E  EFD3  F021         	goto	u7690
  4820   0043A2                     u7691:
  4821   0043A2  EFDE  F021         	goto	l6979
  4822   0043A6                     u7690:
  4823   0043A6                     
  4824                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  4825   0043A6  0625               	decf	dtoa@i^0,f,c
  4826   0043A8  A0D8               	btfss	status,0,c
  4827   0043AA  0626               	decf	(dtoa@i+1)^0,f,c
  4828   0043AC                     
  4829                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  4830   0043AC  0E00               	movlw	low _dbuf
  4831   0043AE  2425               	addwf	dtoa@i^0,w,c
  4832   0043B0  6ED9               	movwf	fsr2l,c
  4833   0043B2  0E02               	movlw	high _dbuf
  4834   0043B4  2026               	addwfc	(dtoa@i+1)^0,w,c
  4835   0043B6  6EDA               	movwf	fsr2h,c
  4836   0043B8  C024  FFDF         	movff	dtoa@s,indf2
  4837   0043BC                     l6979:
  4838                           
  4839                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4840   0043BC  C01A  F011         	movff	dtoa@fp,pad@fp
  4841   0043C0  C01B  F012         	movff	dtoa@fp+1,pad@fp+1
  4842   0043C4  0E00               	movlw	low _dbuf
  4843   0043C6  2425               	addwf	dtoa@i^0,w,c
  4844   0043C8  6E13               	movwf	pad@buf^0,c
  4845   0043CA  0E02               	movlw	high _dbuf
  4846   0043CC  2026               	addwfc	(dtoa@i+1)^0,w,c
  4847   0043CE  6E14               	movwf	(pad@buf+1)^0,c
  4848   0043D0  C020  F015         	movff	dtoa@w,pad@p
  4849   0043D4  C021  F016         	movff	dtoa@w+1,pad@p+1
  4850   0043D8  EC6C  F026         	call	_pad	;wreg free
  4851   0043DC  0012               	return		;funcret
  4852   0043DE                     __end_of_dtoa:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function _pad *****************
  4856 ;; Defined at:
  4857 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4860 ;;		 -> sprintf@f(12), 
  4861 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4862 ;;		 -> dbuf(80), 
  4863 ;;  p               2   20[COMRAM] int 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  i               2   23[COMRAM] int 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      void 
  4868 ;; Registers used:
  4869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4875 ;;      Params:         6       0       0       0       0       0       0       0       0
  4876 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4877 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4878 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4879 ;;Total ram usage:        9 bytes
  4880 ;; Hardware stack levels used: 1
  4881 ;; Hardware stack levels required when called: 3
  4882 ;; This function calls:
  4883 ;;		_fputc
  4884 ;;		_fputs
  4885 ;; This function is called by:
  4886 ;;		_dtoa
  4887 ;;		_efgtoa
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text14
  4892   004CD8                     __ptext14:
  4893                           	callstack 0
  4894   004CD8                     _pad:
  4895                           	callstack 23
  4896   004CD8                     
  4897                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  4898   004CD8  BE16               	btfsc	(pad@p+1)^0,7,c
  4899   004CDA  EF73  F026         	goto	u7590
  4900   004CDE  EF71  F026         	goto	u7591
  4901   004CE2                     u7591:
  4902   004CE2  EF77  F026         	goto	l1156
  4903   004CE6                     u7590:
  4904   004CE6                     
  4905                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4906   004CE6  0E00               	movlw	0
  4907   004CE8  6E16               	movwf	(pad@p+1)^0,c
  4908   004CEA  0E00               	movlw	0
  4909   004CEC  6E15               	movwf	pad@p^0,c
  4910   004CEE                     l1156:
  4911                           
  4912                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4913   004CEE  0E00               	movlw	0
  4914   004CF0  6E19               	movwf	(pad@i+1)^0,c
  4915   004CF2  0E00               	movlw	0
  4916   004CF4  6E18               	movwf	pad@i^0,c
  4917                           
  4918                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4919   004CF6  EF89  F026         	goto	l6935
  4920   004CFA                     l6931:
  4921                           
  4922                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4923   004CFA  0E00               	movlw	0
  4924   004CFC  6E02               	movwf	(fputc@c+1)^0,c
  4925   004CFE  0E20               	movlw	32
  4926   004D00  6E01               	movwf	fputc@c^0,c
  4927   004D02  C011  F003         	movff	pad@fp,fputc@fp
  4928   004D06  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4929   004D0A  EC1C  F024         	call	_fputc	;wreg free
  4930   004D0E                     
  4931                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4932   004D0E  4A18               	infsnz	pad@i^0,f,c
  4933   004D10  2A19               	incf	(pad@i+1)^0,f,c
  4934   004D12                     l6935:
  4935                           
  4936                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4937   004D12  5015               	movf	pad@p^0,w,c
  4938   004D14  5C18               	subwf	pad@i^0,w,c
  4939   004D16  5019               	movf	(pad@i+1)^0,w,c
  4940   004D18  0A80               	xorlw	128
  4941   004D1A  6E17               	movwf	??_pad^0,c
  4942   004D1C  5016               	movf	(pad@p+1)^0,w,c
  4943   004D1E  0A80               	xorlw	128
  4944   004D20  5817               	subwfb	??_pad^0,w,c
  4945   004D22  A0D8               	btfss	status,0,c
  4946   004D24  EF96  F026         	goto	u7601
  4947   004D28  EF98  F026         	goto	u7600
  4948   004D2C                     u7601:
  4949   004D2C  EF7D  F026         	goto	l6931
  4950   004D30                     u7600:
  4951   004D30                     
  4952                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4953   004D30  C013  F00A         	movff	pad@buf,fputs@s
  4954   004D34  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4955   004D38  C011  F00C         	movff	pad@fp,fputs@fp
  4956   004D3C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4957   004D40  ECE1  F027         	call	_fputs	;wreg free
  4958   004D44  0012               	return		;funcret
  4959   004D46                     __end_of_pad:
  4960                           	callstack 0
  4961                           
  4962 ;; *************** function _fputs *****************
  4963 ;; Defined at:
  4964 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4967 ;;		 -> dbuf(80), 
  4968 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4969 ;;		 -> sprintf@f(12), 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  i               2   14[COMRAM] int 
  4972 ;;  c               1   13[COMRAM] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  2    9[COMRAM] int 
  4975 ;; Registers used:
  4976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4982 ;;      Params:         4       0       0       0       0       0       0       0       0
  4983 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4985 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4986 ;;Total ram usage:        7 bytes
  4987 ;; Hardware stack levels used: 1
  4988 ;; Hardware stack levels required when called: 2
  4989 ;; This function calls:
  4990 ;;		_fputc
  4991 ;; This function is called by:
  4992 ;;		_pad
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text15
  4997   004FC2                     __ptext15:
  4998                           	callstack 0
  4999   004FC2                     _fputs:
  5000                           	callstack 23
  5001   004FC2  0E00               	movlw	0
  5002   004FC4  6E10               	movwf	(fputs@i+1)^0,c
  5003   004FC6  0E00               	movlw	0
  5004   004FC8  6E0F               	movwf	fputs@i^0,c
  5005   004FCA  EFF2  F027         	goto	l6925
  5006   004FCE                     l6921:
  5007   004FCE  C00E  F001         	movff	fputs@c,fputc@c
  5008   004FD2  6A02               	clrf	(fputc@c+1)^0,c
  5009   004FD4  C00C  F003         	movff	fputs@fp,fputc@fp
  5010   004FD8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5011   004FDC  EC1C  F024         	call	_fputc	;wreg free
  5012   004FE0  4A0F               	infsnz	fputs@i^0,f,c
  5013   004FE2  2A10               	incf	(fputs@i+1)^0,f,c
  5014   004FE4                     l6925:
  5015   004FE4  500F               	movf	fputs@i^0,w,c
  5016   004FE6  240A               	addwf	fputs@s^0,w,c
  5017   004FE8  6ED9               	movwf	fsr2l,c
  5018   004FEA  5010               	movf	(fputs@i+1)^0,w,c
  5019   004FEC  200B               	addwfc	(fputs@s+1)^0,w,c
  5020   004FEE  6EDA               	movwf	fsr2h,c
  5021   004FF0  50DF               	movf	indf2,w,c
  5022   004FF2  6E0E               	movwf	fputs@c^0,c
  5023   004FF4  500E               	movf	fputs@c^0,w,c
  5024   004FF6  A4D8               	btfss	status,2,c
  5025   004FF8  EF00  F028         	goto	u7581
  5026   004FFC  EF02  F028         	goto	u7580
  5027   005000                     u7581:
  5028   005000  EFE7  F027         	goto	l6921
  5029   005004                     u7580:
  5030   005004  0012               	return		;funcret
  5031   005006                     __end_of_fputs:
  5032                           	callstack 0
  5033                           
  5034 ;; *************** function _fputc *****************
  5035 ;; Defined at:
  5036 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  c               2    0[COMRAM] int 
  5039 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5040 ;;		 -> sprintf@f(12), 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  2    0[COMRAM] int 
  5045 ;; Registers used:
  5046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5052 ;;      Params:         4       0       0       0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5054 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5055 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        9 bytes
  5057 ;; Hardware stack levels used: 1
  5058 ;; Hardware stack levels required when called: 1
  5059 ;; This function calls:
  5060 ;;		_putch
  5061 ;; This function is called by:
  5062 ;;		_pad
  5063 ;;		_vfpfcnvrt
  5064 ;;		_fputs
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text16
  5069   004838                     __ptext16:
  5070                           	callstack 0
  5071   004838                     _fputc:
  5072                           	callstack 26
  5073   004838  5003               	movf	fputc@fp^0,w,c
  5074   00483A  1004               	iorwf	(fputc@fp+1)^0,w,c
  5075   00483C  B4D8               	btfsc	status,2,c
  5076   00483E  EF23  F024         	goto	u7541
  5077   004842  EF25  F024         	goto	u7540
  5078   004846                     u7541:
  5079   004846  EF2E  F024         	goto	l6909
  5080   00484A                     u7540:
  5081   00484A  5003               	movf	fputc@fp^0,w,c
  5082   00484C  1004               	iorwf	(fputc@fp+1)^0,w,c
  5083   00484E  A4D8               	btfss	status,2,c
  5084   004850  EF2C  F024         	goto	u7551
  5085   004854  EF2E  F024         	goto	u7550
  5086   004858                     u7551:
  5087   004858  EF33  F024         	goto	l6911
  5088   00485C                     u7550:
  5089   00485C                     l6909:
  5090   00485C  5001               	movf	fputc@c^0,w,c
  5091   00485E  EC5A  F029         	call	_putch
  5092   004862  EF80  F024         	goto	l1306
  5093   004866                     l6911:
  5094   004866  EE20 F00A          	lfsr	2,10
  5095   00486A  5003               	movf	fputc@fp^0,w,c
  5096   00486C  26D9               	addwf	fsr2l,f,c
  5097   00486E  5004               	movf	(fputc@fp+1)^0,w,c
  5098   004870  22DA               	addwfc	fsr2h,f,c
  5099   004872  50DE               	movf	postinc2,w,c
  5100   004874  10DE               	iorwf	postinc2,w,c
  5101   004876  B4D8               	btfsc	status,2,c
  5102   004878  EF40  F024         	goto	u7561
  5103   00487C  EF42  F024         	goto	u7560
  5104   004880                     u7561:
  5105   004880  EF5D  F024         	goto	l6915
  5106   004884                     u7560:
  5107   004884  EE20 F00A          	lfsr	2,10
  5108   004888  5003               	movf	fputc@fp^0,w,c
  5109   00488A  26D9               	addwf	fsr2l,f,c
  5110   00488C  5004               	movf	(fputc@fp+1)^0,w,c
  5111   00488E  22DA               	addwfc	fsr2h,f,c
  5112   004890  EE10 F003          	lfsr	1,3
  5113   004894  5003               	movf	fputc@fp^0,w,c
  5114   004896  26E1               	addwf	fsr1l,f,c
  5115   004898  5004               	movf	(fputc@fp+1)^0,w,c
  5116   00489A  22E2               	addwfc	fsr1h,f,c
  5117   00489C  50DE               	movf	postinc2,w,c
  5118   00489E  5CE6               	subwf	postinc1,w,c
  5119   0048A0  50E6               	movf	postinc1,w,c
  5120   0048A2  0A80               	xorlw	128
  5121   0048A4  6E09               	movwf	(??_fputc+4)^0,c
  5122   0048A6  50DE               	movf	postinc2,w,c
  5123   0048A8  0A80               	xorlw	128
  5124   0048AA  5809               	subwfb	(??_fputc+4)^0,w,c
  5125   0048AC  B0D8               	btfsc	status,0,c
  5126   0048AE  EF5B  F024         	goto	u7571
  5127   0048B2  EF5D  F024         	goto	u7570
  5128   0048B6                     u7571:
  5129   0048B6  EF80  F024         	goto	l1306
  5130   0048BA                     u7570:
  5131   0048BA                     l6915:
  5132   0048BA  EE20 F003          	lfsr	2,3
  5133   0048BE  5003               	movf	fputc@fp^0,w,c
  5134   0048C0  26D9               	addwf	fsr2l,f,c
  5135   0048C2  5004               	movf	(fputc@fp+1)^0,w,c
  5136   0048C4  22DA               	addwfc	fsr2h,f,c
  5137   0048C6  CFDE F005          	movff	postinc2,??_fputc
  5138   0048CA  CFDD F006          	movff	postdec2,??_fputc+1
  5139   0048CE  C003  FFD9         	movff	fputc@fp,fsr2l
  5140   0048D2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5141   0048D6  CFDE F007          	movff	postinc2,??_fputc+2
  5142   0048DA  CFDD F008          	movff	postdec2,??_fputc+3
  5143   0048DE  5005               	movf	??_fputc^0,w,c
  5144   0048E0  2407               	addwf	(??_fputc+2)^0,w,c
  5145   0048E2  6ED9               	movwf	fsr2l,c
  5146   0048E4  5006               	movf	(??_fputc+1)^0,w,c
  5147   0048E6  2008               	addwfc	(??_fputc+3)^0,w,c
  5148   0048E8  6EDA               	movwf	fsr2h,c
  5149   0048EA  C001  FFDF         	movff	fputc@c,indf2
  5150   0048EE  EE20 F003          	lfsr	2,3
  5151   0048F2  5003               	movf	fputc@fp^0,w,c
  5152   0048F4  26D9               	addwf	fsr2l,f,c
  5153   0048F6  5004               	movf	(fputc@fp+1)^0,w,c
  5154   0048F8  22DA               	addwfc	fsr2h,f,c
  5155   0048FA  2ADE               	incf	postinc2,f,c
  5156   0048FC  0E00               	movlw	0
  5157   0048FE  22DD               	addwfc	postdec2,f,c
  5158   004900                     l1306:
  5159   004900  0012               	return		;funcret
  5160   004902                     __end_of_fputc:
  5161                           	callstack 0
  5162                           
  5163 ;; *************** function _putch *****************
  5164 ;; Defined at:
  5165 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  c               1    wreg     unsigned char 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  c               1    0[COMRAM] unsigned char 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5179 ;;      Params:         0       0       0       0       0       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5182 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5183 ;;Total ram usage:        0 bytes
  5184 ;; Hardware stack levels used: 1
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_fputc
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text17
  5193   0052B4                     __ptext17:
  5194                           	callstack 0
  5195   0052B4                     _putch:
  5196                           	callstack 26
  5197   0052B4  0012               	return		;funcret
  5198   0052B6                     __end_of_putch:
  5199                           	callstack 0
  5200                           
  5201 ;; *************** function _abs *****************
  5202 ;; Defined at:
  5203 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  a               2   10[COMRAM] int 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;		None
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  2   10[COMRAM] int 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5217 ;;      Params:         2       0       0       0       0       0       0       0       0
  5218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5219 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5220 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5221 ;;Total ram usage:        4 bytes
  5222 ;; Hardware stack levels used: 1
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_main
  5227 ;;		_dtoa
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text18
  5232   0050EC                     __ptext18:
  5233                           	callstack 0
  5234   0050EC                     _abs:
  5235                           	callstack 26
  5236   0050EC  BE0C               	btfsc	(abs@a+1)^0,7,c
  5237   0050EE  EF7B  F028         	goto	u5471
  5238   0050F2  EF7D  F028         	goto	u5470
  5239   0050F6                     u5471:
  5240   0050F6  EF83  F028         	goto	l1059
  5241   0050FA                     u5470:
  5242   0050FA  C00B  F00B         	movff	abs@a,?_abs
  5243   0050FE  C00C  F00C         	movff	abs@a+1,?_abs+1
  5244   005102  EF8F  F028         	goto	l1062
  5245   005106                     l1059:
  5246   005106  C00B  F00D         	movff	abs@a,??_abs
  5247   00510A  C00C  F00E         	movff	abs@a+1,??_abs+1
  5248   00510E  1E0D               	comf	??_abs^0,f,c
  5249   005110  1E0E               	comf	(??_abs+1)^0,f,c
  5250   005112  4A0D               	infsnz	??_abs^0,f,c
  5251   005114  2A0E               	incf	(??_abs+1)^0,f,c
  5252   005116  C00D  F00B         	movff	??_abs,?_abs
  5253   00511A  C00E  F00C         	movff	??_abs+1,?_abs+1
  5254   00511E                     l1062:
  5255   00511E  0012               	return		;funcret
  5256   005120                     __end_of_abs:
  5257                           	callstack 0
  5258                           
  5259 ;; *************** function ___awmod *****************
  5260 ;; Defined at:
  5261 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  dividend        2    0[COMRAM] int 
  5264 ;;  divisor         2    2[COMRAM] int 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  sign            1    5[COMRAM] unsigned char 
  5267 ;;  counter         1    4[COMRAM] unsigned char 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  2    0[COMRAM] int 
  5270 ;; Registers used:
  5271 ;;		wreg, status,2, status,0
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5277 ;;      Params:         4       0       0       0       0       0       0       0       0
  5278 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5280 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5281 ;;Total ram usage:        6 bytes
  5282 ;; Hardware stack levels used: 1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_dtoa
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text19
  5291   0049C6                     __ptext19:
  5292                           	callstack 0
  5293   0049C6                     ___awmod:
  5294                           	callstack 26
  5295   0049C6  0E00               	movlw	0
  5296   0049C8  6E06               	movwf	___awmod@sign^0,c
  5297   0049CA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5298   0049CC  EFEC  F024         	goto	u5980
  5299   0049D0  EFEA  F024         	goto	u5981
  5300   0049D4                     u5981:
  5301   0049D4  EFF2  F024         	goto	l5617
  5302   0049D8                     u5980:
  5303   0049D8  6C01               	negf	___awmod@dividend^0,c
  5304   0049DA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5305   0049DC  B0D8               	btfsc	status,0,c
  5306   0049DE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5307   0049E0  0E01               	movlw	1
  5308   0049E2  6E06               	movwf	___awmod@sign^0,c
  5309   0049E4                     l5617:
  5310   0049E4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5311   0049E6  EFF9  F024         	goto	u5990
  5312   0049EA  EFF7  F024         	goto	u5991
  5313   0049EE                     u5991:
  5314   0049EE  EFFD  F024         	goto	l5621
  5315   0049F2                     u5990:
  5316   0049F2  6C03               	negf	___awmod@divisor^0,c
  5317   0049F4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5318   0049F6  B0D8               	btfsc	status,0,c
  5319   0049F8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5320   0049FA                     l5621:
  5321   0049FA  5003               	movf	___awmod@divisor^0,w,c
  5322   0049FC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5323   0049FE  B4D8               	btfsc	status,2,c
  5324   004A00  EF04  F025         	goto	u6001
  5325   004A04  EF06  F025         	goto	u6000
  5326   004A08                     u6001:
  5327   004A08  EF2A  F025         	goto	l5637
  5328   004A0C                     u6000:
  5329   004A0C  0E01               	movlw	1
  5330   004A0E  6E05               	movwf	___awmod@counter^0,c
  5331   004A10  EF0E  F025         	goto	l5627
  5332   004A14                     l5625:
  5333   004A14  90D8               	bcf	status,0,c
  5334   004A16  3603               	rlcf	___awmod@divisor^0,f,c
  5335   004A18  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5336   004A1A  2A05               	incf	___awmod@counter^0,f,c
  5337   004A1C                     l5627:
  5338   004A1C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5339   004A1E  EF13  F025         	goto	u6011
  5340   004A22  EF15  F025         	goto	u6010
  5341   004A26                     u6011:
  5342   004A26  EF0A  F025         	goto	l5625
  5343   004A2A                     u6010:
  5344   004A2A                     l5629:
  5345   004A2A  5003               	movf	___awmod@divisor^0,w,c
  5346   004A2C  5C01               	subwf	___awmod@dividend^0,w,c
  5347   004A2E  5004               	movf	(___awmod@divisor+1)^0,w,c
  5348   004A30  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5349   004A32  A0D8               	btfss	status,0,c
  5350   004A34  EF1E  F025         	goto	u6021
  5351   004A38  EF20  F025         	goto	u6020
  5352   004A3C                     u6021:
  5353   004A3C  EF24  F025         	goto	l5633
  5354   004A40                     u6020:
  5355   004A40  5003               	movf	___awmod@divisor^0,w,c
  5356   004A42  5E01               	subwf	___awmod@dividend^0,f,c
  5357   004A44  5004               	movf	(___awmod@divisor+1)^0,w,c
  5358   004A46  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5359   004A48                     l5633:
  5360   004A48  90D8               	bcf	status,0,c
  5361   004A4A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5362   004A4C  3203               	rrcf	___awmod@divisor^0,f,c
  5363   004A4E  2E05               	decfsz	___awmod@counter^0,f,c
  5364   004A50  EF15  F025         	goto	l5629
  5365   004A54                     l5637:
  5366   004A54  5006               	movf	___awmod@sign^0,w,c
  5367   004A56  B4D8               	btfsc	status,2,c
  5368   004A58  EF30  F025         	goto	u6031
  5369   004A5C  EF32  F025         	goto	u6030
  5370   004A60                     u6031:
  5371   004A60  EF36  F025         	goto	l5641
  5372   004A64                     u6030:
  5373   004A64  6C01               	negf	___awmod@dividend^0,c
  5374   004A66  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5375   004A68  B0D8               	btfsc	status,0,c
  5376   004A6A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5377   004A6C                     l5641:
  5378   004A6C  C001  F001         	movff	___awmod@dividend,?___awmod
  5379   004A70  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5380   004A74  0012               	return		;funcret
  5381   004A76                     __end_of___awmod:
  5382                           	callstack 0
  5383                           
  5384 ;; *************** function ___awdiv *****************
  5385 ;; Defined at:
  5386 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  dividend        2    0[COMRAM] int 
  5389 ;;  divisor         2    2[COMRAM] int 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  quotient        2    6[COMRAM] int 
  5392 ;;  sign            1    5[COMRAM] unsigned char 
  5393 ;;  counter         1    4[COMRAM] unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  2    0[COMRAM] int 
  5396 ;; Registers used:
  5397 ;;		wreg, status,2, status,0
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5403 ;;      Params:         4       0       0       0       0       0       0       0       0
  5404 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5406 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5407 ;;Total ram usage:        8 bytes
  5408 ;; Hardware stack levels used: 1
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_dtoa
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           	psect	text20
  5417   004902                     __ptext20:
  5418                           	callstack 0
  5419   004902                     ___awdiv:
  5420                           	callstack 26
  5421   004902  0E00               	movlw	0
  5422   004904  6E06               	movwf	___awdiv@sign^0,c
  5423   004906  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5424   004908  EF8A  F024         	goto	u5920
  5425   00490C  EF88  F024         	goto	u5921
  5426   004910                     u5921:
  5427   004910  EF90  F024         	goto	l5573
  5428   004914                     u5920:
  5429   004914  6C03               	negf	___awdiv@divisor^0,c
  5430   004916  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5431   004918  B0D8               	btfsc	status,0,c
  5432   00491A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5433   00491C  0E01               	movlw	1
  5434   00491E  6E06               	movwf	___awdiv@sign^0,c
  5435   004920                     l5573:
  5436   004920  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5437   004922  EF97  F024         	goto	u5930
  5438   004926  EF95  F024         	goto	u5931
  5439   00492A                     u5931:
  5440   00492A  EF9D  F024         	goto	l5579
  5441   00492E                     u5930:
  5442   00492E  6C01               	negf	___awdiv@dividend^0,c
  5443   004930  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5444   004932  B0D8               	btfsc	status,0,c
  5445   004934  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5446   004936  0E01               	movlw	1
  5447   004938  1A06               	xorwf	___awdiv@sign^0,f,c
  5448   00493A                     l5579:
  5449   00493A  0E00               	movlw	0
  5450   00493C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5451   00493E  0E00               	movlw	0
  5452   004940  6E07               	movwf	___awdiv@quotient^0,c
  5453   004942  5003               	movf	___awdiv@divisor^0,w,c
  5454   004944  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5455   004946  B4D8               	btfsc	status,2,c
  5456   004948  EFA8  F024         	goto	u5941
  5457   00494C  EFAA  F024         	goto	u5940
  5458   004950                     u5941:
  5459   004950  EFD2  F024         	goto	l5601
  5460   004954                     u5940:
  5461   004954  0E01               	movlw	1
  5462   004956  6E05               	movwf	___awdiv@counter^0,c
  5463   004958  EFB2  F024         	goto	l5587
  5464   00495C                     l5585:
  5465   00495C  90D8               	bcf	status,0,c
  5466   00495E  3603               	rlcf	___awdiv@divisor^0,f,c
  5467   004960  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5468   004962  2A05               	incf	___awdiv@counter^0,f,c
  5469   004964                     l5587:
  5470   004964  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5471   004966  EFB7  F024         	goto	u5951
  5472   00496A  EFB9  F024         	goto	u5950
  5473   00496E                     u5951:
  5474   00496E  EFAE  F024         	goto	l5585
  5475   004972                     u5950:
  5476   004972                     l5589:
  5477   004972  90D8               	bcf	status,0,c
  5478   004974  3607               	rlcf	___awdiv@quotient^0,f,c
  5479   004976  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5480   004978  5003               	movf	___awdiv@divisor^0,w,c
  5481   00497A  5C01               	subwf	___awdiv@dividend^0,w,c
  5482   00497C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5483   00497E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5484   004980  A0D8               	btfss	status,0,c
  5485   004982  EFC5  F024         	goto	u5961
  5486   004986  EFC7  F024         	goto	u5960
  5487   00498A                     u5961:
  5488   00498A  EFCC  F024         	goto	l5597
  5489   00498E                     u5960:
  5490   00498E  5003               	movf	___awdiv@divisor^0,w,c
  5491   004990  5E01               	subwf	___awdiv@dividend^0,f,c
  5492   004992  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5493   004994  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5494   004996  8007               	bsf	___awdiv@quotient^0,0,c
  5495   004998                     l5597:
  5496   004998  90D8               	bcf	status,0,c
  5497   00499A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5498   00499C  3203               	rrcf	___awdiv@divisor^0,f,c
  5499   00499E  2E05               	decfsz	___awdiv@counter^0,f,c
  5500   0049A0  EFB9  F024         	goto	l5589
  5501   0049A4                     l5601:
  5502   0049A4  5006               	movf	___awdiv@sign^0,w,c
  5503   0049A6  B4D8               	btfsc	status,2,c
  5504   0049A8  EFD8  F024         	goto	u5971
  5505   0049AC  EFDA  F024         	goto	u5970
  5506   0049B0                     u5971:
  5507   0049B0  EFDE  F024         	goto	l5605
  5508   0049B4                     u5970:
  5509   0049B4  6C07               	negf	___awdiv@quotient^0,c
  5510   0049B6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5511   0049B8  B0D8               	btfsc	status,0,c
  5512   0049BA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5513   0049BC                     l5605:
  5514   0049BC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5515   0049C0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5516   0049C4  0012               	return		;funcret
  5517   0049C6                     __end_of___awdiv:
  5518                           	callstack 0
  5519                           
  5520 ;; *************** function _initializeCLK *****************
  5521 ;; Defined at:
  5522 ;;		line 132 in file "main.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		wreg, status,2
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5536 ;;      Params:         0       0       0       0       0       0       0       0       0
  5537 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5539 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5540 ;;Total ram usage:        0 bytes
  5541 ;; Hardware stack levels used: 1
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_main
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text21
  5550   0052A2                     __ptext21:
  5551                           	callstack 0
  5552   0052A2                     _initializeCLK:
  5553                           	callstack 30
  5554   0052A2                     
  5555                           ;main.c: 133:     OSCCONbits.IRCF = 0x07;
  5556   0052A2  0E70               	movlw	112
  5557   0052A4  12D3               	iorwf	211,f,c	;volatile
  5558                           
  5559                           ;main.c: 134:     OSCCONbits.SCS = 0x03;
  5560   0052A6  0E03               	movlw	3
  5561   0052A8  12D3               	iorwf	211,f,c	;volatile
  5562   0052AA  0012               	return		;funcret
  5563   0052AC                     __end_of_initializeCLK:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function _calibrate_wheel_gyro *****************
  5567 ;; Defined at:
  5568 ;;		line 71 in file "WheelMPU6050.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  i               2   71[BANK0 ] int 
  5573 ;;  x               4    0        int 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5583 ;;      Params:         0       0       0       0       0       0       0       0       0
  5584 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5586 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5587 ;;Total ram usage:        2 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; Hardware stack levels required when called: 4
  5590 ;; This function calls:
  5591 ;;		_WheelMPU6050_Read
  5592 ;; This function is called by:
  5593 ;;		_main
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text22
  5598   005154                     __ptext22:
  5599                           	callstack 0
  5600   005154                     _calibrate_wheel_gyro:
  5601                           	callstack 26
  5602   005154                     
  5603                           ;WheelMPU6050.c: 73:     for(int i = 0; i< 30; i++){
  5604   005154  0E00               	movlw	0
  5605   005156  0100               	movlb	0	; () banked
  5606   005158  6FA8               	movwf	(calibrate_wheel_gyro@i+1)& (0+255),b
  5607   00515A  0E00               	movlw	0
  5608   00515C  6FA7               	movwf	calibrate_wheel_gyro@i& (0+255),b
  5609   00515E                     l6811:
  5610                           
  5611                           ; BSR set to: 0
  5612   00515E  ECDB  F016         	call	_WheelMPU6050_Read	;wreg free
  5613   005162                     
  5614                           ;WheelMPU6050.c: 75:     }
  5615   005162  0100               	movlb	0	; () banked
  5616   005164  4BA7               	infsnz	calibrate_wheel_gyro@i& (0+255),f,b
  5617   005166  2BA8               	incf	(calibrate_wheel_gyro@i+1)& (0+255),f,b
  5618   005168                     
  5619                           ; BSR set to: 0
  5620   005168  BFA8               	btfsc	(calibrate_wheel_gyro@i+1)& (0+255),7,b
  5621   00516A  EFC0  F028         	goto	u7491
  5622   00516E  51A8               	movf	(calibrate_wheel_gyro@i+1)& (0+255),w,b
  5623   005170  E109               	bnz	u7490
  5624   005172  0E1E               	movlw	30
  5625   005174  5DA7               	subwf	calibrate_wheel_gyro@i& (0+255),w,b
  5626   005176  A0D8               	btfss	status,0,c
  5627   005178  EFC0  F028         	goto	u7491
  5628   00517C  EFC2  F028         	goto	u7490
  5629   005180                     u7491:
  5630   005180  EFAF  F028         	goto	l6811
  5631   005184                     u7490:
  5632   005184                     
  5633                           ; BSR set to: 0
  5634   005184  0012               	return		;funcret
  5635   005186                     __end_of_calibrate_wheel_gyro:
  5636                           	callstack 0
  5637                           
  5638 ;; *************** function _WheelMPU6050_Read *****************
  5639 ;; Defined at:
  5640 ;;		line 37 in file "WheelMPU6050.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  4   55[BANK0 ] void 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5654 ;;      Params:         0       4       0       0       0       0       0       0       0
  5655 ;;      Locals:         0       8       0       0       0       0       0       0       0
  5656 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5657 ;;      Totals:         0      16       0       0       0       0       0       0       0
  5658 ;;Total ram usage:       16 bytes
  5659 ;; Hardware stack levels used: 1
  5660 ;; Hardware stack levels required when called: 3
  5661 ;; This function calls:
  5662 ;;		_I2C_Master_Stop
  5663 ;;		_I2C_Master_Write
  5664 ;;		_I2C_Read
  5665 ;;		_I2C_Start
  5666 ;;		_WheelKalmanFilter
  5667 ;;		___fladd
  5668 ;;		___fldiv
  5669 ;;		___flmul
  5670 ;;		___xxtofl
  5671 ;;		_atanf
  5672 ;;		_sqrtf
  5673 ;; This function is called by:
  5674 ;;		_main
  5675 ;;		_calibrate_wheel_gyro
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text23
  5680   002DB6                     __ptext23:
  5681                           	callstack 0
  5682   002DB6                     _WheelMPU6050_Read:
  5683                           	callstack 26
  5684   002DB6                     
  5685                           ;WheelMPU6050.c: 40:   I2C_Start(0xD0);
  5686   002DB6  0ED0               	movlw	208
  5687   002DB8  EC49  F029         	call	_I2C_Start
  5688                           
  5689                           ;WheelMPU6050.c: 41:   I2C_Master_Write(0x3B);
  5690   002DBC  0E3B               	movlw	59
  5691   002DBE  EC11  F029         	call	_I2C_Master_Write
  5692                           
  5693                           ;WheelMPU6050.c: 42:   I2C_Master_Stop();
  5694   002DC2  EC56  F029         	call	_I2C_Master_Stop	;wreg free
  5695                           
  5696                           ;WheelMPU6050.c: 43:   I2C_Start(0xD1);
  5697   002DC6  0ED1               	movlw	209
  5698   002DC8  EC49  F029         	call	_I2C_Start
  5699   002DCC                     
  5700                           ;WheelMPU6050.c: 44:   I2C_Read(0);
  5701   002DCC  0E00               	movlw	0
  5702   002DCE  EC9B  F027         	call	_I2C_Read
  5703   002DD2                     
  5704                           ;WheelMPU6050.c: 45:   Ax = (I2C_Read(0)<<8) | I2C_Read(0);
  5705   002DD2  0E00               	movlw	0
  5706   002DD4  EC9B  F027         	call	_I2C_Read
  5707   002DD8  0100               	movlb	0	; () banked
  5708   002DDA  6F9B               	movwf	??_WheelMPU6050_Read& (0+255),b
  5709   002DDC  519B               	movf	??_WheelMPU6050_Read& (0+255),w,b
  5710   002DDE  6F9D               	movwf	(??_WheelMPU6050_Read+2)& (0+255),b
  5711   002DE0  6B9C               	clrf	(??_WheelMPU6050_Read+1)& (0+255),b
  5712   002DE2  0E00               	movlw	0
  5713   002DE4  EC9B  F027         	call	_I2C_Read
  5714   002DE8  0100               	movlb	0	; () banked
  5715   002DEA  6F9E               	movwf	(??_WheelMPU6050_Read+3)& (0+255),b
  5716   002DEC  519E               	movf	(??_WheelMPU6050_Read+3)& (0+255),w,b
  5717   002DEE  119C               	iorwf	(??_WheelMPU6050_Read+1)& (0+255),w,b
  5718   002DF0  6FF6               	movwf	_Ax& (0+255),b
  5719   002DF2  519D               	movf	(??_WheelMPU6050_Read+2)& (0+255),w,b
  5720   002DF4  6FF7               	movwf	(_Ax+1)& (0+255),b
  5721   002DF6                     
  5722                           ; BSR set to: 0
  5723                           ;WheelMPU6050.c: 46:   Ay = (I2C_Read(0)<<8) | I2C_Read(0);
  5724   002DF6  0E00               	movlw	0
  5725   002DF8  EC9B  F027         	call	_I2C_Read
  5726   002DFC  0100               	movlb	0	; () banked
  5727   002DFE  6F9B               	movwf	??_WheelMPU6050_Read& (0+255),b
  5728   002E00  519B               	movf	??_WheelMPU6050_Read& (0+255),w,b
  5729   002E02  6F9D               	movwf	(??_WheelMPU6050_Read+2)& (0+255),b
  5730   002E04  6B9C               	clrf	(??_WheelMPU6050_Read+1)& (0+255),b
  5731   002E06  0E00               	movlw	0
  5732   002E08  EC9B  F027         	call	_I2C_Read
  5733   002E0C  0100               	movlb	0	; () banked
  5734   002E0E  6F9E               	movwf	(??_WheelMPU6050_Read+3)& (0+255),b
  5735   002E10  519E               	movf	(??_WheelMPU6050_Read+3)& (0+255),w,b
  5736   002E12  119C               	iorwf	(??_WheelMPU6050_Read+1)& (0+255),w,b
  5737   002E14  6FF4               	movwf	_Ay& (0+255),b
  5738   002E16  519D               	movf	(??_WheelMPU6050_Read+2)& (0+255),w,b
  5739   002E18  6FF5               	movwf	(_Ay+1)& (0+255),b
  5740   002E1A                     
  5741                           ; BSR set to: 0
  5742                           ;WheelMPU6050.c: 47:   Az = (I2C_Read(0)<<8) | I2C_Read(0);
  5743   002E1A  0E00               	movlw	0
  5744   002E1C  EC9B  F027         	call	_I2C_Read
  5745   002E20  0100               	movlb	0	; () banked
  5746   002E22  6F9B               	movwf	??_WheelMPU6050_Read& (0+255),b
  5747   002E24  519B               	movf	??_WheelMPU6050_Read& (0+255),w,b
  5748   002E26  6F9D               	movwf	(??_WheelMPU6050_Read+2)& (0+255),b
  5749   002E28  6B9C               	clrf	(??_WheelMPU6050_Read+1)& (0+255),b
  5750   002E2A  0E00               	movlw	0
  5751   002E2C  EC9B  F027         	call	_I2C_Read
  5752   002E30  0100               	movlb	0	; () banked
  5753   002E32  6F9E               	movwf	(??_WheelMPU6050_Read+3)& (0+255),b
  5754   002E34  519E               	movf	(??_WheelMPU6050_Read+3)& (0+255),w,b
  5755   002E36  119C               	iorwf	(??_WheelMPU6050_Read+1)& (0+255),w,b
  5756   002E38  6FF2               	movwf	_Az& (0+255),b
  5757   002E3A  519D               	movf	(??_WheelMPU6050_Read+2)& (0+255),w,b
  5758   002E3C  6FF3               	movwf	(_Az+1)& (0+255),b
  5759   002E3E                     
  5760                           ; BSR set to: 0
  5761                           ;WheelMPU6050.c: 48:   Gx = (I2C_Read(0)<<8) | I2C_Read(1);
  5762   002E3E  0E00               	movlw	0
  5763   002E40  EC9B  F027         	call	_I2C_Read
  5764   002E44  0100               	movlb	0	; () banked
  5765   002E46  6F9B               	movwf	??_WheelMPU6050_Read& (0+255),b
  5766   002E48  519B               	movf	??_WheelMPU6050_Read& (0+255),w,b
  5767   002E4A  6F9D               	movwf	(??_WheelMPU6050_Read+2)& (0+255),b
  5768   002E4C  6B9C               	clrf	(??_WheelMPU6050_Read+1)& (0+255),b
  5769   002E4E  0E01               	movlw	1
  5770   002E50  EC9B  F027         	call	_I2C_Read
  5771   002E54  0100               	movlb	0	; () banked
  5772   002E56  6F9E               	movwf	(??_WheelMPU6050_Read+3)& (0+255),b
  5773   002E58  519E               	movf	(??_WheelMPU6050_Read+3)& (0+255),w,b
  5774   002E5A  119C               	iorwf	(??_WheelMPU6050_Read+1)& (0+255),w,b
  5775   002E5C  6FF0               	movwf	_Gx& (0+255),b
  5776   002E5E  519D               	movf	(??_WheelMPU6050_Read+2)& (0+255),w,b
  5777   002E60  6FF1               	movwf	(_Gx+1)& (0+255),b
  5778   002E62                     
  5779                           ; BSR set to: 0
  5780                           ;WheelMPU6050.c: 49:   I2C_Master_Stop();
  5781   002E62  EC56  F029         	call	_I2C_Master_Stop	;wreg free
  5782   002E66                     
  5783                           ;WheelMPU6050.c: 52:   AX = Ax/16384.0;
  5784   002E66  C0F6  F001         	movff	_Ax,___xxtofl@val
  5785   002E6A  C0F7  F002         	movff	_Ax+1,___xxtofl@val+1
  5786   002E6E  0E00               	movlw	0
  5787   002E70  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5788   002E72  0EFF               	movlw	-1
  5789   002E74  6E03               	movwf	(___xxtofl@val+2)^0,c
  5790   002E76  6E04               	movwf	(___xxtofl@val+3)^0,c
  5791   002E78  0E01               	movlw	1
  5792   002E7A  EC56  F020         	call	___xxtofl
  5793   002E7E  C001  F04F         	movff	?___xxtofl,___fldiv@b
  5794   002E82  C002  F050         	movff	?___xxtofl+1,___fldiv@b+1
  5795   002E86  C003  F051         	movff	?___xxtofl+2,___fldiv@b+2
  5796   002E8A  C004  F052         	movff	?___xxtofl+3,___fldiv@b+3
  5797   002E8E  0E00               	movlw	0
  5798   002E90  6E53               	movwf	___fldiv@a^0,c
  5799   002E92  0E00               	movlw	0
  5800   002E94  6E54               	movwf	(___fldiv@a+1)^0,c
  5801   002E96  0E80               	movlw	128
  5802   002E98  6E55               	movwf	(___fldiv@a+2)^0,c
  5803   002E9A  0E46               	movlw	70
  5804   002E9C  6E56               	movwf	(___fldiv@a+3)^0,c
  5805   002E9E  EC4A  F013         	call	___fldiv	;wreg free
  5806   002EA2  C04F  F160         	movff	?___fldiv,_AX
  5807   002EA6  C050  F161         	movff	?___fldiv+1,_AX+1
  5808   002EAA  C051  F162         	movff	?___fldiv+2,_AX+2
  5809   002EAE  C052  F163         	movff	?___fldiv+3,_AX+3
  5810   002EB2                     
  5811                           ;WheelMPU6050.c: 53:   AY = Ay/16384.0;
  5812   002EB2  C0F4  F001         	movff	_Ay,___xxtofl@val
  5813   002EB6  C0F5  F002         	movff	_Ay+1,___xxtofl@val+1
  5814   002EBA  0E00               	movlw	0
  5815   002EBC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5816   002EBE  0EFF               	movlw	-1
  5817   002EC0  6E03               	movwf	(___xxtofl@val+2)^0,c
  5818   002EC2  6E04               	movwf	(___xxtofl@val+3)^0,c
  5819   002EC4  0E01               	movlw	1
  5820   002EC6  EC56  F020         	call	___xxtofl
  5821   002ECA  C001  F04F         	movff	?___xxtofl,___fldiv@b
  5822   002ECE  C002  F050         	movff	?___xxtofl+1,___fldiv@b+1
  5823   002ED2  C003  F051         	movff	?___xxtofl+2,___fldiv@b+2
  5824   002ED6  C004  F052         	movff	?___xxtofl+3,___fldiv@b+3
  5825   002EDA  0E00               	movlw	0
  5826   002EDC  6E53               	movwf	___fldiv@a^0,c
  5827   002EDE  0E00               	movlw	0
  5828   002EE0  6E54               	movwf	(___fldiv@a+1)^0,c
  5829   002EE2  0E80               	movlw	128
  5830   002EE4  6E55               	movwf	(___fldiv@a+2)^0,c
  5831   002EE6  0E46               	movlw	70
  5832   002EE8  6E56               	movwf	(___fldiv@a+3)^0,c
  5833   002EEA  EC4A  F013         	call	___fldiv	;wreg free
  5834   002EEE  C04F  F15C         	movff	?___fldiv,_AY
  5835   002EF2  C050  F15D         	movff	?___fldiv+1,_AY+1
  5836   002EF6  C051  F15E         	movff	?___fldiv+2,_AY+2
  5837   002EFA  C052  F15F         	movff	?___fldiv+3,_AY+3
  5838   002EFE                     
  5839                           ;WheelMPU6050.c: 54:   AZ = Az/16384.0;
  5840   002EFE  C0F2  F001         	movff	_Az,___xxtofl@val
  5841   002F02  C0F3  F002         	movff	_Az+1,___xxtofl@val+1
  5842   002F06  0E00               	movlw	0
  5843   002F08  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5844   002F0A  0EFF               	movlw	-1
  5845   002F0C  6E03               	movwf	(___xxtofl@val+2)^0,c
  5846   002F0E  6E04               	movwf	(___xxtofl@val+3)^0,c
  5847   002F10  0E01               	movlw	1
  5848   002F12  EC56  F020         	call	___xxtofl
  5849   002F16  C001  F04F         	movff	?___xxtofl,___fldiv@b
  5850   002F1A  C002  F050         	movff	?___xxtofl+1,___fldiv@b+1
  5851   002F1E  C003  F051         	movff	?___xxtofl+2,___fldiv@b+2
  5852   002F22  C004  F052         	movff	?___xxtofl+3,___fldiv@b+3
  5853   002F26  0E00               	movlw	0
  5854   002F28  6E53               	movwf	___fldiv@a^0,c
  5855   002F2A  0E00               	movlw	0
  5856   002F2C  6E54               	movwf	(___fldiv@a+1)^0,c
  5857   002F2E  0E80               	movlw	128
  5858   002F30  6E55               	movwf	(___fldiv@a+2)^0,c
  5859   002F32  0E46               	movlw	70
  5860   002F34  6E56               	movwf	(___fldiv@a+3)^0,c
  5861   002F36  EC4A  F013         	call	___fldiv	;wreg free
  5862   002F3A  C04F  F158         	movff	?___fldiv,_AZ
  5863   002F3E  C050  F159         	movff	?___fldiv+1,_AZ+1
  5864   002F42  C051  F15A         	movff	?___fldiv+2,_AZ+2
  5865   002F46  C052  F15B         	movff	?___fldiv+3,_AZ+3
  5866   002F4A                     
  5867                           ;WheelMPU6050.c: 55:   GX = Gx/131.0;
  5868   002F4A  C0F0  F001         	movff	_Gx,___xxtofl@val
  5869   002F4E  C0F1  F002         	movff	_Gx+1,___xxtofl@val+1
  5870   002F52  0E00               	movlw	0
  5871   002F54  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5872   002F56  0EFF               	movlw	-1
  5873   002F58  6E03               	movwf	(___xxtofl@val+2)^0,c
  5874   002F5A  6E04               	movwf	(___xxtofl@val+3)^0,c
  5875   002F5C  0E01               	movlw	1
  5876   002F5E  EC56  F020         	call	___xxtofl
  5877   002F62  C001  F04F         	movff	?___xxtofl,___fldiv@b
  5878   002F66  C002  F050         	movff	?___xxtofl+1,___fldiv@b+1
  5879   002F6A  C003  F051         	movff	?___xxtofl+2,___fldiv@b+2
  5880   002F6E  C004  F052         	movff	?___xxtofl+3,___fldiv@b+3
  5881   002F72  0E00               	movlw	0
  5882   002F74  6E53               	movwf	___fldiv@a^0,c
  5883   002F76  0E00               	movlw	0
  5884   002F78  6E54               	movwf	(___fldiv@a+1)^0,c
  5885   002F7A  0E03               	movlw	3
  5886   002F7C  6E55               	movwf	(___fldiv@a+2)^0,c
  5887   002F7E  0E43               	movlw	67
  5888   002F80  6E56               	movwf	(___fldiv@a+3)^0,c
  5889   002F82  EC4A  F013         	call	___fldiv	;wreg free
  5890   002F86  C04F  F154         	movff	?___fldiv,_GX
  5891   002F8A  C050  F155         	movff	?___fldiv+1,_GX+1
  5892   002F8E  C051  F156         	movff	?___fldiv+2,_GX+2
  5893   002F92  C052  F157         	movff	?___fldiv+3,_GX+3
  5894   002F96                     
  5895                           ;WheelMPU6050.c: 60:   stateAngle = atanf(AX/sqrtf(AY*AY + AZ*AZ))*57.3;
  5896   002F96  C158  F005         	movff	_AZ,___flmul@a
  5897   002F9A  C159  F006         	movff	_AZ+1,___flmul@a+1
  5898   002F9E  C15A  F007         	movff	_AZ+2,___flmul@a+2
  5899   002FA2  C15B  F008         	movff	_AZ+3,___flmul@a+3
  5900   002FA6  C158  F001         	movff	_AZ,___flmul@b
  5901   002FAA  C159  F002         	movff	_AZ+1,___flmul@b+1
  5902   002FAE  C15A  F003         	movff	_AZ+2,___flmul@b+2
  5903   002FB2  C15B  F004         	movff	_AZ+3,___flmul@b+3
  5904   002FB6  EC46  F00F         	call	___flmul	;wreg free
  5905   002FBA  C001  F01E         	movff	?___flmul,___fladd@a
  5906   002FBE  C002  F01F         	movff	?___flmul+1,___fladd@a+1
  5907   002FC2  C003  F020         	movff	?___flmul+2,___fladd@a+2
  5908   002FC6  C004  F021         	movff	?___flmul+3,___fladd@a+3
  5909   002FCA  C15C  F005         	movff	_AY,___flmul@a
  5910   002FCE  C15D  F006         	movff	_AY+1,___flmul@a+1
  5911   002FD2  C15E  F007         	movff	_AY+2,___flmul@a+2
  5912   002FD6  C15F  F008         	movff	_AY+3,___flmul@a+3
  5913   002FDA  C15C  F001         	movff	_AY,___flmul@b
  5914   002FDE  C15D  F002         	movff	_AY+1,___flmul@b+1
  5915   002FE2  C15E  F003         	movff	_AY+2,___flmul@b+2
  5916   002FE6  C15F  F004         	movff	_AY+3,___flmul@b+3
  5917   002FEA  EC46  F00F         	call	___flmul	;wreg free
  5918   002FEE  C001  F01A         	movff	?___flmul,___fladd@b
  5919   002FF2  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  5920   002FF6  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  5921   002FFA  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  5922   002FFE  ECE6  F00C         	call	___fladd	;wreg free
  5923   003002  C01A  F02A         	movff	?___fladd,sqrtf@x
  5924   003006  C01B  F02B         	movff	?___fladd+1,sqrtf@x+1
  5925   00300A  C01C  F02C         	movff	?___fladd+2,sqrtf@x+2
  5926   00300E  C01D  F02D         	movff	?___fladd+3,sqrtf@x+3
  5927   003012  EC5B  F011         	call	_sqrtf	;wreg free
  5928   003016  C02A  F053         	movff	?_sqrtf,___fldiv@a
  5929   00301A  C02B  F054         	movff	?_sqrtf+1,___fldiv@a+1
  5930   00301E  C02C  F055         	movff	?_sqrtf+2,___fldiv@a+2
  5931   003022  C02D  F056         	movff	?_sqrtf+3,___fldiv@a+3
  5932   003026  C160  F04F         	movff	_AX,___fldiv@b
  5933   00302A  C161  F050         	movff	_AX+1,___fldiv@b+1
  5934   00302E  C162  F051         	movff	_AX+2,___fldiv@b+2
  5935   003032  C163  F052         	movff	_AX+3,___fldiv@b+3
  5936   003036  EC4A  F013         	call	___fldiv	;wreg free
  5937   00303A  C04F  F09F         	movff	?___fldiv,_WheelMPU6050_Read$1814
  5938   00303E  C050  F0A0         	movff	?___fldiv+1,_WheelMPU6050_Read$1814+1
  5939   003042  C051  F0A1         	movff	?___fldiv+2,_WheelMPU6050_Read$1814+2
  5940   003046  C052  F0A2         	movff	?___fldiv+3,_WheelMPU6050_Read$1814+3
  5941   00304A                     
  5942                           ;WheelMPU6050.c: 60:   stateAngle = atanf(AX/sqrtf(AY*AY + AZ*AZ))*57.3;
  5943   00304A  C09F  F05B         	movff	_WheelMPU6050_Read$1814,atanf@x
  5944   00304E  C0A0  F05C         	movff	_WheelMPU6050_Read$1814+1,atanf@x+1
  5945   003052  C0A1  F05D         	movff	_WheelMPU6050_Read$1814+2,atanf@x+2
  5946   003056  C0A2  F05E         	movff	_WheelMPU6050_Read$1814+3,atanf@x+3
  5947   00305A  EC2E  F009         	call	_atanf	;wreg free
  5948   00305E  C05B  F0A3         	movff	?_atanf,_WheelMPU6050_Read$1815
  5949   003062  C05C  F0A4         	movff	?_atanf+1,_WheelMPU6050_Read$1815+1
  5950   003066  C05D  F0A5         	movff	?_atanf+2,_WheelMPU6050_Read$1815+2
  5951   00306A  C05E  F0A6         	movff	?_atanf+3,_WheelMPU6050_Read$1815+3
  5952   00306E                     
  5953                           ;WheelMPU6050.c: 60:   stateAngle = atanf(AX/sqrtf(AY*AY + AZ*AZ))*57.3;
  5954   00306E  C0A3  F001         	movff	_WheelMPU6050_Read$1815,___flmul@b
  5955   003072  C0A4  F002         	movff	_WheelMPU6050_Read$1815+1,___flmul@b+1
  5956   003076  C0A5  F003         	movff	_WheelMPU6050_Read$1815+2,___flmul@b+2
  5957   00307A  C0A6  F004         	movff	_WheelMPU6050_Read$1815+3,___flmul@b+3
  5958   00307E  0E33               	movlw	51
  5959   003080  6E05               	movwf	___flmul@a^0,c
  5960   003082  0E33               	movlw	51
  5961   003084  6E06               	movwf	(___flmul@a+1)^0,c
  5962   003086  0E65               	movlw	101
  5963   003088  6E07               	movwf	(___flmul@a+2)^0,c
  5964   00308A  0E42               	movlw	66
  5965   00308C  6E08               	movwf	(___flmul@a+3)^0,c
  5966   00308E  EC46  F00F         	call	___flmul	;wreg free
  5967   003092  C001  F150         	movff	?___flmul,_stateAngle
  5968   003096  C002  F151         	movff	?___flmul+1,_stateAngle+1
  5969   00309A  C003  F152         	movff	?___flmul+2,_stateAngle+2
  5970   00309E  C004  F153         	movff	?___flmul+3,_stateAngle+3
  5971   0030A2                     
  5972                           ;WheelMPU6050.c: 61:   WheelKalmanFilter(KalmanAngle, KalmanUncertaintyAngle, GX, stateA
      +                          ngle);
  5973   0030A2  C148  F06D         	movff	_KalmanAngle,WheelKalmanFilter@KalmanState
  5974   0030A6  C149  F06E         	movff	_KalmanAngle+1,WheelKalmanFilter@KalmanState+1
  5975   0030AA  C14A  F06F         	movff	_KalmanAngle+2,WheelKalmanFilter@KalmanState+2
  5976   0030AE  C14B  F070         	movff	_KalmanAngle+3,WheelKalmanFilter@KalmanState+3
  5977   0030B2  C1A6  F071         	movff	_KalmanUncertaintyAngle,WheelKalmanFilter@KalmanUncertainty
  5978   0030B6  C1A7  F072         	movff	_KalmanUncertaintyAngle+1,WheelKalmanFilter@KalmanUncertainty+1
  5979   0030BA  C1A8  F073         	movff	_KalmanUncertaintyAngle+2,WheelKalmanFilter@KalmanUncertainty+2
  5980   0030BE  C1A9  F074         	movff	_KalmanUncertaintyAngle+3,WheelKalmanFilter@KalmanUncertainty+3
  5981   0030C2  C154  F075         	movff	_GX,WheelKalmanFilter@KalmanInput
  5982   0030C6  C155  F076         	movff	_GX+1,WheelKalmanFilter@KalmanInput+1
  5983   0030CA  C156  F077         	movff	_GX+2,WheelKalmanFilter@KalmanInput+2
  5984   0030CE  C157  F078         	movff	_GX+3,WheelKalmanFilter@KalmanInput+3
  5985   0030D2  C150  F079         	movff	_stateAngle,WheelKalmanFilter@KalmanMeasurement
  5986   0030D6  C151  F07A         	movff	_stateAngle+1,WheelKalmanFilter@KalmanMeasurement+1
  5987   0030DA  C152  F07B         	movff	_stateAngle+2,WheelKalmanFilter@KalmanMeasurement+2
  5988   0030DE  C153  F07C         	movff	_stateAngle+3,WheelKalmanFilter@KalmanMeasurement+3
  5989   0030E2  EC5C  F01D         	call	_WheelKalmanFilter	;wreg free
  5990   0030E6                     
  5991                           ;WheelMPU6050.c: 62:   KalmanAngle = KalmanOutput[0];
  5992   0030E6  C108  F148         	movff	_KalmanOutput,_KalmanAngle
  5993   0030EA  C109  F149         	movff	_KalmanOutput+1,_KalmanAngle+1
  5994   0030EE  C10A  F14A         	movff	_KalmanOutput+2,_KalmanAngle+2
  5995   0030F2  C10B  F14B         	movff	_KalmanOutput+3,_KalmanAngle+3
  5996   0030F6                     
  5997                           ;WheelMPU6050.c: 63:   KalmanUncertaintyAngle = KalmanOutput[1];
  5998   0030F6  C10C  F1A6         	movff	_KalmanOutput+4,_KalmanUncertaintyAngle
  5999   0030FA  C10D  F1A7         	movff	_KalmanOutput+5,_KalmanUncertaintyAngle+1
  6000   0030FE  C10E  F1A8         	movff	_KalmanOutput+6,_KalmanUncertaintyAngle+2
  6001   003102  C10F  F1A9         	movff	_KalmanOutput+7,_KalmanUncertaintyAngle+3
  6002   003106                     
  6003                           ;WheelMPU6050.c: 65:   return KalmanAngle;
  6004   003106  C148  F097         	movff	_KalmanAngle,?_WheelMPU6050_Read
  6005   00310A  C149  F098         	movff	_KalmanAngle+1,?_WheelMPU6050_Read+1
  6006   00310E  C14A  F099         	movff	_KalmanAngle+2,?_WheelMPU6050_Read+2
  6007   003112  C14B  F09A         	movff	_KalmanAngle+3,?_WheelMPU6050_Read+3
  6008   003116  0012               	return		;funcret
  6009   003118                     __end_of_WheelMPU6050_Read:
  6010                           	callstack 0
  6011                           
  6012 ;; *************** function _WheelKalmanFilter *****************
  6013 ;; Defined at:
  6014 ;;		line 26 in file "WheelMPU6050.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  KalmanState     4   13[BANK0 ] void 
  6017 ;;  KalmanUncert    4   17[BANK0 ] void 
  6018 ;;  KalmanInput     4   21[BANK0 ] void 
  6019 ;;  KalmanMeasur    4   25[BANK0 ] void 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;		None
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1    wreg      void 
  6024 ;; Registers used:
  6025 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6031 ;;      Params:         0      16       0       0       0       0       0       0       0
  6032 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6034 ;;      Totals:         4      16       0       0       0       0       0       0       0
  6035 ;;Total ram usage:       20 bytes
  6036 ;; Hardware stack levels used: 1
  6037 ;; Hardware stack levels required when called: 2
  6038 ;; This function calls:
  6039 ;;		___fladd
  6040 ;;		___fldiv
  6041 ;;		___flmul
  6042 ;;		___flsub
  6043 ;; This function is called by:
  6044 ;;		_WheelMPU6050_Read
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           	psect	text24
  6049   003AB8                     __ptext24:
  6050                           	callstack 0
  6051   003AB8                     _WheelKalmanFilter:
  6052                           	callstack 26
  6053   003AB8                     
  6054                           ;WheelMPU6050.c: 27:   KalmanState = KalmanState + 0.004*KalmanInput;
  6055   003AB8  0E6F               	movlw	111
  6056   003ABA  6E05               	movwf	___flmul@a^0,c
  6057   003ABC  0E12               	movlw	18
  6058   003ABE  6E06               	movwf	(___flmul@a+1)^0,c
  6059   003AC0  0E83               	movlw	131
  6060   003AC2  6E07               	movwf	(___flmul@a+2)^0,c
  6061   003AC4  0E3B               	movlw	59
  6062   003AC6  6E08               	movwf	(___flmul@a+3)^0,c
  6063   003AC8  C075  F001         	movff	WheelKalmanFilter@KalmanInput,___flmul@b
  6064   003ACC  C076  F002         	movff	WheelKalmanFilter@KalmanInput+1,___flmul@b+1
  6065   003AD0  C077  F003         	movff	WheelKalmanFilter@KalmanInput+2,___flmul@b+2
  6066   003AD4  C078  F004         	movff	WheelKalmanFilter@KalmanInput+3,___flmul@b+3
  6067   003AD8  EC46  F00F         	call	___flmul	;wreg free
  6068   003ADC  C001  F01A         	movff	?___flmul,___fladd@b
  6069   003AE0  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  6070   003AE4  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  6071   003AE8  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  6072   003AEC  C06D  F01E         	movff	WheelKalmanFilter@KalmanState,___fladd@a
  6073   003AF0  C06E  F01F         	movff	WheelKalmanFilter@KalmanState+1,___fladd@a+1
  6074   003AF4  C06F  F020         	movff	WheelKalmanFilter@KalmanState+2,___fladd@a+2
  6075   003AF8  C070  F021         	movff	WheelKalmanFilter@KalmanState+3,___fladd@a+3
  6076   003AFC  ECE6  F00C         	call	___fladd	;wreg free
  6077   003B00  C01A  F06D         	movff	?___fladd,WheelKalmanFilter@KalmanState
  6078   003B04  C01B  F06E         	movff	?___fladd+1,WheelKalmanFilter@KalmanState+1
  6079   003B08  C01C  F06F         	movff	?___fladd+2,WheelKalmanFilter@KalmanState+2
  6080   003B0C  C01D  F070         	movff	?___fladd+3,WheelKalmanFilter@KalmanState+3
  6081   003B10                     
  6082                           ;WheelMPU6050.c: 28:   KalmanUncertainty = KalmanUncertainty + 0.000256;
  6083   003B10  C071  F01A         	movff	WheelKalmanFilter@KalmanUncertainty,___fladd@b
  6084   003B14  C072  F01B         	movff	WheelKalmanFilter@KalmanUncertainty+1,___fladd@b+1
  6085   003B18  C073  F01C         	movff	WheelKalmanFilter@KalmanUncertainty+2,___fladd@b+2
  6086   003B1C  C074  F01D         	movff	WheelKalmanFilter@KalmanUncertainty+3,___fladd@b+3
  6087   003B20  0EBD               	movlw	189
  6088   003B22  6E1E               	movwf	___fladd@a^0,c
  6089   003B24  0E37               	movlw	55
  6090   003B26  6E1F               	movwf	(___fladd@a+1)^0,c
  6091   003B28  0E86               	movlw	134
  6092   003B2A  6E20               	movwf	(___fladd@a+2)^0,c
  6093   003B2C  0E39               	movlw	57
  6094   003B2E  6E21               	movwf	(___fladd@a+3)^0,c
  6095   003B30  ECE6  F00C         	call	___fladd	;wreg free
  6096   003B34  C01A  F071         	movff	?___fladd,WheelKalmanFilter@KalmanUncertainty
  6097   003B38  C01B  F072         	movff	?___fladd+1,WheelKalmanFilter@KalmanUncertainty+1
  6098   003B3C  C01C  F073         	movff	?___fladd+2,WheelKalmanFilter@KalmanUncertainty+2
  6099   003B40  C01D  F074         	movff	?___fladd+3,WheelKalmanFilter@KalmanUncertainty+3
  6100   003B44                     
  6101                           ;WheelMPU6050.c: 29:   KalmanGain = KalmanUncertainty * 1/(KalmanUncertainty + degreeVar
      +                           * degreeVar);
  6102   003B44  0E00               	movlw	0
  6103   003B46  6E05               	movwf	___flmul@a^0,c
  6104   003B48  0E00               	movlw	0
  6105   003B4A  6E06               	movwf	(___flmul@a+1)^0,c
  6106   003B4C  0E80               	movlw	128
  6107   003B4E  6E07               	movwf	(___flmul@a+2)^0,c
  6108   003B50  0E3F               	movlw	63
  6109   003B52  6E08               	movwf	(___flmul@a+3)^0,c
  6110   003B54  C071  F001         	movff	WheelKalmanFilter@KalmanUncertainty,___flmul@b
  6111   003B58  C072  F002         	movff	WheelKalmanFilter@KalmanUncertainty+1,___flmul@b+1
  6112   003B5C  C073  F003         	movff	WheelKalmanFilter@KalmanUncertainty+2,___flmul@b+2
  6113   003B60  C074  F004         	movff	WheelKalmanFilter@KalmanUncertainty+3,___flmul@b+3
  6114   003B64  EC46  F00F         	call	___flmul	;wreg free
  6115   003B68  C001  F04F         	movff	?___flmul,___fldiv@b
  6116   003B6C  C002  F050         	movff	?___flmul+1,___fldiv@b+1
  6117   003B70  C003  F051         	movff	?___flmul+2,___fldiv@b+2
  6118   003B74  C004  F052         	movff	?___flmul+3,___fldiv@b+3
  6119   003B78  0E0A               	movlw	10
  6120   003B7A  6E1E               	movwf	___fladd@a^0,c
  6121   003B7C  0ED7               	movlw	215
  6122   003B7E  6E1F               	movwf	(___fladd@a+1)^0,c
  6123   003B80  0E23               	movlw	35
  6124   003B82  6E20               	movwf	(___fladd@a+2)^0,c
  6125   003B84  0E3C               	movlw	60
  6126   003B86  6E21               	movwf	(___fladd@a+3)^0,c
  6127   003B88  C071  F01A         	movff	WheelKalmanFilter@KalmanUncertainty,___fladd@b
  6128   003B8C  C072  F01B         	movff	WheelKalmanFilter@KalmanUncertainty+1,___fladd@b+1
  6129   003B90  C073  F01C         	movff	WheelKalmanFilter@KalmanUncertainty+2,___fladd@b+2
  6130   003B94  C074  F01D         	movff	WheelKalmanFilter@KalmanUncertainty+3,___fladd@b+3
  6131   003B98  ECE6  F00C         	call	___fladd	;wreg free
  6132   003B9C  C01A  F053         	movff	?___fladd,___fldiv@a
  6133   003BA0  C01B  F054         	movff	?___fladd+1,___fldiv@a+1
  6134   003BA4  C01C  F055         	movff	?___fladd+2,___fldiv@a+2
  6135   003BA8  C01D  F056         	movff	?___fladd+3,___fldiv@a+3
  6136   003BAC  EC4A  F013         	call	___fldiv	;wreg free
  6137   003BB0  C04F  F144         	movff	?___fldiv,_KalmanGain
  6138   003BB4  C050  F145         	movff	?___fldiv+1,_KalmanGain+1
  6139   003BB8  C051  F146         	movff	?___fldiv+2,_KalmanGain+2
  6140   003BBC  C052  F147         	movff	?___fldiv+3,_KalmanGain+3
  6141   003BC0                     
  6142                           ;WheelMPU6050.c: 30:   KalmanState = KalmanState+KalmanGain * (KalmanMeasurement-KalmanS
      +                          tate);
  6143   003BC0  C144  F005         	movff	_KalmanGain,___flmul@a
  6144   003BC4  C145  F006         	movff	_KalmanGain+1,___flmul@a+1
  6145   003BC8  C146  F007         	movff	_KalmanGain+2,___flmul@a+2
  6146   003BCC  C147  F008         	movff	_KalmanGain+3,___flmul@a+3
  6147   003BD0  C06D  F02E         	movff	WheelKalmanFilter@KalmanState,___flsub@a
  6148   003BD4  C06E  F02F         	movff	WheelKalmanFilter@KalmanState+1,___flsub@a+1
  6149   003BD8  C06F  F030         	movff	WheelKalmanFilter@KalmanState+2,___flsub@a+2
  6150   003BDC  C070  F031         	movff	WheelKalmanFilter@KalmanState+3,___flsub@a+3
  6151   003BE0  C079  F02A         	movff	WheelKalmanFilter@KalmanMeasurement,___flsub@b
  6152   003BE4  C07A  F02B         	movff	WheelKalmanFilter@KalmanMeasurement+1,___flsub@b+1
  6153   003BE8  C07B  F02C         	movff	WheelKalmanFilter@KalmanMeasurement+2,___flsub@b+2
  6154   003BEC  C07C  F02D         	movff	WheelKalmanFilter@KalmanMeasurement+3,___flsub@b+3
  6155   003BF0  ECBE  F027         	call	___flsub	;wreg free
  6156   003BF4  C02A  F001         	movff	?___flsub,___flmul@b
  6157   003BF8  C02B  F002         	movff	?___flsub+1,___flmul@b+1
  6158   003BFC  C02C  F003         	movff	?___flsub+2,___flmul@b+2
  6159   003C00  C02D  F004         	movff	?___flsub+3,___flmul@b+3
  6160   003C04  EC46  F00F         	call	___flmul	;wreg free
  6161   003C08  C001  F05B         	movff	?___flmul,_WheelKalmanFilter$1813
  6162   003C0C  C002  F05C         	movff	?___flmul+1,_WheelKalmanFilter$1813+1
  6163   003C10  C003  F05D         	movff	?___flmul+2,_WheelKalmanFilter$1813+2
  6164   003C14  C004  F05E         	movff	?___flmul+3,_WheelKalmanFilter$1813+3
  6165   003C18                     
  6166                           ;WheelMPU6050.c: 30:   KalmanState = KalmanState+KalmanGain * (KalmanMeasurement-KalmanS
      +                          tate);
  6167   003C18  C05B  F01A         	movff	_WheelKalmanFilter$1813,___fladd@b
  6168   003C1C  C05C  F01B         	movff	_WheelKalmanFilter$1813+1,___fladd@b+1
  6169   003C20  C05D  F01C         	movff	_WheelKalmanFilter$1813+2,___fladd@b+2
  6170   003C24  C05E  F01D         	movff	_WheelKalmanFilter$1813+3,___fladd@b+3
  6171   003C28  C06D  F01E         	movff	WheelKalmanFilter@KalmanState,___fladd@a
  6172   003C2C  C06E  F01F         	movff	WheelKalmanFilter@KalmanState+1,___fladd@a+1
  6173   003C30  C06F  F020         	movff	WheelKalmanFilter@KalmanState+2,___fladd@a+2
  6174   003C34  C070  F021         	movff	WheelKalmanFilter@KalmanState+3,___fladd@a+3
  6175   003C38  ECE6  F00C         	call	___fladd	;wreg free
  6176   003C3C  C01A  F06D         	movff	?___fladd,WheelKalmanFilter@KalmanState
  6177   003C40  C01B  F06E         	movff	?___fladd+1,WheelKalmanFilter@KalmanState+1
  6178   003C44  C01C  F06F         	movff	?___fladd+2,WheelKalmanFilter@KalmanState+2
  6179   003C48  C01D  F070         	movff	?___fladd+3,WheelKalmanFilter@KalmanState+3
  6180                           
  6181                           ;WheelMPU6050.c: 31:   KalmanUncertainty =(1-KalmanGain) * KalmanUncertainty;
  6182   003C4C  C144  F02E         	movff	_KalmanGain,___flsub@a
  6183   003C50  C145  F02F         	movff	_KalmanGain+1,___flsub@a+1
  6184   003C54  C146  F030         	movff	_KalmanGain+2,___flsub@a+2
  6185   003C58  C147  F031         	movff	_KalmanGain+3,___flsub@a+3
  6186   003C5C  0E00               	movlw	0
  6187   003C5E  6E2A               	movwf	___flsub@b^0,c
  6188   003C60  0E00               	movlw	0
  6189   003C62  6E2B               	movwf	(___flsub@b+1)^0,c
  6190   003C64  0E80               	movlw	128
  6191   003C66  6E2C               	movwf	(___flsub@b+2)^0,c
  6192   003C68  0E3F               	movlw	63
  6193   003C6A  6E2D               	movwf	(___flsub@b+3)^0,c
  6194   003C6C  ECBE  F027         	call	___flsub	;wreg free
  6195   003C70  C02A  F001         	movff	?___flsub,___flmul@b
  6196   003C74  C02B  F002         	movff	?___flsub+1,___flmul@b+1
  6197   003C78  C02C  F003         	movff	?___flsub+2,___flmul@b+2
  6198   003C7C  C02D  F004         	movff	?___flsub+3,___flmul@b+3
  6199   003C80  C071  F005         	movff	WheelKalmanFilter@KalmanUncertainty,___flmul@a
  6200   003C84  C072  F006         	movff	WheelKalmanFilter@KalmanUncertainty+1,___flmul@a+1
  6201   003C88  C073  F007         	movff	WheelKalmanFilter@KalmanUncertainty+2,___flmul@a+2
  6202   003C8C  C074  F008         	movff	WheelKalmanFilter@KalmanUncertainty+3,___flmul@a+3
  6203   003C90  EC46  F00F         	call	___flmul	;wreg free
  6204   003C94  C001  F071         	movff	?___flmul,WheelKalmanFilter@KalmanUncertainty
  6205   003C98  C002  F072         	movff	?___flmul+1,WheelKalmanFilter@KalmanUncertainty+1
  6206   003C9C  C003  F073         	movff	?___flmul+2,WheelKalmanFilter@KalmanUncertainty+2
  6207   003CA0  C004  F074         	movff	?___flmul+3,WheelKalmanFilter@KalmanUncertainty+3
  6208   003CA4                     
  6209                           ;WheelMPU6050.c: 32:   KalmanOutput[0] = KalmanState;
  6210   003CA4  C06D  F108         	movff	WheelKalmanFilter@KalmanState,_KalmanOutput
  6211   003CA8  C06E  F109         	movff	WheelKalmanFilter@KalmanState+1,_KalmanOutput+1
  6212   003CAC  C06F  F10A         	movff	WheelKalmanFilter@KalmanState+2,_KalmanOutput+2
  6213   003CB0  C070  F10B         	movff	WheelKalmanFilter@KalmanState+3,_KalmanOutput+3
  6214   003CB4                     
  6215                           ;WheelMPU6050.c: 33:   KalmanOutput[1] = KalmanUncertainty;
  6216   003CB4  C071  F10C         	movff	WheelKalmanFilter@KalmanUncertainty,_KalmanOutput+4
  6217   003CB8  C072  F10D         	movff	WheelKalmanFilter@KalmanUncertainty+1,_KalmanOutput+5
  6218   003CBC  C073  F10E         	movff	WheelKalmanFilter@KalmanUncertainty+2,_KalmanOutput+6
  6219   003CC0  C074  F10F         	movff	WheelKalmanFilter@KalmanUncertainty+3,_KalmanOutput+7
  6220   003CC4  0012               	return		;funcret
  6221   003CC6                     __end_of_WheelKalmanFilter:
  6222                           	callstack 0
  6223                           
  6224 ;; *************** function _calibrate_arm_gyro *****************
  6225 ;; Defined at:
  6226 ;;		line 70 in file "ArmMPU6050.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;  i               2   71[BANK0 ] int 
  6231 ;;  x               4    0        int 
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      void 
  6234 ;; Registers used:
  6235 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6241 ;;      Params:         0       0       0       0       0       0       0       0       0
  6242 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6244 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6245 ;;Total ram usage:        2 bytes
  6246 ;; Hardware stack levels used: 1
  6247 ;; Hardware stack levels required when called: 4
  6248 ;; This function calls:
  6249 ;;		_ArmMPU6050_Read
  6250 ;; This function is called by:
  6251 ;;		_main
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text25
  6256   005186                     __ptext25:
  6257                           	callstack 0
  6258   005186                     _calibrate_arm_gyro:
  6259                           	callstack 26
  6260   005186                     
  6261                           ;ArmMPU6050.c: 72:     for(int i = 0; i< 30; i++){
  6262   005186  0E00               	movlw	0
  6263   005188  0100               	movlb	0	; () banked
  6264   00518A  6FA8               	movwf	(calibrate_arm_gyro@i+1)& (0+255),b
  6265   00518C  0E00               	movlw	0
  6266   00518E  6FA7               	movwf	calibrate_arm_gyro@i& (0+255),b
  6267   005190                     l6799:
  6268                           
  6269                           ; BSR set to: 0
  6270   005190  EC18  F015         	call	_ArmMPU6050_Read	;wreg free
  6271   005194                     
  6272                           ;ArmMPU6050.c: 74:     }
  6273   005194  0100               	movlb	0	; () banked
  6274   005196  4BA7               	infsnz	calibrate_arm_gyro@i& (0+255),f,b
  6275   005198  2BA8               	incf	(calibrate_arm_gyro@i+1)& (0+255),f,b
  6276   00519A                     
  6277                           ; BSR set to: 0
  6278   00519A  BFA8               	btfsc	(calibrate_arm_gyro@i+1)& (0+255),7,b
  6279   00519C  EFD9  F028         	goto	u7481
  6280   0051A0  51A8               	movf	(calibrate_arm_gyro@i+1)& (0+255),w,b
  6281   0051A2  E109               	bnz	u7480
  6282   0051A4  0E1E               	movlw	30
  6283   0051A6  5DA7               	subwf	calibrate_arm_gyro@i& (0+255),w,b
  6284   0051A8  A0D8               	btfss	status,0,c
  6285   0051AA  EFD9  F028         	goto	u7481
  6286   0051AE  EFDB  F028         	goto	u7480
  6287   0051B2                     u7481:
  6288   0051B2  EFC8  F028         	goto	l6799
  6289   0051B6                     u7480:
  6290   0051B6                     
  6291                           ; BSR set to: 0
  6292   0051B6  0012               	return		;funcret
  6293   0051B8                     __end_of_calibrate_arm_gyro:
  6294                           	callstack 0
  6295                           
  6296 ;; *************** function _ArmMPU6050_Read *****************
  6297 ;; Defined at:
  6298 ;;		line 35 in file "ArmMPU6050.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;		None
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;		None
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  4   55[BANK0 ] void 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6312 ;;      Params:         0       4       0       0       0       0       0       0       0
  6313 ;;      Locals:         0       8       0       0       0       0       0       0       0
  6314 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6315 ;;      Totals:         0      16       0       0       0       0       0       0       0
  6316 ;;Total ram usage:       16 bytes
  6317 ;; Hardware stack levels used: 1
  6318 ;; Hardware stack levels required when called: 3
  6319 ;; This function calls:
  6320 ;;		_ArmKalmanFilter
  6321 ;;		_I2C_Master_Stop
  6322 ;;		_I2C_Master_Write
  6323 ;;		_I2C_Read
  6324 ;;		_I2C_Start
  6325 ;;		___fladd
  6326 ;;		___fldiv
  6327 ;;		___flmul
  6328 ;;		___xxtofl
  6329 ;;		_atanf
  6330 ;;		_sqrtf
  6331 ;; This function is called by:
  6332 ;;		_main
  6333 ;;		_calibrate_arm_gyro
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337                           	psect	text26
  6338   002A30                     __ptext26:
  6339                           	callstack 0
  6340   002A30                     _ArmMPU6050_Read:
  6341                           	callstack 26
  6342   002A30                     
  6343                           ;ArmMPU6050.c: 39:    I2C_Start(0xD2);
  6344   002A30  0ED2               	movlw	210
  6345   002A32  EC49  F029         	call	_I2C_Start
  6346                           
  6347                           ;ArmMPU6050.c: 40:    I2C_Master_Write(0x3B);
  6348   002A36  0E3B               	movlw	59
  6349   002A38  EC11  F029         	call	_I2C_Master_Write
  6350                           
  6351                           ;ArmMPU6050.c: 41:    I2C_Master_Stop();
  6352   002A3C  EC56  F029         	call	_I2C_Master_Stop	;wreg free
  6353                           
  6354                           ;ArmMPU6050.c: 42:    I2C_Start(0xD3);
  6355   002A40  0ED3               	movlw	211
  6356   002A42  EC49  F029         	call	_I2C_Start
  6357   002A46                     
  6358                           ;ArmMPU6050.c: 43:    I2C_Read(0);
  6359   002A46  0E00               	movlw	0
  6360   002A48  EC9B  F027         	call	_I2C_Read
  6361   002A4C                     
  6362                           ;ArmMPU6050.c: 44:    armAx = (I2C_Read(0)<<8) | I2C_Read(0);
  6363   002A4C  0E00               	movlw	0
  6364   002A4E  EC9B  F027         	call	_I2C_Read
  6365   002A52  0100               	movlb	0	; () banked
  6366   002A54  6F9B               	movwf	??_ArmMPU6050_Read& (0+255),b
  6367   002A56  519B               	movf	??_ArmMPU6050_Read& (0+255),w,b
  6368   002A58  6F9D               	movwf	(??_ArmMPU6050_Read+2)& (0+255),b
  6369   002A5A  6B9C               	clrf	(??_ArmMPU6050_Read+1)& (0+255),b
  6370   002A5C  0E00               	movlw	0
  6371   002A5E  EC9B  F027         	call	_I2C_Read
  6372   002A62  0100               	movlb	0	; () banked
  6373   002A64  6F9E               	movwf	(??_ArmMPU6050_Read+3)& (0+255),b
  6374   002A66  519E               	movf	(??_ArmMPU6050_Read+3)& (0+255),w,b
  6375   002A68  119C               	iorwf	(??_ArmMPU6050_Read+1)& (0+255),w,b
  6376   002A6A  6FEE               	movwf	_armAx& (0+255),b
  6377   002A6C  519D               	movf	(??_ArmMPU6050_Read+2)& (0+255),w,b
  6378   002A6E  6FEF               	movwf	(_armAx+1)& (0+255),b
  6379   002A70                     
  6380                           ; BSR set to: 0
  6381                           ;ArmMPU6050.c: 45:    armAy = (I2C_Read(0)<<8) | I2C_Read(0);
  6382   002A70  0E00               	movlw	0
  6383   002A72  EC9B  F027         	call	_I2C_Read
  6384   002A76  0100               	movlb	0	; () banked
  6385   002A78  6F9B               	movwf	??_ArmMPU6050_Read& (0+255),b
  6386   002A7A  519B               	movf	??_ArmMPU6050_Read& (0+255),w,b
  6387   002A7C  6F9D               	movwf	(??_ArmMPU6050_Read+2)& (0+255),b
  6388   002A7E  6B9C               	clrf	(??_ArmMPU6050_Read+1)& (0+255),b
  6389   002A80  0E00               	movlw	0
  6390   002A82  EC9B  F027         	call	_I2C_Read
  6391   002A86  0100               	movlb	0	; () banked
  6392   002A88  6F9E               	movwf	(??_ArmMPU6050_Read+3)& (0+255),b
  6393   002A8A  519E               	movf	(??_ArmMPU6050_Read+3)& (0+255),w,b
  6394   002A8C  119C               	iorwf	(??_ArmMPU6050_Read+1)& (0+255),w,b
  6395   002A8E  6FEC               	movwf	_armAy& (0+255),b
  6396   002A90  519D               	movf	(??_ArmMPU6050_Read+2)& (0+255),w,b
  6397   002A92  6FED               	movwf	(_armAy+1)& (0+255),b
  6398   002A94                     
  6399                           ; BSR set to: 0
  6400                           ;ArmMPU6050.c: 46:    armAz = (I2C_Read(0)<<8) | I2C_Read(0);
  6401   002A94  0E00               	movlw	0
  6402   002A96  EC9B  F027         	call	_I2C_Read
  6403   002A9A  0100               	movlb	0	; () banked
  6404   002A9C  6F9B               	movwf	??_ArmMPU6050_Read& (0+255),b
  6405   002A9E  519B               	movf	??_ArmMPU6050_Read& (0+255),w,b
  6406   002AA0  6F9D               	movwf	(??_ArmMPU6050_Read+2)& (0+255),b
  6407   002AA2  6B9C               	clrf	(??_ArmMPU6050_Read+1)& (0+255),b
  6408   002AA4  0E00               	movlw	0
  6409   002AA6  EC9B  F027         	call	_I2C_Read
  6410   002AAA  0100               	movlb	0	; () banked
  6411   002AAC  6F9E               	movwf	(??_ArmMPU6050_Read+3)& (0+255),b
  6412   002AAE  519E               	movf	(??_ArmMPU6050_Read+3)& (0+255),w,b
  6413   002AB0  119C               	iorwf	(??_ArmMPU6050_Read+1)& (0+255),w,b
  6414   002AB2  6FEA               	movwf	_armAz& (0+255),b
  6415   002AB4  519D               	movf	(??_ArmMPU6050_Read+2)& (0+255),w,b
  6416   002AB6  6FEB               	movwf	(_armAz+1)& (0+255),b
  6417   002AB8                     
  6418                           ; BSR set to: 0
  6419                           ;ArmMPU6050.c: 47:    armGy = (I2C_Read(0)<<8) | I2C_Read(1);
  6420   002AB8  0E00               	movlw	0
  6421   002ABA  EC9B  F027         	call	_I2C_Read
  6422   002ABE  0100               	movlb	0	; () banked
  6423   002AC0  6F9B               	movwf	??_ArmMPU6050_Read& (0+255),b
  6424   002AC2  519B               	movf	??_ArmMPU6050_Read& (0+255),w,b
  6425   002AC4  6F9D               	movwf	(??_ArmMPU6050_Read+2)& (0+255),b
  6426   002AC6  6B9C               	clrf	(??_ArmMPU6050_Read+1)& (0+255),b
  6427   002AC8  0E01               	movlw	1
  6428   002ACA  EC9B  F027         	call	_I2C_Read
  6429   002ACE  0100               	movlb	0	; () banked
  6430   002AD0  6F9E               	movwf	(??_ArmMPU6050_Read+3)& (0+255),b
  6431   002AD2  519E               	movf	(??_ArmMPU6050_Read+3)& (0+255),w,b
  6432   002AD4  119C               	iorwf	(??_ArmMPU6050_Read+1)& (0+255),w,b
  6433   002AD6  6FE8               	movwf	_armGy& (0+255),b
  6434   002AD8  519D               	movf	(??_ArmMPU6050_Read+2)& (0+255),w,b
  6435   002ADA  6FE9               	movwf	(_armGy+1)& (0+255),b
  6436   002ADC                     
  6437                           ; BSR set to: 0
  6438                           ;ArmMPU6050.c: 48:    I2C_Master_Stop();
  6439   002ADC  EC56  F029         	call	_I2C_Master_Stop	;wreg free
  6440   002AE0                     
  6441                           ;ArmMPU6050.c: 51:   armAX = armAx/16384.0;
  6442   002AE0  C0EE  F001         	movff	_armAx,___xxtofl@val
  6443   002AE4  C0EF  F002         	movff	_armAx+1,___xxtofl@val+1
  6444   002AE8  0E00               	movlw	0
  6445   002AEA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6446   002AEC  0EFF               	movlw	-1
  6447   002AEE  6E03               	movwf	(___xxtofl@val+2)^0,c
  6448   002AF0  6E04               	movwf	(___xxtofl@val+3)^0,c
  6449   002AF2  0E01               	movlw	1
  6450   002AF4  EC56  F020         	call	___xxtofl
  6451   002AF8  C001  F04F         	movff	?___xxtofl,___fldiv@b
  6452   002AFC  C002  F050         	movff	?___xxtofl+1,___fldiv@b+1
  6453   002B00  C003  F051         	movff	?___xxtofl+2,___fldiv@b+2
  6454   002B04  C004  F052         	movff	?___xxtofl+3,___fldiv@b+3
  6455   002B08  0E00               	movlw	0
  6456   002B0A  6E53               	movwf	___fldiv@a^0,c
  6457   002B0C  0E00               	movlw	0
  6458   002B0E  6E54               	movwf	(___fldiv@a+1)^0,c
  6459   002B10  0E80               	movlw	128
  6460   002B12  6E55               	movwf	(___fldiv@a+2)^0,c
  6461   002B14  0E46               	movlw	70
  6462   002B16  6E56               	movwf	(___fldiv@a+3)^0,c
  6463   002B18  EC4A  F013         	call	___fldiv	;wreg free
  6464   002B1C  C04F  F140         	movff	?___fldiv,_armAX
  6465   002B20  C050  F141         	movff	?___fldiv+1,_armAX+1
  6466   002B24  C051  F142         	movff	?___fldiv+2,_armAX+2
  6467   002B28  C052  F143         	movff	?___fldiv+3,_armAX+3
  6468   002B2C                     
  6469                           ;ArmMPU6050.c: 52:   armAY = armAy/16384.0;
  6470   002B2C  C0EC  F001         	movff	_armAy,___xxtofl@val
  6471   002B30  C0ED  F002         	movff	_armAy+1,___xxtofl@val+1
  6472   002B34  0E00               	movlw	0
  6473   002B36  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6474   002B38  0EFF               	movlw	-1
  6475   002B3A  6E03               	movwf	(___xxtofl@val+2)^0,c
  6476   002B3C  6E04               	movwf	(___xxtofl@val+3)^0,c
  6477   002B3E  0E01               	movlw	1
  6478   002B40  EC56  F020         	call	___xxtofl
  6479   002B44  C001  F04F         	movff	?___xxtofl,___fldiv@b
  6480   002B48  C002  F050         	movff	?___xxtofl+1,___fldiv@b+1
  6481   002B4C  C003  F051         	movff	?___xxtofl+2,___fldiv@b+2
  6482   002B50  C004  F052         	movff	?___xxtofl+3,___fldiv@b+3
  6483   002B54  0E00               	movlw	0
  6484   002B56  6E53               	movwf	___fldiv@a^0,c
  6485   002B58  0E00               	movlw	0
  6486   002B5A  6E54               	movwf	(___fldiv@a+1)^0,c
  6487   002B5C  0E80               	movlw	128
  6488   002B5E  6E55               	movwf	(___fldiv@a+2)^0,c
  6489   002B60  0E46               	movlw	70
  6490   002B62  6E56               	movwf	(___fldiv@a+3)^0,c
  6491   002B64  EC4A  F013         	call	___fldiv	;wreg free
  6492   002B68  C04F  F13C         	movff	?___fldiv,_armAY
  6493   002B6C  C050  F13D         	movff	?___fldiv+1,_armAY+1
  6494   002B70  C051  F13E         	movff	?___fldiv+2,_armAY+2
  6495   002B74  C052  F13F         	movff	?___fldiv+3,_armAY+3
  6496   002B78                     
  6497                           ;ArmMPU6050.c: 53:   armAZ = armAz/16384.0;
  6498   002B78  C0EA  F001         	movff	_armAz,___xxtofl@val
  6499   002B7C  C0EB  F002         	movff	_armAz+1,___xxtofl@val+1
  6500   002B80  0E00               	movlw	0
  6501   002B82  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6502   002B84  0EFF               	movlw	-1
  6503   002B86  6E03               	movwf	(___xxtofl@val+2)^0,c
  6504   002B88  6E04               	movwf	(___xxtofl@val+3)^0,c
  6505   002B8A  0E01               	movlw	1
  6506   002B8C  EC56  F020         	call	___xxtofl
  6507   002B90  C001  F04F         	movff	?___xxtofl,___fldiv@b
  6508   002B94  C002  F050         	movff	?___xxtofl+1,___fldiv@b+1
  6509   002B98  C003  F051         	movff	?___xxtofl+2,___fldiv@b+2
  6510   002B9C  C004  F052         	movff	?___xxtofl+3,___fldiv@b+3
  6511   002BA0  0E00               	movlw	0
  6512   002BA2  6E53               	movwf	___fldiv@a^0,c
  6513   002BA4  0E00               	movlw	0
  6514   002BA6  6E54               	movwf	(___fldiv@a+1)^0,c
  6515   002BA8  0E80               	movlw	128
  6516   002BAA  6E55               	movwf	(___fldiv@a+2)^0,c
  6517   002BAC  0E46               	movlw	70
  6518   002BAE  6E56               	movwf	(___fldiv@a+3)^0,c
  6519   002BB0  EC4A  F013         	call	___fldiv	;wreg free
  6520   002BB4  C04F  F138         	movff	?___fldiv,_armAZ
  6521   002BB8  C050  F139         	movff	?___fldiv+1,_armAZ+1
  6522   002BBC  C051  F13A         	movff	?___fldiv+2,_armAZ+2
  6523   002BC0  C052  F13B         	movff	?___fldiv+3,_armAZ+3
  6524   002BC4                     
  6525                           ;ArmMPU6050.c: 54:   armGY = armGy/131.0;
  6526   002BC4  C0E8  F001         	movff	_armGy,___xxtofl@val
  6527   002BC8  C0E9  F002         	movff	_armGy+1,___xxtofl@val+1
  6528   002BCC  0E00               	movlw	0
  6529   002BCE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6530   002BD0  0EFF               	movlw	-1
  6531   002BD2  6E03               	movwf	(___xxtofl@val+2)^0,c
  6532   002BD4  6E04               	movwf	(___xxtofl@val+3)^0,c
  6533   002BD6  0E01               	movlw	1
  6534   002BD8  EC56  F020         	call	___xxtofl
  6535   002BDC  C001  F04F         	movff	?___xxtofl,___fldiv@b
  6536   002BE0  C002  F050         	movff	?___xxtofl+1,___fldiv@b+1
  6537   002BE4  C003  F051         	movff	?___xxtofl+2,___fldiv@b+2
  6538   002BE8  C004  F052         	movff	?___xxtofl+3,___fldiv@b+3
  6539   002BEC  0E00               	movlw	0
  6540   002BEE  6E53               	movwf	___fldiv@a^0,c
  6541   002BF0  0E00               	movlw	0
  6542   002BF2  6E54               	movwf	(___fldiv@a+1)^0,c
  6543   002BF4  0E03               	movlw	3
  6544   002BF6  6E55               	movwf	(___fldiv@a+2)^0,c
  6545   002BF8  0E43               	movlw	67
  6546   002BFA  6E56               	movwf	(___fldiv@a+3)^0,c
  6547   002BFC  EC4A  F013         	call	___fldiv	;wreg free
  6548   002C00  C04F  F12C         	movff	?___fldiv,_armGY
  6549   002C04  C050  F12D         	movff	?___fldiv+1,_armGY+1
  6550   002C08  C051  F12E         	movff	?___fldiv+2,_armGY+2
  6551   002C0C  C052  F12F         	movff	?___fldiv+3,_armGY+3
  6552   002C10                     
  6553                           ;ArmMPU6050.c: 59:   armstateAngle = armOffset + atanf(armAY/sqrtf(armAX*armAX + armAZ*a
      +                          rmAZ))*57.3;
  6554   002C10  C138  F005         	movff	_armAZ,___flmul@a
  6555   002C14  C139  F006         	movff	_armAZ+1,___flmul@a+1
  6556   002C18  C13A  F007         	movff	_armAZ+2,___flmul@a+2
  6557   002C1C  C13B  F008         	movff	_armAZ+3,___flmul@a+3
  6558   002C20  C138  F001         	movff	_armAZ,___flmul@b
  6559   002C24  C139  F002         	movff	_armAZ+1,___flmul@b+1
  6560   002C28  C13A  F003         	movff	_armAZ+2,___flmul@b+2
  6561   002C2C  C13B  F004         	movff	_armAZ+3,___flmul@b+3
  6562   002C30  EC46  F00F         	call	___flmul	;wreg free
  6563   002C34  C001  F01E         	movff	?___flmul,___fladd@a
  6564   002C38  C002  F01F         	movff	?___flmul+1,___fladd@a+1
  6565   002C3C  C003  F020         	movff	?___flmul+2,___fladd@a+2
  6566   002C40  C004  F021         	movff	?___flmul+3,___fladd@a+3
  6567   002C44  C140  F005         	movff	_armAX,___flmul@a
  6568   002C48  C141  F006         	movff	_armAX+1,___flmul@a+1
  6569   002C4C  C142  F007         	movff	_armAX+2,___flmul@a+2
  6570   002C50  C143  F008         	movff	_armAX+3,___flmul@a+3
  6571   002C54  C140  F001         	movff	_armAX,___flmul@b
  6572   002C58  C141  F002         	movff	_armAX+1,___flmul@b+1
  6573   002C5C  C142  F003         	movff	_armAX+2,___flmul@b+2
  6574   002C60  C143  F004         	movff	_armAX+3,___flmul@b+3
  6575   002C64  EC46  F00F         	call	___flmul	;wreg free
  6576   002C68  C001  F01A         	movff	?___flmul,___fladd@b
  6577   002C6C  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  6578   002C70  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  6579   002C74  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  6580   002C78  ECE6  F00C         	call	___fladd	;wreg free
  6581   002C7C  C01A  F02A         	movff	?___fladd,sqrtf@x
  6582   002C80  C01B  F02B         	movff	?___fladd+1,sqrtf@x+1
  6583   002C84  C01C  F02C         	movff	?___fladd+2,sqrtf@x+2
  6584   002C88  C01D  F02D         	movff	?___fladd+3,sqrtf@x+3
  6585   002C8C  EC5B  F011         	call	_sqrtf	;wreg free
  6586   002C90  C02A  F053         	movff	?_sqrtf,___fldiv@a
  6587   002C94  C02B  F054         	movff	?_sqrtf+1,___fldiv@a+1
  6588   002C98  C02C  F055         	movff	?_sqrtf+2,___fldiv@a+2
  6589   002C9C  C02D  F056         	movff	?_sqrtf+3,___fldiv@a+3
  6590   002CA0  C13C  F04F         	movff	_armAY,___fldiv@b
  6591   002CA4  C13D  F050         	movff	_armAY+1,___fldiv@b+1
  6592   002CA8  C13E  F051         	movff	_armAY+2,___fldiv@b+2
  6593   002CAC  C13F  F052         	movff	_armAY+3,___fldiv@b+3
  6594   002CB0  EC4A  F013         	call	___fldiv	;wreg free
  6595   002CB4  C04F  F09F         	movff	?___fldiv,_ArmMPU6050_Read$1817
  6596   002CB8  C050  F0A0         	movff	?___fldiv+1,_ArmMPU6050_Read$1817+1
  6597   002CBC  C051  F0A1         	movff	?___fldiv+2,_ArmMPU6050_Read$1817+2
  6598   002CC0  C052  F0A2         	movff	?___fldiv+3,_ArmMPU6050_Read$1817+3
  6599   002CC4                     
  6600                           ;ArmMPU6050.c: 59:   armstateAngle = armOffset + atanf(armAY/sqrtf(armAX*armAX + armAZ*a
      +                          rmAZ))*57.3;
  6601   002CC4  C09F  F05B         	movff	_ArmMPU6050_Read$1817,atanf@x
  6602   002CC8  C0A0  F05C         	movff	_ArmMPU6050_Read$1817+1,atanf@x+1
  6603   002CCC  C0A1  F05D         	movff	_ArmMPU6050_Read$1817+2,atanf@x+2
  6604   002CD0  C0A2  F05E         	movff	_ArmMPU6050_Read$1817+3,atanf@x+3
  6605   002CD4  EC2E  F009         	call	_atanf	;wreg free
  6606   002CD8  C05B  F0A3         	movff	?_atanf,_ArmMPU6050_Read$1818
  6607   002CDC  C05C  F0A4         	movff	?_atanf+1,_ArmMPU6050_Read$1818+1
  6608   002CE0  C05D  F0A5         	movff	?_atanf+2,_ArmMPU6050_Read$1818+2
  6609   002CE4  C05E  F0A6         	movff	?_atanf+3,_ArmMPU6050_Read$1818+3
  6610   002CE8                     
  6611                           ;ArmMPU6050.c: 59:   armstateAngle = armOffset + atanf(armAY/sqrtf(armAX*armAX + armAZ*a
      +                          rmAZ))*57.3;
  6612   002CE8  0E33               	movlw	51
  6613   002CEA  6E05               	movwf	___flmul@a^0,c
  6614   002CEC  0E33               	movlw	51
  6615   002CEE  6E06               	movwf	(___flmul@a+1)^0,c
  6616   002CF0  0E65               	movlw	101
  6617   002CF2  6E07               	movwf	(___flmul@a+2)^0,c
  6618   002CF4  0E42               	movlw	66
  6619   002CF6  6E08               	movwf	(___flmul@a+3)^0,c
  6620   002CF8  C0A3  F001         	movff	_ArmMPU6050_Read$1818,___flmul@b
  6621   002CFC  C0A4  F002         	movff	_ArmMPU6050_Read$1818+1,___flmul@b+1
  6622   002D00  C0A5  F003         	movff	_ArmMPU6050_Read$1818+2,___flmul@b+2
  6623   002D04  C0A6  F004         	movff	_ArmMPU6050_Read$1818+3,___flmul@b+3
  6624   002D08  EC46  F00F         	call	___flmul	;wreg free
  6625   002D0C  C001  F01A         	movff	?___flmul,___fladd@b
  6626   002D10  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  6627   002D14  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  6628   002D18  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  6629   002D1C  0E00               	movlw	0
  6630   002D1E  6E1E               	movwf	___fladd@a^0,c
  6631   002D20  0E00               	movlw	0
  6632   002D22  6E1F               	movwf	(___fladd@a+1)^0,c
  6633   002D24  0E00               	movlw	0
  6634   002D26  6E20               	movwf	(___fladd@a+2)^0,c
  6635   002D28  0E41               	movlw	65
  6636   002D2A  6E21               	movwf	(___fladd@a+3)^0,c
  6637   002D2C  ECE6  F00C         	call	___fladd	;wreg free
  6638   002D30  C01A  F124         	movff	?___fladd,_armstateAngle
  6639   002D34  C01B  F125         	movff	?___fladd+1,_armstateAngle+1
  6640   002D38  C01C  F126         	movff	?___fladd+2,_armstateAngle+2
  6641   002D3C  C01D  F127         	movff	?___fladd+3,_armstateAngle+3
  6642   002D40                     
  6643                           ;ArmMPU6050.c: 60:   ArmKalmanFilter(armKalmanAngle, armKalmanUncertaintyAngle, armGY, a
      +                          rmstateAngle);
  6644   002D40  C120  F06D         	movff	_armKalmanAngle,ArmKalmanFilter@armKalmanState
  6645   002D44  C121  F06E         	movff	_armKalmanAngle+1,ArmKalmanFilter@armKalmanState+1
  6646   002D48  C122  F06F         	movff	_armKalmanAngle+2,ArmKalmanFilter@armKalmanState+2
  6647   002D4C  C123  F070         	movff	_armKalmanAngle+3,ArmKalmanFilter@armKalmanState+3
  6648   002D50  C19A  F071         	movff	_armKalmanUncertaintyAngle,ArmKalmanFilter@armKalmanUncertainty
  6649   002D54  C19B  F072         	movff	_armKalmanUncertaintyAngle+1,ArmKalmanFilter@armKalmanUncertainty+1
  6650   002D58  C19C  F073         	movff	_armKalmanUncertaintyAngle+2,ArmKalmanFilter@armKalmanUncertainty+2
  6651   002D5C  C19D  F074         	movff	_armKalmanUncertaintyAngle+3,ArmKalmanFilter@armKalmanUncertainty+3
  6652   002D60  C12C  F075         	movff	_armGY,ArmKalmanFilter@armKalmanInput
  6653   002D64  C12D  F076         	movff	_armGY+1,ArmKalmanFilter@armKalmanInput+1
  6654   002D68  C12E  F077         	movff	_armGY+2,ArmKalmanFilter@armKalmanInput+2
  6655   002D6C  C12F  F078         	movff	_armGY+3,ArmKalmanFilter@armKalmanInput+3
  6656   002D70  C124  F079         	movff	_armstateAngle,ArmKalmanFilter@armKalmanMeasurement
  6657   002D74  C125  F07A         	movff	_armstateAngle+1,ArmKalmanFilter@armKalmanMeasurement+1
  6658   002D78  C126  F07B         	movff	_armstateAngle+2,ArmKalmanFilter@armKalmanMeasurement+2
  6659   002D7C  C127  F07C         	movff	_armstateAngle+3,ArmKalmanFilter@armKalmanMeasurement+3
  6660   002D80  EC63  F01E         	call	_ArmKalmanFilter	;wreg free
  6661   002D84                     
  6662                           ;ArmMPU6050.c: 61:   armKalmanAngle = armKalmanOutput[0];
  6663   002D84  C100  F120         	movff	_armKalmanOutput,_armKalmanAngle
  6664   002D88  C101  F121         	movff	_armKalmanOutput+1,_armKalmanAngle+1
  6665   002D8C  C102  F122         	movff	_armKalmanOutput+2,_armKalmanAngle+2
  6666   002D90  C103  F123         	movff	_armKalmanOutput+3,_armKalmanAngle+3
  6667   002D94                     
  6668                           ;ArmMPU6050.c: 62:   armKalmanUncertaintyAngle = armKalmanOutput[1];
  6669   002D94  C104  F19A         	movff	_armKalmanOutput+4,_armKalmanUncertaintyAngle
  6670   002D98  C105  F19B         	movff	_armKalmanOutput+5,_armKalmanUncertaintyAngle+1
  6671   002D9C  C106  F19C         	movff	_armKalmanOutput+6,_armKalmanUncertaintyAngle+2
  6672   002DA0  C107  F19D         	movff	_armKalmanOutput+7,_armKalmanUncertaintyAngle+3
  6673   002DA4                     
  6674                           ;ArmMPU6050.c: 64:   return armKalmanAngle;
  6675   002DA4  C120  F097         	movff	_armKalmanAngle,?_ArmMPU6050_Read
  6676   002DA8  C121  F098         	movff	_armKalmanAngle+1,?_ArmMPU6050_Read+1
  6677   002DAC  C122  F099         	movff	_armKalmanAngle+2,?_ArmMPU6050_Read+2
  6678   002DB0  C123  F09A         	movff	_armKalmanAngle+3,?_ArmMPU6050_Read+3
  6679   002DB4  0012               	return		;funcret
  6680   002DB6                     __end_of_ArmMPU6050_Read:
  6681                           	callstack 0
  6682                           
  6683 ;; *************** function _sqrtf *****************
  6684 ;; Defined at:
  6685 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sqrtf.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  x               4   41[COMRAM] float 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;  ix              4   74[COMRAM] struct .
  6690 ;;  r               4   70[COMRAM] unsigned long 
  6691 ;;  m               4   66[COMRAM] long 
  6692 ;;  t               4   62[COMRAM] long 
  6693 ;;  q               4   58[COMRAM] long 
  6694 ;;  i               4   54[COMRAM] long 
  6695 ;;  s               4   50[COMRAM] long 
  6696 ;;  z               4    0        float 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  4   41[COMRAM] float 
  6699 ;; Registers used:
  6700 ;;		wreg, status,2, status,0
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6706 ;;      Params:         4       0       0       0       0       0       0       0       0
  6707 ;;      Locals:        28       0       0       0       0       0       0       0       0
  6708 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6709 ;;      Totals:        37       0       0       0       0       0       0       0       0
  6710 ;;Total ram usage:       37 bytes
  6711 ;; Hardware stack levels used: 1
  6712 ;; This function calls:
  6713 ;;		Nothing
  6714 ;; This function is called by:
  6715 ;;		_WheelMPU6050_Read
  6716 ;;		_ArmMPU6050_Read
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text27
  6721   0022B6                     __ptext27:
  6722                           	callstack 0
  6723   0022B6                     _sqrtf:
  6724                           	callstack 28
  6725   0022B6  C02A  F04B         	movff	sqrtf@x,sqrtf@ix
  6726   0022BA  C02B  F04C         	movff	sqrtf@x+1,sqrtf@ix+1
  6727   0022BE  C02C  F04D         	movff	sqrtf@x+2,sqrtf@ix+2
  6728   0022C2  C02D  F04E         	movff	sqrtf@x+3,sqrtf@ix+3
  6729   0022C6  0E00               	movlw	0
  6730   0022C8  144B               	andwf	sqrtf@ix^0,w,c
  6731   0022CA  6E2E               	movwf	??_sqrtf^0,c
  6732   0022CC  0E00               	movlw	0
  6733   0022CE  144C               	andwf	(sqrtf@ix+1)^0,w,c
  6734   0022D0  6E2F               	movwf	(??_sqrtf+1)^0,c
  6735   0022D2  0E80               	movlw	128
  6736   0022D4  144D               	andwf	(sqrtf@ix+2)^0,w,c
  6737   0022D6  6E30               	movwf	(??_sqrtf+2)^0,c
  6738   0022D8  0E7F               	movlw	127
  6739   0022DA  144E               	andwf	(sqrtf@ix+3)^0,w,c
  6740   0022DC  6E31               	movwf	(??_sqrtf+3)^0,c
  6741   0022DE  0E80               	movlw	128
  6742   0022E0  1830               	xorwf	(??_sqrtf+2)^0,w,c
  6743   0022E2  E109               	bnz	u6911
  6744   0022E4  0E7F               	movlw	127
  6745   0022E6  1831               	xorwf	(??_sqrtf+3)^0,w,c
  6746   0022E8  102E               	iorwf	??_sqrtf^0,w,c
  6747   0022EA  102F               	iorwf	(??_sqrtf+1)^0,w,c
  6748   0022EC  A4D8               	btfss	status,2,c
  6749   0022EE  EF7B  F011         	goto	u6911
  6750   0022F2  EF7D  F011         	goto	u6910
  6751   0022F6                     u6911:
  6752   0022F6  EFAD  F011         	goto	l6161
  6753   0022FA                     u6910:
  6754   0022FA  0EFF               	movlw	255
  6755   0022FC  144B               	andwf	sqrtf@ix^0,w,c
  6756   0022FE  6E2E               	movwf	??_sqrtf^0,c
  6757   002300  0EFF               	movlw	255
  6758   002302  144C               	andwf	(sqrtf@ix+1)^0,w,c
  6759   002304  6E2F               	movwf	(??_sqrtf+1)^0,c
  6760   002306  0E7F               	movlw	127
  6761   002308  144D               	andwf	(sqrtf@ix+2)^0,w,c
  6762   00230A  6E30               	movwf	(??_sqrtf+2)^0,c
  6763   00230C  0E00               	movlw	0
  6764   00230E  144E               	andwf	(sqrtf@ix+3)^0,w,c
  6765   002310  6E31               	movwf	(??_sqrtf+3)^0,c
  6766   002312  502E               	movf	??_sqrtf^0,w,c
  6767   002314  102F               	iorwf	(??_sqrtf+1)^0,w,c
  6768   002316  1030               	iorwf	(??_sqrtf+2)^0,w,c
  6769   002318  1031               	iorwf	(??_sqrtf+3)^0,w,c
  6770   00231A  A4D8               	btfss	status,2,c
  6771   00231C  EF92  F011         	goto	u6921
  6772   002320  EF94  F011         	goto	u6920
  6773   002324                     u6921:
  6774   002324  EF9B  F011         	goto	l6155
  6775   002328                     u6920:
  6776   002328  BE4E               	btfsc	(sqrtf@ix+3)^0,7,c
  6777   00232A  EF9B  F011         	goto	u6930
  6778   00232E  EF99  F011         	goto	u6931
  6779   002332                     u6931:
  6780   002332  EFA3  F011         	goto	l6157
  6781   002336                     u6930:
  6782   002336                     l6155:
  6783   002336  0EFF               	movlw	255
  6784   002338  124B               	iorwf	sqrtf@ix^0,f,c
  6785   00233A  0EFF               	movlw	255
  6786   00233C  124C               	iorwf	(sqrtf@ix+1)^0,f,c
  6787   00233E  0E7F               	movlw	127
  6788   002340  124D               	iorwf	(sqrtf@ix+2)^0,f,c
  6789   002342  0E00               	movlw	0
  6790   002344  124E               	iorwf	(sqrtf@ix+3)^0,f,c
  6791   002346                     l6157:
  6792   002346  C04B  F02A         	movff	sqrtf@ix,?_sqrtf
  6793   00234A  C04C  F02B         	movff	sqrtf@ix+1,?_sqrtf+1
  6794   00234E  C04D  F02C         	movff	sqrtf@ix+2,?_sqrtf+2
  6795   002352  C04E  F02D         	movff	sqrtf@ix+3,?_sqrtf+3
  6796   002356  EF49  F013         	goto	l1326
  6797   00235A                     l6161:
  6798   00235A  BE4E               	btfsc	(sqrtf@ix+3)^0,7,c
  6799   00235C  EFBC  F011         	goto	u6940
  6800   002360  504E               	movf	(sqrtf@ix+3)^0,w,c
  6801   002362  104D               	iorwf	(sqrtf@ix+2)^0,w,c
  6802   002364  104C               	iorwf	(sqrtf@ix+1)^0,w,c
  6803   002366  E106               	bnz	u6941
  6804   002368  044B               	decf	sqrtf@ix^0,w,c
  6805   00236A  B0D8               	btfsc	status,0,c
  6806   00236C  EFBA  F011         	goto	u6941
  6807   002370  EFBC  F011         	goto	u6940
  6808   002374                     u6941:
  6809   002374  EFF3  F011         	goto	l6177
  6810   002378                     u6940:
  6811   002378  0EFF               	movlw	255
  6812   00237A  144B               	andwf	sqrtf@ix^0,w,c
  6813   00237C  6E2E               	movwf	??_sqrtf^0,c
  6814   00237E  0EFF               	movlw	255
  6815   002380  144C               	andwf	(sqrtf@ix+1)^0,w,c
  6816   002382  6E2F               	movwf	(??_sqrtf+1)^0,c
  6817   002384  0EFF               	movlw	255
  6818   002386  144D               	andwf	(sqrtf@ix+2)^0,w,c
  6819   002388  6E30               	movwf	(??_sqrtf+2)^0,c
  6820   00238A  0E7F               	movlw	127
  6821   00238C  144E               	andwf	(sqrtf@ix+3)^0,w,c
  6822   00238E  6E31               	movwf	(??_sqrtf+3)^0,c
  6823   002390  502E               	movf	??_sqrtf^0,w,c
  6824   002392  102F               	iorwf	(??_sqrtf+1)^0,w,c
  6825   002394  1030               	iorwf	(??_sqrtf+2)^0,w,c
  6826   002396  1031               	iorwf	(??_sqrtf+3)^0,w,c
  6827   002398  A4D8               	btfss	status,2,c
  6828   00239A  EFD1  F011         	goto	u6951
  6829   00239E  EFD3  F011         	goto	u6950
  6830   0023A2                     u6951:
  6831   0023A2  EFDD  F011         	goto	l6169
  6832   0023A6                     u6950:
  6833   0023A6  0E00               	movlw	0
  6834   0023A8  6E2A               	movwf	?_sqrtf^0,c
  6835   0023AA  0E00               	movlw	0
  6836   0023AC  6E2B               	movwf	(?_sqrtf+1)^0,c
  6837   0023AE  0E00               	movlw	0
  6838   0023B0  6E2C               	movwf	(?_sqrtf+2)^0,c
  6839   0023B2  0E00               	movlw	0
  6840   0023B4  6E2D               	movwf	(?_sqrtf+3)^0,c
  6841   0023B6  EF49  F013         	goto	l1326
  6842   0023BA                     l6169:
  6843   0023BA  BE4E               	btfsc	(sqrtf@ix+3)^0,7,c
  6844   0023BC  EFE4  F011         	goto	u6960
  6845   0023C0  EFE2  F011         	goto	u6961
  6846   0023C4                     u6961:
  6847   0023C4  EFF3  F011         	goto	l6177
  6848   0023C8                     u6960:
  6849   0023C8  0E00               	movlw	0
  6850   0023CA  0101               	movlb	1	; () banked
  6851   0023CC  6F99               	movwf	(_errno+1)& (0+255),b
  6852   0023CE  0E21               	movlw	33
  6853   0023D0  6F98               	movwf	_errno& (0+255),b
  6854   0023D2  0EFF               	movlw	255
  6855   0023D4  6E4B               	movwf	sqrtf@ix^0,c
  6856   0023D6  0EFF               	movlw	255
  6857   0023D8  6E4C               	movwf	(sqrtf@ix+1)^0,c
  6858   0023DA  0EFF               	movlw	255
  6859   0023DC  6E4D               	movwf	(sqrtf@ix+2)^0,c
  6860   0023DE  0E7F               	movlw	127
  6861   0023E0  6E4E               	movwf	(sqrtf@ix+3)^0,c
  6862   0023E2  EFA3  F011         	goto	l6157
  6863   0023E6                     l6177:
  6864   0023E6  0E17               	movlw	23
  6865   0023E8  6E2E               	movwf	??_sqrtf^0,c
  6866   0023EA  C04B  F02F         	movff	sqrtf@ix,??_sqrtf+1
  6867   0023EE  C04C  F030         	movff	sqrtf@ix+1,??_sqrtf+2
  6868   0023F2  C04D  F031         	movff	sqrtf@ix+2,??_sqrtf+3
  6869   0023F6  C04E  F032         	movff	sqrtf@ix+3,??_sqrtf+4
  6870   0023FA                     u6975:
  6871   0023FA  662E               	tstfsz	??_sqrtf^0,c
  6872   0023FC  EF02  F012         	goto	u6976
  6873   002400  EF0A  F012         	goto	u6977
  6874   002404                     u6976:
  6875   002404  3432               	rlcf	(??_sqrtf+4)^0,w,c
  6876   002406  3232               	rrcf	(??_sqrtf+4)^0,f,c
  6877   002408  3231               	rrcf	(??_sqrtf+3)^0,f,c
  6878   00240A  3230               	rrcf	(??_sqrtf+2)^0,f,c
  6879   00240C  322F               	rrcf	(??_sqrtf+1)^0,f,c
  6880   00240E  2E2E               	decfsz	??_sqrtf^0,f,c
  6881   002410  EFFD  F011         	goto	u6975
  6882   002414                     u6977:
  6883   002414  C02F  F043         	movff	??_sqrtf+1,sqrtf@m
  6884   002418  C030  F044         	movff	??_sqrtf+2,sqrtf@m+1
  6885   00241C  C031  F045         	movff	??_sqrtf+3,sqrtf@m+2
  6886   002420  C032  F046         	movff	??_sqrtf+4,sqrtf@m+3
  6887   002424  5043               	movf	sqrtf@m^0,w,c
  6888   002426  1044               	iorwf	(sqrtf@m+1)^0,w,c
  6889   002428  1045               	iorwf	(sqrtf@m+2)^0,w,c
  6890   00242A  1046               	iorwf	(sqrtf@m+3)^0,w,c
  6891   00242C  A4D8               	btfss	status,2,c
  6892   00242E  EF1B  F012         	goto	u6981
  6893   002432  EF1D  F012         	goto	u6980
  6894   002436                     u6981:
  6895   002436  EF4D  F012         	goto	l1330
  6896   00243A                     u6980:
  6897   00243A  0E00               	movlw	0
  6898   00243C  6E37               	movwf	sqrtf@i^0,c
  6899   00243E  0E00               	movlw	0
  6900   002440  6E38               	movwf	(sqrtf@i+1)^0,c
  6901   002442  0E00               	movlw	0
  6902   002444  6E39               	movwf	(sqrtf@i+2)^0,c
  6903   002446  0E00               	movlw	0
  6904   002448  6E3A               	movwf	(sqrtf@i+3)^0,c
  6905   00244A  EF32  F012         	goto	l6185
  6906   00244E                     l6181:
  6907   00244E  90D8               	bcf	status,0,c
  6908   002450  364B               	rlcf	sqrtf@ix^0,f,c
  6909   002452  364C               	rlcf	(sqrtf@ix+1)^0,f,c
  6910   002454  364D               	rlcf	(sqrtf@ix+2)^0,f,c
  6911   002456  364E               	rlcf	(sqrtf@ix+3)^0,f,c
  6912   002458  0E01               	movlw	1
  6913   00245A  2637               	addwf	sqrtf@i^0,f,c
  6914   00245C  0E00               	movlw	0
  6915   00245E  2238               	addwfc	(sqrtf@i+1)^0,f,c
  6916   002460  2239               	addwfc	(sqrtf@i+2)^0,f,c
  6917   002462  223A               	addwfc	(sqrtf@i+3)^0,f,c
  6918   002464                     l6185:
  6919   002464  AE4D               	btfss	(sqrtf@ix+2)^0,7,c
  6920   002466  EF37  F012         	goto	u6991
  6921   00246A  EF39  F012         	goto	u6990
  6922   00246E                     u6991:
  6923   00246E  EF27  F012         	goto	l6181
  6924   002472                     u6990:
  6925   002472  0EFF               	movlw	255
  6926   002474  2437               	addwf	sqrtf@i^0,w,c
  6927   002476  6E2E               	movwf	??_sqrtf^0,c
  6928   002478  0EFF               	movlw	255
  6929   00247A  2038               	addwfc	(sqrtf@i+1)^0,w,c
  6930   00247C  6E2F               	movwf	(??_sqrtf+1)^0,c
  6931   00247E  0EFF               	movlw	255
  6932   002480  2039               	addwfc	(sqrtf@i+2)^0,w,c
  6933   002482  6E30               	movwf	(??_sqrtf+2)^0,c
  6934   002484  0EFF               	movlw	255
  6935   002486  203A               	addwfc	(sqrtf@i+3)^0,w,c
  6936   002488  6E31               	movwf	(??_sqrtf+3)^0,c
  6937   00248A  502E               	movf	??_sqrtf^0,w,c
  6938   00248C  5E43               	subwf	sqrtf@m^0,f,c
  6939   00248E  502F               	movf	(??_sqrtf+1)^0,w,c
  6940   002490  5A44               	subwfb	(sqrtf@m+1)^0,f,c
  6941   002492  5030               	movf	(??_sqrtf+2)^0,w,c
  6942   002494  5A45               	subwfb	(sqrtf@m+2)^0,f,c
  6943   002496  5031               	movf	(??_sqrtf+3)^0,w,c
  6944   002498  5A46               	subwfb	(sqrtf@m+3)^0,f,c
  6945   00249A                     l1330:
  6946   00249A  0E81               	movlw	129
  6947   00249C  2643               	addwf	sqrtf@m^0,f,c
  6948   00249E  0EFF               	movlw	255
  6949   0024A0  2244               	addwfc	(sqrtf@m+1)^0,f,c
  6950   0024A2  0EFF               	movlw	255
  6951   0024A4  2245               	addwfc	(sqrtf@m+2)^0,f,c
  6952   0024A6  0EFF               	movlw	255
  6953   0024A8  2246               	addwfc	(sqrtf@m+3)^0,f,c
  6954   0024AA  0EFF               	movlw	255
  6955   0024AC  144B               	andwf	sqrtf@ix^0,w,c
  6956   0024AE  6E2E               	movwf	??_sqrtf^0,c
  6957   0024B0  0EFF               	movlw	255
  6958   0024B2  144C               	andwf	(sqrtf@ix+1)^0,w,c
  6959   0024B4  6E2F               	movwf	(??_sqrtf+1)^0,c
  6960   0024B6  0E7F               	movlw	127
  6961   0024B8  144D               	andwf	(sqrtf@ix+2)^0,w,c
  6962   0024BA  6E30               	movwf	(??_sqrtf+2)^0,c
  6963   0024BC  0E00               	movlw	0
  6964   0024BE  144E               	andwf	(sqrtf@ix+3)^0,w,c
  6965   0024C0  6E31               	movwf	(??_sqrtf+3)^0,c
  6966   0024C2  0E00               	movlw	0
  6967   0024C4  102E               	iorwf	??_sqrtf^0,w,c
  6968   0024C6  6E4B               	movwf	sqrtf@ix^0,c
  6969   0024C8  0E00               	movlw	0
  6970   0024CA  102F               	iorwf	(??_sqrtf+1)^0,w,c
  6971   0024CC  6E4C               	movwf	(sqrtf@ix+1)^0,c
  6972   0024CE  0E80               	movlw	128
  6973   0024D0  1030               	iorwf	(??_sqrtf+2)^0,w,c
  6974   0024D2  6E4D               	movwf	(sqrtf@ix+2)^0,c
  6975   0024D4  0E00               	movlw	0
  6976   0024D6  1031               	iorwf	(??_sqrtf+3)^0,w,c
  6977   0024D8  6E4E               	movwf	(sqrtf@ix+3)^0,c
  6978   0024DA  A043               	btfss	sqrtf@m^0,0,c
  6979   0024DC  EF72  F012         	goto	u7001
  6980   0024E0  EF74  F012         	goto	u7000
  6981   0024E4                     u7001:
  6982   0024E4  EF7C  F012         	goto	l1334
  6983   0024E8                     u7000:
  6984   0024E8  504B               	movf	sqrtf@ix^0,w,c
  6985   0024EA  264B               	addwf	sqrtf@ix^0,f,c
  6986   0024EC  504C               	movf	(sqrtf@ix+1)^0,w,c
  6987   0024EE  224C               	addwfc	(sqrtf@ix+1)^0,f,c
  6988   0024F0  504D               	movf	(sqrtf@ix+2)^0,w,c
  6989   0024F2  224D               	addwfc	(sqrtf@ix+2)^0,f,c
  6990   0024F4  504E               	movf	(sqrtf@ix+3)^0,w,c
  6991   0024F6  224E               	addwfc	(sqrtf@ix+3)^0,f,c
  6992   0024F8                     l1334:
  6993   0024F8  3446               	rlcf	(sqrtf@m+3)^0,w,c
  6994   0024FA  3246               	rrcf	(sqrtf@m+3)^0,f,c
  6995   0024FC  3245               	rrcf	(sqrtf@m+2)^0,f,c
  6996   0024FE  3244               	rrcf	(sqrtf@m+1)^0,f,c
  6997   002500  3243               	rrcf	sqrtf@m^0,f,c
  6998   002502  504B               	movf	sqrtf@ix^0,w,c
  6999   002504  264B               	addwf	sqrtf@ix^0,f,c
  7000   002506  504C               	movf	(sqrtf@ix+1)^0,w,c
  7001   002508  224C               	addwfc	(sqrtf@ix+1)^0,f,c
  7002   00250A  504D               	movf	(sqrtf@ix+2)^0,w,c
  7003   00250C  224D               	addwfc	(sqrtf@ix+2)^0,f,c
  7004   00250E  504E               	movf	(sqrtf@ix+3)^0,w,c
  7005   002510  224E               	addwfc	(sqrtf@ix+3)^0,f,c
  7006   002512  0E00               	movlw	0
  7007   002514  6E33               	movwf	sqrtf@s^0,c
  7008   002516  0E00               	movlw	0
  7009   002518  6E34               	movwf	(sqrtf@s+1)^0,c
  7010   00251A  0E00               	movlw	0
  7011   00251C  6E35               	movwf	(sqrtf@s+2)^0,c
  7012   00251E  0E00               	movlw	0
  7013   002520  6E36               	movwf	(sqrtf@s+3)^0,c
  7014   002522  C033  F03B         	movff	sqrtf@s,sqrtf@q
  7015   002526  C034  F03C         	movff	sqrtf@s+1,sqrtf@q+1
  7016   00252A  C035  F03D         	movff	sqrtf@s+2,sqrtf@q+2
  7017   00252E  C036  F03E         	movff	sqrtf@s+3,sqrtf@q+3
  7018   002532  0E00               	movlw	0
  7019   002534  6E47               	movwf	sqrtf@r^0,c
  7020   002536  0E00               	movlw	0
  7021   002538  6E48               	movwf	(sqrtf@r+1)^0,c
  7022   00253A  0E00               	movlw	0
  7023   00253C  6E49               	movwf	(sqrtf@r+2)^0,c
  7024   00253E  0E01               	movlw	1
  7025   002540  6E4A               	movwf	(sqrtf@r+3)^0,c
  7026   002542  EFEB  F012         	goto	l6203
  7027   002546                     l6197:
  7028   002546  5033               	movf	sqrtf@s^0,w,c
  7029   002548  2447               	addwf	sqrtf@r^0,w,c
  7030   00254A  6E3F               	movwf	sqrtf@t^0,c
  7031   00254C  5034               	movf	(sqrtf@s+1)^0,w,c
  7032   00254E  2048               	addwfc	(sqrtf@r+1)^0,w,c
  7033   002550  6E40               	movwf	(sqrtf@t+1)^0,c
  7034   002552  5035               	movf	(sqrtf@s+2)^0,w,c
  7035   002554  2049               	addwfc	(sqrtf@r+2)^0,w,c
  7036   002556  6E41               	movwf	(sqrtf@t+2)^0,c
  7037   002558  5036               	movf	(sqrtf@s+3)^0,w,c
  7038   00255A  204A               	addwfc	(sqrtf@r+3)^0,w,c
  7039   00255C  6E42               	movwf	(sqrtf@t+3)^0,c
  7040   00255E  503F               	movf	sqrtf@t^0,w,c
  7041   002560  5C4B               	subwf	sqrtf@ix^0,w,c
  7042   002562  5040               	movf	(sqrtf@t+1)^0,w,c
  7043   002564  584C               	subwfb	(sqrtf@ix+1)^0,w,c
  7044   002566  5041               	movf	(sqrtf@t+2)^0,w,c
  7045   002568  584D               	subwfb	(sqrtf@ix+2)^0,w,c
  7046   00256A  504E               	movf	(sqrtf@ix+3)^0,w,c
  7047   00256C  0A80               	xorlw	128
  7048   00256E  6E2E               	movwf	??_sqrtf^0,c
  7049   002570  5042               	movf	(sqrtf@t+3)^0,w,c
  7050   002572  0A80               	xorlw	128
  7051   002574  582E               	subwfb	??_sqrtf^0,w,c
  7052   002576  A0D8               	btfss	status,0,c
  7053   002578  EFC0  F012         	goto	u7011
  7054   00257C  EFC2  F012         	goto	u7010
  7055   002580                     u7011:
  7056   002580  EFDE  F012         	goto	l1337
  7057   002584                     u7010:
  7058   002584  503F               	movf	sqrtf@t^0,w,c
  7059   002586  2447               	addwf	sqrtf@r^0,w,c
  7060   002588  6E33               	movwf	sqrtf@s^0,c
  7061   00258A  5040               	movf	(sqrtf@t+1)^0,w,c
  7062   00258C  2048               	addwfc	(sqrtf@r+1)^0,w,c
  7063   00258E  6E34               	movwf	(sqrtf@s+1)^0,c
  7064   002590  5041               	movf	(sqrtf@t+2)^0,w,c
  7065   002592  2049               	addwfc	(sqrtf@r+2)^0,w,c
  7066   002594  6E35               	movwf	(sqrtf@s+2)^0,c
  7067   002596  5042               	movf	(sqrtf@t+3)^0,w,c
  7068   002598  204A               	addwfc	(sqrtf@r+3)^0,w,c
  7069   00259A  6E36               	movwf	(sqrtf@s+3)^0,c
  7070   00259C  503F               	movf	sqrtf@t^0,w,c
  7071   00259E  5E4B               	subwf	sqrtf@ix^0,f,c
  7072   0025A0  5040               	movf	(sqrtf@t+1)^0,w,c
  7073   0025A2  5A4C               	subwfb	(sqrtf@ix+1)^0,f,c
  7074   0025A4  5041               	movf	(sqrtf@t+2)^0,w,c
  7075   0025A6  5A4D               	subwfb	(sqrtf@ix+2)^0,f,c
  7076   0025A8  5042               	movf	(sqrtf@t+3)^0,w,c
  7077   0025AA  5A4E               	subwfb	(sqrtf@ix+3)^0,f,c
  7078   0025AC  5047               	movf	sqrtf@r^0,w,c
  7079   0025AE  263B               	addwf	sqrtf@q^0,f,c
  7080   0025B0  5048               	movf	(sqrtf@r+1)^0,w,c
  7081   0025B2  223C               	addwfc	(sqrtf@q+1)^0,f,c
  7082   0025B4  5049               	movf	(sqrtf@r+2)^0,w,c
  7083   0025B6  223D               	addwfc	(sqrtf@q+2)^0,f,c
  7084   0025B8  504A               	movf	(sqrtf@r+3)^0,w,c
  7085   0025BA  223E               	addwfc	(sqrtf@q+3)^0,f,c
  7086   0025BC                     l1337:
  7087   0025BC  504B               	movf	sqrtf@ix^0,w,c
  7088   0025BE  264B               	addwf	sqrtf@ix^0,f,c
  7089   0025C0  504C               	movf	(sqrtf@ix+1)^0,w,c
  7090   0025C2  224C               	addwfc	(sqrtf@ix+1)^0,f,c
  7091   0025C4  504D               	movf	(sqrtf@ix+2)^0,w,c
  7092   0025C6  224D               	addwfc	(sqrtf@ix+2)^0,f,c
  7093   0025C8  504E               	movf	(sqrtf@ix+3)^0,w,c
  7094   0025CA  224E               	addwfc	(sqrtf@ix+3)^0,f,c
  7095   0025CC  90D8               	bcf	status,0,c
  7096   0025CE  324A               	rrcf	(sqrtf@r+3)^0,f,c
  7097   0025D0  3249               	rrcf	(sqrtf@r+2)^0,f,c
  7098   0025D2  3248               	rrcf	(sqrtf@r+1)^0,f,c
  7099   0025D4  3247               	rrcf	sqrtf@r^0,f,c
  7100   0025D6                     l6203:
  7101   0025D6  5047               	movf	sqrtf@r^0,w,c
  7102   0025D8  1048               	iorwf	(sqrtf@r+1)^0,w,c
  7103   0025DA  1049               	iorwf	(sqrtf@r+2)^0,w,c
  7104   0025DC  104A               	iorwf	(sqrtf@r+3)^0,w,c
  7105   0025DE  A4D8               	btfss	status,2,c
  7106   0025E0  EFF4  F012         	goto	u7021
  7107   0025E4  EFF6  F012         	goto	u7020
  7108   0025E8                     u7021:
  7109   0025E8  EFA3  F012         	goto	l6197
  7110   0025EC                     u7020:
  7111   0025EC  504B               	movf	sqrtf@ix^0,w,c
  7112   0025EE  104C               	iorwf	(sqrtf@ix+1)^0,w,c
  7113   0025F0  104D               	iorwf	(sqrtf@ix+2)^0,w,c
  7114   0025F2  104E               	iorwf	(sqrtf@ix+3)^0,w,c
  7115   0025F4  B4D8               	btfsc	status,2,c
  7116   0025F6  EFFF  F012         	goto	u7031
  7117   0025FA  EF01  F013         	goto	u7030
  7118   0025FE                     u7031:
  7119   0025FE  EF15  F013         	goto	l1339
  7120   002602                     u7030:
  7121   002602  0E01               	movlw	1
  7122   002604  143B               	andwf	sqrtf@q^0,w,c
  7123   002606  6E2E               	movwf	??_sqrtf^0,c
  7124   002608  0E00               	movlw	0
  7125   00260A  143C               	andwf	(sqrtf@q+1)^0,w,c
  7126   00260C  6E2F               	movwf	(??_sqrtf+1)^0,c
  7127   00260E  0E00               	movlw	0
  7128   002610  143D               	andwf	(sqrtf@q+2)^0,w,c
  7129   002612  6E30               	movwf	(??_sqrtf+2)^0,c
  7130   002614  0E00               	movlw	0
  7131   002616  143E               	andwf	(sqrtf@q+3)^0,w,c
  7132   002618  6E31               	movwf	(??_sqrtf+3)^0,c
  7133   00261A  502E               	movf	??_sqrtf^0,w,c
  7134   00261C  263B               	addwf	sqrtf@q^0,f,c
  7135   00261E  502F               	movf	(??_sqrtf+1)^0,w,c
  7136   002620  223C               	addwfc	(sqrtf@q+1)^0,f,c
  7137   002622  5030               	movf	(??_sqrtf+2)^0,w,c
  7138   002624  223D               	addwfc	(sqrtf@q+2)^0,f,c
  7139   002626  5031               	movf	(??_sqrtf+3)^0,w,c
  7140   002628  223E               	addwfc	(sqrtf@q+3)^0,f,c
  7141   00262A                     l1339:
  7142   00262A  C03B  F02E         	movff	sqrtf@q,??_sqrtf
  7143   00262E  C03C  F02F         	movff	sqrtf@q+1,??_sqrtf+1
  7144   002632  C03D  F030         	movff	sqrtf@q+2,??_sqrtf+2
  7145   002636  C03E  F031         	movff	sqrtf@q+3,??_sqrtf+3
  7146   00263A  3431               	rlcf	(??_sqrtf+3)^0,w,c
  7147   00263C  3231               	rrcf	(??_sqrtf+3)^0,f,c
  7148   00263E  3230               	rrcf	(??_sqrtf+2)^0,f,c
  7149   002640  322F               	rrcf	(??_sqrtf+1)^0,f,c
  7150   002642  322E               	rrcf	??_sqrtf^0,f,c
  7151   002644  0E00               	movlw	0
  7152   002646  242E               	addwf	??_sqrtf^0,w,c
  7153   002648  6E4B               	movwf	sqrtf@ix^0,c
  7154   00264A  0E00               	movlw	0
  7155   00264C  202F               	addwfc	(??_sqrtf+1)^0,w,c
  7156   00264E  6E4C               	movwf	(sqrtf@ix+1)^0,c
  7157   002650  0E00               	movlw	0
  7158   002652  2030               	addwfc	(??_sqrtf+2)^0,w,c
  7159   002654  6E4D               	movwf	(sqrtf@ix+2)^0,c
  7160   002656  0E3F               	movlw	63
  7161   002658  2031               	addwfc	(??_sqrtf+3)^0,w,c
  7162   00265A  6E4E               	movwf	(sqrtf@ix+3)^0,c
  7163   00265C  C043  F02E         	movff	sqrtf@m,??_sqrtf
  7164   002660  C044  F02F         	movff	sqrtf@m+1,??_sqrtf+1
  7165   002664  C045  F030         	movff	sqrtf@m+2,??_sqrtf+2
  7166   002668  C046  F031         	movff	sqrtf@m+3,??_sqrtf+3
  7167   00266C  0E17               	movlw	23
  7168   00266E                     u7045:
  7169   00266E  90D8               	bcf	status,0,c
  7170   002670  362E               	rlcf	??_sqrtf^0,f,c
  7171   002672  362F               	rlcf	(??_sqrtf+1)^0,f,c
  7172   002674  3630               	rlcf	(??_sqrtf+2)^0,f,c
  7173   002676  3631               	rlcf	(??_sqrtf+3)^0,f,c
  7174   002678  2EE8               	decfsz	wreg,f,c
  7175   00267A  EF37  F013         	goto	u7045
  7176   00267E  502E               	movf	??_sqrtf^0,w,c
  7177   002680  264B               	addwf	sqrtf@ix^0,f,c
  7178   002682  502F               	movf	(??_sqrtf+1)^0,w,c
  7179   002684  224C               	addwfc	(sqrtf@ix+1)^0,f,c
  7180   002686  5030               	movf	(??_sqrtf+2)^0,w,c
  7181   002688  224D               	addwfc	(sqrtf@ix+2)^0,f,c
  7182   00268A  5031               	movf	(??_sqrtf+3)^0,w,c
  7183   00268C  224E               	addwfc	(sqrtf@ix+3)^0,f,c
  7184   00268E  EFA3  F011         	goto	l6157
  7185   002692                     l1326:
  7186   002692  0012               	return		;funcret
  7187   002694                     __end_of_sqrtf:
  7188                           	callstack 0
  7189                           
  7190 ;; *************** function _atanf *****************
  7191 ;; Defined at:
  7192 ;;		line 40 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atanf.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;  x               4   90[COMRAM] float 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;  ix              4   51[BANK0 ] struct .
  7197 ;;  z               4   47[BANK0 ] float 
  7198 ;;  w               4   42[BANK0 ] float 
  7199 ;;  s2              4   29[BANK0 ] float 
  7200 ;;  s1              4   25[BANK0 ] float 
  7201 ;;  id              1   46[BANK0 ] char 
  7202 ;;  sign            1   41[BANK0 ] _Bool 
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  4   90[COMRAM] float 
  7205 ;; Registers used:
  7206 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7212 ;;      Params:         4       0       0       0       0       0       0       0       0
  7213 ;;      Locals:         0      42       0       0       0       0       0       0       0
  7214 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7215 ;;      Totals:         5      42       0       0       0       0       0       0       0
  7216 ;;Total ram usage:       47 bytes
  7217 ;; Hardware stack levels used: 1
  7218 ;; Hardware stack levels required when called: 2
  7219 ;; This function calls:
  7220 ;;		___fladd
  7221 ;;		___fldiv
  7222 ;;		___flmul
  7223 ;;		___flneg
  7224 ;;		___flsub
  7225 ;;		___fpclassifyf
  7226 ;;		_fabsf
  7227 ;; This function is called by:
  7228 ;;		_WheelMPU6050_Read
  7229 ;;		_ArmMPU6050_Read
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text28
  7234   00125C                     __ptext28:
  7235                           	callstack 0
  7236   00125C                     _atanf:
  7237                           	callstack 26
  7238   00125C  C05B  F093         	movff	atanf@x,atanf@ix
  7239   001260  C05C  F094         	movff	atanf@x+1,atanf@ix+1
  7240   001264  C05D  F095         	movff	atanf@x+2,atanf@ix+2
  7241   001268  C05E  F096         	movff	atanf@x+3,atanf@ix+3
  7242   00126C  0100               	movlb	0	; () banked
  7243   00126E  BF96               	btfsc	(atanf@ix+3)& (0+255),7,b
  7244   001270  EF3C  F009         	goto	u7051
  7245   001274  EF3F  F009         	goto	u7050
  7246   001278                     u7051:
  7247   001278  0E01               	movlw	1
  7248   00127A  EF40  F009         	goto	u7060
  7249   00127E                     u7050:
  7250   00127E  0E00               	movlw	0
  7251   001280                     u7060:
  7252   001280  6F89               	movwf	atanf@sign& (0+255),b
  7253   001282                     
  7254                           ; BSR set to: 0
  7255   001282  9F96               	bcf	(atanf@ix+3)& (0+255),7,b
  7256   001284                     
  7257                           ; BSR set to: 0
  7258   001284  0E80               	movlw	128
  7259   001286  5D95               	subwf	(atanf@ix+2)& (0+255),w,b
  7260   001288  0E4C               	movlw	76
  7261   00128A  5996               	subwfb	(atanf@ix+3)& (0+255),w,b
  7262   00128C  A0D8               	btfss	status,0,c
  7263   00128E  EF4B  F009         	goto	u7071
  7264   001292  EF4D  F009         	goto	u7070
  7265   001296                     u7071:
  7266   001296  EFB3  F009         	goto	l6235
  7267   00129A                     u7070:
  7268   00129A                     
  7269                           ; BSR set to: 0
  7270   00129A  C05B  F001         	movff	atanf@x,___fpclassifyf@x
  7271   00129E  C05C  F002         	movff	atanf@x+1,___fpclassifyf@x+1
  7272   0012A2  C05D  F003         	movff	atanf@x+2,___fpclassifyf@x+2
  7273   0012A6  C05E  F004         	movff	atanf@x+3,___fpclassifyf@x+3
  7274   0012AA  EC9D  F023         	call	___fpclassifyf	;wreg free
  7275   0012AE  5001               	movf	?___fpclassifyf^0,w,c
  7276   0012B0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7277   0012B2  A4D8               	btfss	status,2,c
  7278   0012B4  EF5E  F009         	goto	u7081
  7279   0012B8  EF60  F009         	goto	u7080
  7280   0012BC                     u7081:
  7281   0012BC  EF6A  F009         	goto	l6225
  7282   0012C0                     u7080:
  7283   0012C0                     l6223:
  7284   0012C0  C05B  F05B         	movff	atanf@x,?_atanf
  7285   0012C4  C05C  F05C         	movff	atanf@x+1,?_atanf+1
  7286   0012C8  C05D  F05D         	movff	atanf@x+2,?_atanf+2
  7287   0012CC  C05E  F05E         	movff	atanf@x+3,?_atanf+3
  7288   0012D0  EFE5  F00C         	goto	l1085
  7289   0012D4                     l6225:
  7290   0012D4  0E1D               	movlw	low (_atanhi+12)
  7291   0012D6  6EF6               	movwf	tblptrl,c
  7292   0012D8                     	if	1	;There is more than 1 active tblptr byte
  7293   0012D8  0E08               	movlw	high __smallconst
  7294   0012DA  6EF7               	movwf	tblptrh,c
  7295   0012DC                     	endif
  7296   0012DC                     	if	0	;tblptru may be non-zero
  7297   0012DC                     	endif
  7298   0012DC                     	if	0	;tblptru may be non-zero
  7299   0012DC                     	endif
  7300   0012DC  0009               	tblrd		*+
  7301   0012DE  CFF5 F01A          	movff	tablat,___fladd@b
  7302   0012E2  0009               	tblrd		*+
  7303   0012E4  CFF5 F01B          	movff	tablat,___fladd@b+1
  7304   0012E8  0009               	tblrd		*+
  7305   0012EA  CFF5 F01C          	movff	tablat,___fladd@b+2
  7306   0012EE  000A               	tblrd		*-
  7307   0012F0  CFF5 F01D          	movff	tablat,___fladd@b+3
  7308   0012F4  0E00               	movlw	0
  7309   0012F6  6E1E               	movwf	___fladd@a^0,c
  7310   0012F8  0E00               	movlw	0
  7311   0012FA  6E1F               	movwf	(___fladd@a+1)^0,c
  7312   0012FC  0E80               	movlw	128
  7313   0012FE  6E20               	movwf	(___fladd@a+2)^0,c
  7314   001300  0E03               	movlw	3
  7315   001302  6E21               	movwf	(___fladd@a+3)^0,c
  7316   001304  ECE6  F00C         	call	___fladd	;wreg free
  7317   001308  C01A  F08F         	movff	?___fladd,atanf@z
  7318   00130C  C01B  F090         	movff	?___fladd+1,atanf@z+1
  7319   001310  C01C  F091         	movff	?___fladd+2,atanf@z+2
  7320   001314  C01D  F092         	movff	?___fladd+3,atanf@z+3
  7321   001318  0100               	movlb	0	; () banked
  7322   00131A  5189               	movf	atanf@sign& (0+255),w,b
  7323   00131C  A4D8               	btfss	status,2,c
  7324   00131E  EF93  F009         	goto	u7091
  7325   001322  EF95  F009         	goto	u7090
  7326   001326                     u7091:
  7327   001326  EF9F  F009         	goto	l6231
  7328   00132A                     u7090:
  7329   00132A                     l6229:
  7330                           
  7331                           ; BSR set to: 0
  7332   00132A  C08F  F05B         	movff	atanf@z,?_atanf
  7333   00132E  C090  F05C         	movff	atanf@z+1,?_atanf+1
  7334   001332  C091  F05D         	movff	atanf@z+2,?_atanf+2
  7335   001336  C092  F05E         	movff	atanf@z+3,?_atanf+3
  7336   00133A  EFE5  F00C         	goto	l1085
  7337   00133E                     l6231:
  7338                           
  7339                           ; BSR set to: 0
  7340   00133E  C08F  F001         	movff	atanf@z,___flneg@f1
  7341   001342  C090  F002         	movff	atanf@z+1,___flneg@f1+1
  7342   001346  C091  F003         	movff	atanf@z+2,___flneg@f1+2
  7343   00134A  C092  F004         	movff	atanf@z+3,___flneg@f1+3
  7344   00134E  EC40  F028         	call	___flneg	;wreg free
  7345   001352  C001  F05B         	movff	?___flneg,?_atanf
  7346   001356  C002  F05C         	movff	?___flneg+1,?_atanf+1
  7347   00135A  C003  F05D         	movff	?___flneg+2,?_atanf+2
  7348   00135E  C004  F05E         	movff	?___flneg+3,?_atanf+3
  7349   001362  EFE5  F00C         	goto	l1085
  7350   001366                     l6235:
  7351                           
  7352                           ; BSR set to: 0
  7353   001366  0EE0               	movlw	224
  7354   001368  5D95               	subwf	(atanf@ix+2)& (0+255),w,b
  7355   00136A  0E3E               	movlw	62
  7356   00136C  5996               	subwfb	(atanf@ix+3)& (0+255),w,b
  7357   00136E  B0D8               	btfsc	status,0,c
  7358   001370  EFBC  F009         	goto	u7101
  7359   001374  EFBE  F009         	goto	u7100
  7360   001378                     u7101:
  7361   001378  EFCE  F009         	goto	l6241
  7362   00137C                     u7100:
  7363   00137C                     
  7364                           ; BSR set to: 0
  7365   00137C  0E80               	movlw	128
  7366   00137E  5D95               	subwf	(atanf@ix+2)& (0+255),w,b
  7367   001380  0E39               	movlw	57
  7368   001382  5996               	subwfb	(atanf@ix+3)& (0+255),w,b
  7369   001384  B0D8               	btfsc	status,0,c
  7370   001386  EFC7  F009         	goto	u7111
  7371   00138A  EFC9  F009         	goto	u7110
  7372   00138E                     u7111:
  7373   00138E  EFCB  F009         	goto	l1091
  7374   001392                     u7110:
  7375   001392  EF60  F009         	goto	l6223
  7376   001396                     l1091:
  7377                           
  7378                           ; BSR set to: 0
  7379   001396  698E               	setf	atanf@id& (0+255),b
  7380   001398  EF08  F00B         	goto	l6265
  7381   00139C                     l6241:
  7382                           
  7383                           ; BSR set to: 0
  7384   00139C  C05B  F001         	movff	atanf@x,fabsf@x
  7385   0013A0  C05C  F002         	movff	atanf@x+1,fabsf@x+1
  7386   0013A4  C05D  F003         	movff	atanf@x+2,fabsf@x+2
  7387   0013A8  C05E  F004         	movff	atanf@x+3,fabsf@x+3
  7388   0013AC  EC90  F028         	call	_fabsf	;wreg free
  7389   0013B0  C001  F05B         	movff	?_fabsf,atanf@x
  7390   0013B4  C002  F05C         	movff	?_fabsf+1,atanf@x+1
  7391   0013B8  C003  F05D         	movff	?_fabsf+2,atanf@x+2
  7392   0013BC  C004  F05E         	movff	?_fabsf+3,atanf@x+3
  7393   0013C0  0E98               	movlw	152
  7394   0013C2  0100               	movlb	0	; () banked
  7395   0013C4  5D95               	subwf	(atanf@ix+2)& (0+255),w,b
  7396   0013C6  0E3F               	movlw	63
  7397   0013C8  5996               	subwfb	(atanf@ix+3)& (0+255),w,b
  7398   0013CA  B0D8               	btfsc	status,0,c
  7399   0013CC  EFEA  F009         	goto	u7121
  7400   0013D0  EFEC  F009         	goto	u7120
  7401   0013D4                     u7121:
  7402   0013D4  EF8D  F00A         	goto	l6255
  7403   0013D8                     u7120:
  7404   0013D8                     
  7405                           ; BSR set to: 0
  7406   0013D8  0E30               	movlw	48
  7407   0013DA  5D95               	subwf	(atanf@ix+2)& (0+255),w,b
  7408   0013DC  0E3F               	movlw	63
  7409   0013DE  5996               	subwfb	(atanf@ix+3)& (0+255),w,b
  7410   0013E0  B0D8               	btfsc	status,0,c
  7411   0013E2  EFF5  F009         	goto	u7131
  7412   0013E6  EFF7  F009         	goto	u7130
  7413   0013EA                     u7131:
  7414   0013EA  EF4B  F00A         	goto	l6251
  7415   0013EE                     u7130:
  7416   0013EE                     
  7417                           ; BSR set to: 0
  7418   0013EE  0E00               	movlw	0
  7419   0013F0  6F8E               	movwf	atanf@id& (0+255),b
  7420   0013F2                     
  7421                           ; BSR set to: 0
  7422   0013F2  0E00               	movlw	0
  7423   0013F4  6E1E               	movwf	___fladd@a^0,c
  7424   0013F6  0E00               	movlw	0
  7425   0013F8  6E1F               	movwf	(___fladd@a+1)^0,c
  7426   0013FA  0E80               	movlw	128
  7427   0013FC  6E20               	movwf	(___fladd@a+2)^0,c
  7428   0013FE  0EBF               	movlw	191
  7429   001400  6E21               	movwf	(___fladd@a+3)^0,c
  7430   001402  0E00               	movlw	0
  7431   001404  6E05               	movwf	___flmul@a^0,c
  7432   001406  0E00               	movlw	0
  7433   001408  6E06               	movwf	(___flmul@a+1)^0,c
  7434   00140A  0E00               	movlw	0
  7435   00140C  6E07               	movwf	(___flmul@a+2)^0,c
  7436   00140E  0E40               	movlw	64
  7437   001410  6E08               	movwf	(___flmul@a+3)^0,c
  7438   001412  C05B  F001         	movff	atanf@x,___flmul@b
  7439   001416  C05C  F002         	movff	atanf@x+1,___flmul@b+1
  7440   00141A  C05D  F003         	movff	atanf@x+2,___flmul@b+2
  7441   00141E  C05E  F004         	movff	atanf@x+3,___flmul@b+3
  7442   001422  EC46  F00F         	call	___flmul	;wreg free
  7443   001426  C001  F01A         	movff	?___flmul,___fladd@b
  7444   00142A  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  7445   00142E  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  7446   001432  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  7447   001436  ECE6  F00C         	call	___fladd	;wreg free
  7448   00143A  C01A  F04F         	movff	?___fladd,___fldiv@b
  7449   00143E  C01B  F050         	movff	?___fladd+1,___fldiv@b+1
  7450   001442  C01C  F051         	movff	?___fladd+2,___fldiv@b+2
  7451   001446  C01D  F052         	movff	?___fladd+3,___fldiv@b+3
  7452   00144A  0E00               	movlw	0
  7453   00144C  6E1E               	movwf	___fladd@a^0,c
  7454   00144E  0E00               	movlw	0
  7455   001450  6E1F               	movwf	(___fladd@a+1)^0,c
  7456   001452  0E00               	movlw	0
  7457   001454  6E20               	movwf	(___fladd@a+2)^0,c
  7458   001456  0E40               	movlw	64
  7459   001458  6E21               	movwf	(___fladd@a+3)^0,c
  7460   00145A  C05B  F01A         	movff	atanf@x,___fladd@b
  7461   00145E  C05C  F01B         	movff	atanf@x+1,___fladd@b+1
  7462   001462  C05D  F01C         	movff	atanf@x+2,___fladd@b+2
  7463   001466  C05E  F01D         	movff	atanf@x+3,___fladd@b+3
  7464   00146A  ECE6  F00C         	call	___fladd	;wreg free
  7465   00146E  C01A  F053         	movff	?___fladd,___fldiv@a
  7466   001472  C01B  F054         	movff	?___fladd+1,___fldiv@a+1
  7467   001476  C01C  F055         	movff	?___fladd+2,___fldiv@a+2
  7468   00147A  C01D  F056         	movff	?___fladd+3,___fldiv@a+3
  7469   00147E  EC4A  F013         	call	___fldiv	;wreg free
  7470   001482  C04F  F05B         	movff	?___fldiv,atanf@x
  7471   001486  C050  F05C         	movff	?___fldiv+1,atanf@x+1
  7472   00148A  C051  F05D         	movff	?___fldiv+2,atanf@x+2
  7473   00148E  C052  F05E         	movff	?___fldiv+3,atanf@x+3
  7474   001492  EF08  F00B         	goto	l6265
  7475   001496                     l6251:
  7476                           
  7477                           ; BSR set to: 0
  7478   001496  0E01               	movlw	1
  7479   001498  6F8E               	movwf	atanf@id& (0+255),b
  7480   00149A                     
  7481                           ; BSR set to: 0
  7482   00149A  0E00               	movlw	0
  7483   00149C  6E1E               	movwf	___fladd@a^0,c
  7484   00149E  0E00               	movlw	0
  7485   0014A0  6E1F               	movwf	(___fladd@a+1)^0,c
  7486   0014A2  0E80               	movlw	128
  7487   0014A4  6E20               	movwf	(___fladd@a+2)^0,c
  7488   0014A6  0EBF               	movlw	191
  7489   0014A8  6E21               	movwf	(___fladd@a+3)^0,c
  7490   0014AA  C05B  F01A         	movff	atanf@x,___fladd@b
  7491   0014AE  C05C  F01B         	movff	atanf@x+1,___fladd@b+1
  7492   0014B2  C05D  F01C         	movff	atanf@x+2,___fladd@b+2
  7493   0014B6  C05E  F01D         	movff	atanf@x+3,___fladd@b+3
  7494   0014BA  ECE6  F00C         	call	___fladd	;wreg free
  7495   0014BE  C01A  F04F         	movff	?___fladd,___fldiv@b
  7496   0014C2  C01B  F050         	movff	?___fladd+1,___fldiv@b+1
  7497   0014C6  C01C  F051         	movff	?___fladd+2,___fldiv@b+2
  7498   0014CA  C01D  F052         	movff	?___fladd+3,___fldiv@b+3
  7499   0014CE  0E00               	movlw	0
  7500   0014D0  6E1E               	movwf	___fladd@a^0,c
  7501   0014D2  0E00               	movlw	0
  7502   0014D4  6E1F               	movwf	(___fladd@a+1)^0,c
  7503   0014D6  0E80               	movlw	128
  7504   0014D8  6E20               	movwf	(___fladd@a+2)^0,c
  7505   0014DA  0E3F               	movlw	63
  7506   0014DC  6E21               	movwf	(___fladd@a+3)^0,c
  7507   0014DE  C05B  F01A         	movff	atanf@x,___fladd@b
  7508   0014E2  C05C  F01B         	movff	atanf@x+1,___fladd@b+1
  7509   0014E6  C05D  F01C         	movff	atanf@x+2,___fladd@b+2
  7510   0014EA  C05E  F01D         	movff	atanf@x+3,___fladd@b+3
  7511   0014EE  ECE6  F00C         	call	___fladd	;wreg free
  7512   0014F2  C01A  F053         	movff	?___fladd,___fldiv@a
  7513   0014F6  C01B  F054         	movff	?___fladd+1,___fldiv@a+1
  7514   0014FA  C01C  F055         	movff	?___fladd+2,___fldiv@a+2
  7515   0014FE  C01D  F056         	movff	?___fladd+3,___fldiv@a+3
  7516   001502  EC4A  F013         	call	___fldiv	;wreg free
  7517   001506  C04F  F05B         	movff	?___fldiv,atanf@x
  7518   00150A  C050  F05C         	movff	?___fldiv+1,atanf@x+1
  7519   00150E  C051  F05D         	movff	?___fldiv+2,atanf@x+2
  7520   001512  C052  F05E         	movff	?___fldiv+3,atanf@x+3
  7521   001516  EF08  F00B         	goto	l6265
  7522   00151A                     l6255:
  7523                           
  7524                           ; BSR set to: 0
  7525   00151A  0E1C               	movlw	28
  7526   00151C  5D95               	subwf	(atanf@ix+2)& (0+255),w,b
  7527   00151E  0E40               	movlw	64
  7528   001520  5996               	subwfb	(atanf@ix+3)& (0+255),w,b
  7529   001522  B0D8               	btfsc	status,0,c
  7530   001524  EF96  F00A         	goto	u7141
  7531   001528  EF98  F00A         	goto	u7140
  7532   00152C                     u7141:
  7533   00152C  EFEC  F00A         	goto	l6261
  7534   001530                     u7140:
  7535   001530                     
  7536                           ; BSR set to: 0
  7537   001530  0E02               	movlw	2
  7538   001532  6F8E               	movwf	atanf@id& (0+255),b
  7539   001534                     
  7540                           ; BSR set to: 0
  7541   001534  0E00               	movlw	0
  7542   001536  6E1E               	movwf	___fladd@a^0,c
  7543   001538  0E00               	movlw	0
  7544   00153A  6E1F               	movwf	(___fladd@a+1)^0,c
  7545   00153C  0EC0               	movlw	192
  7546   00153E  6E20               	movwf	(___fladd@a+2)^0,c
  7547   001540  0EBF               	movlw	191
  7548   001542  6E21               	movwf	(___fladd@a+3)^0,c
  7549   001544  C05B  F01A         	movff	atanf@x,___fladd@b
  7550   001548  C05C  F01B         	movff	atanf@x+1,___fladd@b+1
  7551   00154C  C05D  F01C         	movff	atanf@x+2,___fladd@b+2
  7552   001550  C05E  F01D         	movff	atanf@x+3,___fladd@b+3
  7553   001554  ECE6  F00C         	call	___fladd	;wreg free
  7554   001558  C01A  F04F         	movff	?___fladd,___fldiv@b
  7555   00155C  C01B  F050         	movff	?___fladd+1,___fldiv@b+1
  7556   001560  C01C  F051         	movff	?___fladd+2,___fldiv@b+2
  7557   001564  C01D  F052         	movff	?___fladd+3,___fldiv@b+3
  7558   001568  0E00               	movlw	0
  7559   00156A  6E1E               	movwf	___fladd@a^0,c
  7560   00156C  0E00               	movlw	0
  7561   00156E  6E1F               	movwf	(___fladd@a+1)^0,c
  7562   001570  0E80               	movlw	128
  7563   001572  6E20               	movwf	(___fladd@a+2)^0,c
  7564   001574  0E3F               	movlw	63
  7565   001576  6E21               	movwf	(___fladd@a+3)^0,c
  7566   001578  0E00               	movlw	0
  7567   00157A  6E05               	movwf	___flmul@a^0,c
  7568   00157C  0E00               	movlw	0
  7569   00157E  6E06               	movwf	(___flmul@a+1)^0,c
  7570   001580  0EC0               	movlw	192
  7571   001582  6E07               	movwf	(___flmul@a+2)^0,c
  7572   001584  0E3F               	movlw	63
  7573   001586  6E08               	movwf	(___flmul@a+3)^0,c
  7574   001588  C05B  F001         	movff	atanf@x,___flmul@b
  7575   00158C  C05C  F002         	movff	atanf@x+1,___flmul@b+1
  7576   001590  C05D  F003         	movff	atanf@x+2,___flmul@b+2
  7577   001594  C05E  F004         	movff	atanf@x+3,___flmul@b+3
  7578   001598  EC46  F00F         	call	___flmul	;wreg free
  7579   00159C  C001  F01A         	movff	?___flmul,___fladd@b
  7580   0015A0  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  7581   0015A4  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  7582   0015A8  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  7583   0015AC  ECE6  F00C         	call	___fladd	;wreg free
  7584   0015B0  C01A  F053         	movff	?___fladd,___fldiv@a
  7585   0015B4  C01B  F054         	movff	?___fladd+1,___fldiv@a+1
  7586   0015B8  C01C  F055         	movff	?___fladd+2,___fldiv@a+2
  7587   0015BC  C01D  F056         	movff	?___fladd+3,___fldiv@a+3
  7588   0015C0  EC4A  F013         	call	___fldiv	;wreg free
  7589   0015C4  C04F  F05B         	movff	?___fldiv,atanf@x
  7590   0015C8  C050  F05C         	movff	?___fldiv+1,atanf@x+1
  7591   0015CC  C051  F05D         	movff	?___fldiv+2,atanf@x+2
  7592   0015D0  C052  F05E         	movff	?___fldiv+3,atanf@x+3
  7593   0015D4  EF08  F00B         	goto	l6265
  7594   0015D8                     l6261:
  7595                           
  7596                           ; BSR set to: 0
  7597   0015D8  0E03               	movlw	3
  7598   0015DA  6F8E               	movwf	atanf@id& (0+255),b
  7599   0015DC                     
  7600                           ; BSR set to: 0
  7601   0015DC  0E00               	movlw	0
  7602   0015DE  6E4F               	movwf	___fldiv@b^0,c
  7603   0015E0  0E00               	movlw	0
  7604   0015E2  6E50               	movwf	(___fldiv@b+1)^0,c
  7605   0015E4  0E80               	movlw	128
  7606   0015E6  6E51               	movwf	(___fldiv@b+2)^0,c
  7607   0015E8  0EBF               	movlw	191
  7608   0015EA  6E52               	movwf	(___fldiv@b+3)^0,c
  7609   0015EC  C05B  F053         	movff	atanf@x,___fldiv@a
  7610   0015F0  C05C  F054         	movff	atanf@x+1,___fldiv@a+1
  7611   0015F4  C05D  F055         	movff	atanf@x+2,___fldiv@a+2
  7612   0015F8  C05E  F056         	movff	atanf@x+3,___fldiv@a+3
  7613   0015FC  EC4A  F013         	call	___fldiv	;wreg free
  7614   001600  C04F  F05B         	movff	?___fldiv,atanf@x
  7615   001604  C050  F05C         	movff	?___fldiv+1,atanf@x+1
  7616   001608  C051  F05D         	movff	?___fldiv+2,atanf@x+2
  7617   00160C  C052  F05E         	movff	?___fldiv+3,atanf@x+3
  7618   001610                     l6265:
  7619   001610  C05B  F001         	movff	atanf@x,___flmul@b
  7620   001614  C05C  F002         	movff	atanf@x+1,___flmul@b+1
  7621   001618  C05D  F003         	movff	atanf@x+2,___flmul@b+2
  7622   00161C  C05E  F004         	movff	atanf@x+3,___flmul@b+3
  7623   001620  C05B  F005         	movff	atanf@x,___flmul@a
  7624   001624  C05C  F006         	movff	atanf@x+1,___flmul@a+1
  7625   001628  C05D  F007         	movff	atanf@x+2,___flmul@a+2
  7626   00162C  C05E  F008         	movff	atanf@x+3,___flmul@a+3
  7627   001630  EC46  F00F         	call	___flmul	;wreg free
  7628   001634  C001  F08F         	movff	?___flmul,atanf@z
  7629   001638  C002  F090         	movff	?___flmul+1,atanf@z+1
  7630   00163C  C003  F091         	movff	?___flmul+2,atanf@z+2
  7631   001640  C004  F092         	movff	?___flmul+3,atanf@z+3
  7632   001644  C08F  F001         	movff	atanf@z,___flmul@b
  7633   001648  C090  F002         	movff	atanf@z+1,___flmul@b+1
  7634   00164C  C091  F003         	movff	atanf@z+2,___flmul@b+2
  7635   001650  C092  F004         	movff	atanf@z+3,___flmul@b+3
  7636   001654  C08F  F005         	movff	atanf@z,___flmul@a
  7637   001658  C090  F006         	movff	atanf@z+1,___flmul@a+1
  7638   00165C  C091  F007         	movff	atanf@z+2,___flmul@a+2
  7639   001660  C092  F008         	movff	atanf@z+3,___flmul@a+3
  7640   001664  EC46  F00F         	call	___flmul	;wreg free
  7641   001668  C001  F08A         	movff	?___flmul,atanf@w
  7642   00166C  C002  F08B         	movff	?___flmul+1,atanf@w+1
  7643   001670  C003  F08C         	movff	?___flmul+2,atanf@w+2
  7644   001674  C004  F08D         	movff	?___flmul+3,atanf@w+3
  7645   001678  0E0D               	movlw	13
  7646   00167A  6E1E               	movwf	___fladd@a^0,c
  7647   00167C  0EF5               	movlw	245
  7648   00167E  6E1F               	movwf	(___fladd@a+1)^0,c
  7649   001680  0E11               	movlw	17
  7650   001682  6E20               	movwf	(___fladd@a+2)^0,c
  7651   001684  0E3E               	movlw	62
  7652   001686  6E21               	movwf	(___fladd@a+3)^0,c
  7653   001688  0E25               	movlw	37
  7654   00168A  6E05               	movwf	___flmul@a^0,c
  7655   00168C  0EAC               	movlw	172
  7656   00168E  6E06               	movwf	(___flmul@a+1)^0,c
  7657   001690  0E7C               	movlw	124
  7658   001692  6E07               	movwf	(___flmul@a+2)^0,c
  7659   001694  0E3D               	movlw	61
  7660   001696  6E08               	movwf	(___flmul@a+3)^0,c
  7661   001698  C08A  F001         	movff	atanf@w,___flmul@b
  7662   00169C  C08B  F002         	movff	atanf@w+1,___flmul@b+1
  7663   0016A0  C08C  F003         	movff	atanf@w+2,___flmul@b+2
  7664   0016A4  C08D  F004         	movff	atanf@w+3,___flmul@b+3
  7665   0016A8  EC46  F00F         	call	___flmul	;wreg free
  7666   0016AC  C001  F01A         	movff	?___flmul,___fladd@b
  7667   0016B0  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  7668   0016B4  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  7669   0016B8  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  7670   0016BC  ECE6  F00C         	call	___fladd	;wreg free
  7671   0016C0  C01A  F081         	movff	?___fladd,_atanf$1819
  7672   0016C4  C01B  F082         	movff	?___fladd+1,_atanf$1819+1
  7673   0016C8  C01C  F083         	movff	?___fladd+2,_atanf$1819+2
  7674   0016CC  C01D  F084         	movff	?___fladd+3,_atanf$1819+3
  7675   0016D0  0EA9               	movlw	169
  7676   0016D2  6E1E               	movwf	___fladd@a^0,c
  7677   0016D4  0EAA               	movlw	170
  7678   0016D6  6E1F               	movwf	(___fladd@a+1)^0,c
  7679   0016D8  0EAA               	movlw	170
  7680   0016DA  6E20               	movwf	(___fladd@a+2)^0,c
  7681   0016DC  0E3E               	movlw	62
  7682   0016DE  6E21               	movwf	(___fladd@a+3)^0,c
  7683   0016E0  C08A  F005         	movff	atanf@w,___flmul@a
  7684   0016E4  C08B  F006         	movff	atanf@w+1,___flmul@a+1
  7685   0016E8  C08C  F007         	movff	atanf@w+2,___flmul@a+2
  7686   0016EC  C08D  F008         	movff	atanf@w+3,___flmul@a+3
  7687   0016F0  C081  F001         	movff	_atanf$1819,___flmul@b
  7688   0016F4  C082  F002         	movff	_atanf$1819+1,___flmul@b+1
  7689   0016F8  C083  F003         	movff	_atanf$1819+2,___flmul@b+2
  7690   0016FC  C084  F004         	movff	_atanf$1819+3,___flmul@b+3
  7691   001700  EC46  F00F         	call	___flmul	;wreg free
  7692   001704  C001  F01A         	movff	?___flmul,___fladd@b
  7693   001708  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  7694   00170C  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  7695   001710  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  7696   001714  ECE6  F00C         	call	___fladd	;wreg free
  7697   001718  C01A  F06D         	movff	?___fladd,_atanf$1820
  7698   00171C  C01B  F06E         	movff	?___fladd+1,_atanf$1820+1
  7699   001720  C01C  F06F         	movff	?___fladd+2,_atanf$1820+2
  7700   001724  C01D  F070         	movff	?___fladd+3,_atanf$1820+3
  7701   001728  C06D  F001         	movff	_atanf$1820,___flmul@b
  7702   00172C  C06E  F002         	movff	_atanf$1820+1,___flmul@b+1
  7703   001730  C06F  F003         	movff	_atanf$1820+2,___flmul@b+2
  7704   001734  C070  F004         	movff	_atanf$1820+3,___flmul@b+3
  7705   001738  C08F  F005         	movff	atanf@z,___flmul@a
  7706   00173C  C090  F006         	movff	atanf@z+1,___flmul@a+1
  7707   001740  C091  F007         	movff	atanf@z+2,___flmul@a+2
  7708   001744  C092  F008         	movff	atanf@z+3,___flmul@a+3
  7709   001748  EC46  F00F         	call	___flmul	;wreg free
  7710   00174C  C001  F079         	movff	?___flmul,atanf@s1
  7711   001750  C002  F07A         	movff	?___flmul+1,atanf@s1+1
  7712   001754  C003  F07B         	movff	?___flmul+2,atanf@s1+2
  7713   001758  C004  F07C         	movff	?___flmul+3,atanf@s1+3
  7714   00175C  0E98               	movlw	152
  7715   00175E  6E1E               	movwf	___fladd@a^0,c
  7716   001760  0ECA               	movlw	202
  7717   001762  6E1F               	movwf	(___fladd@a+1)^0,c
  7718   001764  0E4C               	movlw	76
  7719   001766  6E20               	movwf	(___fladd@a+2)^0,c
  7720   001768  0EBE               	movlw	190
  7721   00176A  6E21               	movwf	(___fladd@a+3)^0,c
  7722   00176C  0E47               	movlw	71
  7723   00176E  6E05               	movwf	___flmul@a^0,c
  7724   001770  0E12               	movlw	18
  7725   001772  6E06               	movwf	(___flmul@a+1)^0,c
  7726   001774  0EDA               	movlw	218
  7727   001776  6E07               	movwf	(___flmul@a+2)^0,c
  7728   001778  0EBD               	movlw	189
  7729   00177A  6E08               	movwf	(___flmul@a+3)^0,c
  7730   00177C  C08A  F001         	movff	atanf@w,___flmul@b
  7731   001780  C08B  F002         	movff	atanf@w+1,___flmul@b+1
  7732   001784  C08C  F003         	movff	atanf@w+2,___flmul@b+2
  7733   001788  C08D  F004         	movff	atanf@w+3,___flmul@b+3
  7734   00178C  EC46  F00F         	call	___flmul	;wreg free
  7735   001790  C001  F01A         	movff	?___flmul,___fladd@b
  7736   001794  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  7737   001798  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  7738   00179C  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  7739   0017A0  ECE6  F00C         	call	___fladd	;wreg free
  7740   0017A4  C01A  F081         	movff	?___fladd,_atanf$1819
  7741   0017A8  C01B  F082         	movff	?___fladd+1,_atanf$1819+1
  7742   0017AC  C01C  F083         	movff	?___fladd+2,_atanf$1819+2
  7743   0017B0  C01D  F084         	movff	?___fladd+3,_atanf$1819+3
  7744   0017B4  C081  F001         	movff	_atanf$1819,___flmul@b
  7745   0017B8  C082  F002         	movff	_atanf$1819+1,___flmul@b+1
  7746   0017BC  C083  F003         	movff	_atanf$1819+2,___flmul@b+2
  7747   0017C0  C084  F004         	movff	_atanf$1819+3,___flmul@b+3
  7748   0017C4  C08A  F005         	movff	atanf@w,___flmul@a
  7749   0017C8  C08B  F006         	movff	atanf@w+1,___flmul@a+1
  7750   0017CC  C08C  F007         	movff	atanf@w+2,___flmul@a+2
  7751   0017D0  C08D  F008         	movff	atanf@w+3,___flmul@a+3
  7752   0017D4  EC46  F00F         	call	___flmul	;wreg free
  7753   0017D8  C001  F07D         	movff	?___flmul,atanf@s2
  7754   0017DC  C002  F07E         	movff	?___flmul+1,atanf@s2+1
  7755   0017E0  C003  F07F         	movff	?___flmul+2,atanf@s2+2
  7756   0017E4  C004  F080         	movff	?___flmul+3,atanf@s2+3
  7757   0017E8  0100               	movlb	0	; () banked
  7758   0017EA  BF8E               	btfsc	atanf@id& (0+255),7,b
  7759   0017EC  EFFC  F00B         	goto	u7150
  7760   0017F0  EFFA  F00B         	goto	u7151
  7761   0017F4                     u7151:
  7762   0017F4  EF44  F00C         	goto	l6287
  7763   0017F8                     u7150:
  7764   0017F8                     
  7765                           ; BSR set to: 0
  7766   0017F8  C05B  F005         	movff	atanf@x,___flmul@a
  7767   0017FC  C05C  F006         	movff	atanf@x+1,___flmul@a+1
  7768   001800  C05D  F007         	movff	atanf@x+2,___flmul@a+2
  7769   001804  C05E  F008         	movff	atanf@x+3,___flmul@a+3
  7770   001808  C07D  F01E         	movff	atanf@s2,___fladd@a
  7771   00180C  C07E  F01F         	movff	atanf@s2+1,___fladd@a+1
  7772   001810  C07F  F020         	movff	atanf@s2+2,___fladd@a+2
  7773   001814  C080  F021         	movff	atanf@s2+3,___fladd@a+3
  7774   001818  C079  F01A         	movff	atanf@s1,___fladd@b
  7775   00181C  C07A  F01B         	movff	atanf@s1+1,___fladd@b+1
  7776   001820  C07B  F01C         	movff	atanf@s1+2,___fladd@b+2
  7777   001824  C07C  F01D         	movff	atanf@s1+3,___fladd@b+3
  7778   001828  ECE6  F00C         	call	___fladd	;wreg free
  7779   00182C  C01A  F001         	movff	?___fladd,___flmul@b
  7780   001830  C01B  F002         	movff	?___fladd+1,___flmul@b+1
  7781   001834  C01C  F003         	movff	?___fladd+2,___flmul@b+2
  7782   001838  C01D  F004         	movff	?___fladd+3,___flmul@b+3
  7783   00183C  EC46  F00F         	call	___flmul	;wreg free
  7784   001840  C001  F085         	movff	?___flmul,_atanf$1821
  7785   001844  C002  F086         	movff	?___flmul+1,_atanf$1821+1
  7786   001848  C003  F087         	movff	?___flmul+2,_atanf$1821+2
  7787   00184C  C004  F088         	movff	?___flmul+3,_atanf$1821+3
  7788   001850  C05B  F02A         	movff	atanf@x,___flsub@b
  7789   001854  C05C  F02B         	movff	atanf@x+1,___flsub@b+1
  7790   001858  C05D  F02C         	movff	atanf@x+2,___flsub@b+2
  7791   00185C  C05E  F02D         	movff	atanf@x+3,___flsub@b+3
  7792   001860  C085  F02E         	movff	_atanf$1821,___flsub@a
  7793   001864  C086  F02F         	movff	_atanf$1821+1,___flsub@a+1
  7794   001868  C087  F030         	movff	_atanf$1821+2,___flsub@a+2
  7795   00186C  C088  F031         	movff	_atanf$1821+3,___flsub@a+3
  7796   001870  ECBE  F027         	call	___flsub	;wreg free
  7797   001874  C02A  F05B         	movff	?___flsub,?_atanf
  7798   001878  C02B  F05C         	movff	?___flsub+1,?_atanf+1
  7799   00187C  C02C  F05D         	movff	?___flsub+2,?_atanf+2
  7800   001880  C02D  F05E         	movff	?___flsub+3,?_atanf+3
  7801   001884  EFE5  F00C         	goto	l1085
  7802   001888                     l6287:
  7803                           
  7804                           ; BSR set to: 0
  7805   001888  C05B  F005         	movff	atanf@x,___flmul@a
  7806   00188C  C05C  F006         	movff	atanf@x+1,___flmul@a+1
  7807   001890  C05D  F007         	movff	atanf@x+2,___flmul@a+2
  7808   001894  C05E  F008         	movff	atanf@x+3,___flmul@a+3
  7809   001898  C07D  F01E         	movff	atanf@s2,___fladd@a
  7810   00189C  C07E  F01F         	movff	atanf@s2+1,___fladd@a+1
  7811   0018A0  C07F  F020         	movff	atanf@s2+2,___fladd@a+2
  7812   0018A4  C080  F021         	movff	atanf@s2+3,___fladd@a+3
  7813   0018A8  C079  F01A         	movff	atanf@s1,___fladd@b
  7814   0018AC  C07A  F01B         	movff	atanf@s1+1,___fladd@b+1
  7815   0018B0  C07B  F01C         	movff	atanf@s1+2,___fladd@b+2
  7816   0018B4  C07C  F01D         	movff	atanf@s1+3,___fladd@b+3
  7817   0018B8  ECE6  F00C         	call	___fladd	;wreg free
  7818   0018BC  C01A  F001         	movff	?___fladd,___flmul@b
  7819   0018C0  C01B  F002         	movff	?___fladd+1,___flmul@b+1
  7820   0018C4  C01C  F003         	movff	?___fladd+2,___flmul@b+2
  7821   0018C8  C01D  F004         	movff	?___fladd+3,___flmul@b+3
  7822   0018CC  EC46  F00F         	call	___flmul	;wreg free
  7823   0018D0  C001  F085         	movff	?___flmul,_atanf$1821
  7824   0018D4  C002  F086         	movff	?___flmul+1,_atanf$1821+1
  7825   0018D8  C003  F087         	movff	?___flmul+2,_atanf$1821+2
  7826   0018DC  C004  F088         	movff	?___flmul+3,_atanf$1821+3
  7827   0018E0  0100               	movlb	0	; () banked
  7828   0018E2  518E               	movf	atanf@id& (0+255),w,b
  7829   0018E4  0D04               	mullw	4
  7830   0018E6  50F3               	movf	243,w,c
  7831   0018E8  0F01               	addlw	low _atanlo
  7832   0018EA  6E5F               	movwf	??_atanf^0,c
  7833   0018EC  C05F  FFF6         	movff	??_atanf,tblptrl
  7834   0018F0                     	if	1	;There is more than 1 active tblptr byte
  7835   0018F0  0E08               	movlw	high __smallconst
  7836   0018F2  6EF7               	movwf	tblptrh,c
  7837   0018F4                     	endif
  7838   0018F4                     	if	0	;tblptru may be non-zero
  7839   0018F4                     	endif
  7840   0018F4                     	if	0	;tblptru may be non-zero
  7841   0018F4                     	endif
  7842   0018F4  0009               	tblrd		*+
  7843   0018F6  CFF5 F02E          	movff	tablat,___flsub@a
  7844   0018FA  0009               	tblrd		*+
  7845   0018FC  CFF5 F02F          	movff	tablat,___flsub@a+1
  7846   001900  0009               	tblrd		*+
  7847   001902  CFF5 F030          	movff	tablat,___flsub@a+2
  7848   001906  000A               	tblrd		*-
  7849   001908  CFF5 F031          	movff	tablat,___flsub@a+3
  7850   00190C  C085  F02A         	movff	_atanf$1821,___flsub@b
  7851   001910  C086  F02B         	movff	_atanf$1821+1,___flsub@b+1
  7852   001914  C087  F02C         	movff	_atanf$1821+2,___flsub@b+2
  7853   001918  C088  F02D         	movff	_atanf$1821+3,___flsub@b+3
  7854   00191C  ECBE  F027         	call	___flsub	;wreg free
  7855   001920  C02A  F071         	movff	?___flsub,_atanf$1822
  7856   001924  C02B  F072         	movff	?___flsub+1,_atanf$1822+1
  7857   001928  C02C  F073         	movff	?___flsub+2,_atanf$1822+2
  7858   00192C  C02D  F074         	movff	?___flsub+3,_atanf$1822+3
  7859   001930  C05B  F02E         	movff	atanf@x,___flsub@a
  7860   001934  C05C  F02F         	movff	atanf@x+1,___flsub@a+1
  7861   001938  C05D  F030         	movff	atanf@x+2,___flsub@a+2
  7862   00193C  C05E  F031         	movff	atanf@x+3,___flsub@a+3
  7863   001940  C071  F02A         	movff	_atanf$1822,___flsub@b
  7864   001944  C072  F02B         	movff	_atanf$1822+1,___flsub@b+1
  7865   001948  C073  F02C         	movff	_atanf$1822+2,___flsub@b+2
  7866   00194C  C074  F02D         	movff	_atanf$1822+3,___flsub@b+3
  7867   001950  ECBE  F027         	call	___flsub	;wreg free
  7868   001954  C02A  F075         	movff	?___flsub,_atanf$1823
  7869   001958  C02B  F076         	movff	?___flsub+1,_atanf$1823+1
  7870   00195C  C02C  F077         	movff	?___flsub+2,_atanf$1823+2
  7871   001960  C02D  F078         	movff	?___flsub+3,_atanf$1823+3
  7872   001964  0100               	movlb	0	; () banked
  7873   001966  518E               	movf	atanf@id& (0+255),w,b
  7874   001968  0D04               	mullw	4
  7875   00196A  50F3               	movf	243,w,c
  7876   00196C  0F11               	addlw	low _atanhi
  7877   00196E  6E5F               	movwf	??_atanf^0,c
  7878   001970  C05F  FFF6         	movff	??_atanf,tblptrl
  7879   001974                     	if	1	;There is more than 1 active tblptr byte
  7880   001974  0E08               	movlw	high __smallconst
  7881   001976  6EF7               	movwf	tblptrh,c
  7882   001978                     	endif
  7883   001978                     	if	0	;tblptru may be non-zero
  7884   001978                     	endif
  7885   001978                     	if	0	;tblptru may be non-zero
  7886   001978                     	endif
  7887   001978  0009               	tblrd		*+
  7888   00197A  CFF5 F02A          	movff	tablat,___flsub@b
  7889   00197E  0009               	tblrd		*+
  7890   001980  CFF5 F02B          	movff	tablat,___flsub@b+1
  7891   001984  0009               	tblrd		*+
  7892   001986  CFF5 F02C          	movff	tablat,___flsub@b+2
  7893   00198A  000A               	tblrd		*-
  7894   00198C  CFF5 F02D          	movff	tablat,___flsub@b+3
  7895   001990  C075  F02E         	movff	_atanf$1823,___flsub@a
  7896   001994  C076  F02F         	movff	_atanf$1823+1,___flsub@a+1
  7897   001998  C077  F030         	movff	_atanf$1823+2,___flsub@a+2
  7898   00199C  C078  F031         	movff	_atanf$1823+3,___flsub@a+3
  7899   0019A0  ECBE  F027         	call	___flsub	;wreg free
  7900   0019A4  C02A  F08F         	movff	?___flsub,atanf@z
  7901   0019A8  C02B  F090         	movff	?___flsub+1,atanf@z+1
  7902   0019AC  C02C  F091         	movff	?___flsub+2,atanf@z+2
  7903   0019B0  C02D  F092         	movff	?___flsub+3,atanf@z+3
  7904   0019B4  0100               	movlb	0	; () banked
  7905   0019B6  5189               	movf	atanf@sign& (0+255),w,b
  7906   0019B8  A4D8               	btfss	status,2,c
  7907   0019BA  EFE1  F00C         	goto	u7161
  7908   0019BE  EFE3  F00C         	goto	u7160
  7909   0019C2                     u7161:
  7910   0019C2  EF9F  F009         	goto	l6231
  7911   0019C6                     u7160:
  7912   0019C6  EF95  F009         	goto	l6229
  7913   0019CA                     l1085:
  7914   0019CA  0012               	return		;funcret
  7915   0019CC                     __end_of_atanf:
  7916                           	callstack 0
  7917                           
  7918 ;; *************** function _fabsf *****************
  7919 ;; Defined at:
  7920 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fabsf.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  x               4    0[COMRAM] float 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  u               4    4[COMRAM] struct .
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  4    0[COMRAM] float 
  7927 ;; Registers used:
  7928 ;;		status,2, status,0
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7934 ;;      Params:         4       0       0       0       0       0       0       0       0
  7935 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7937 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7938 ;;Total ram usage:        8 bytes
  7939 ;; Hardware stack levels used: 1
  7940 ;; This function calls:
  7941 ;;		Nothing
  7942 ;; This function is called by:
  7943 ;;		_atanf
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text29
  7948   005120                     __ptext29:
  7949                           	callstack 0
  7950   005120                     _fabsf:
  7951                           	callstack 27
  7952   005120  C114  F005         	movff	fabsf@F465,fabsf@u
  7953   005124  C115  F006         	movff	fabsf@F465+1,fabsf@u+1
  7954   005128  C116  F007         	movff	fabsf@F465+2,fabsf@u+2
  7955   00512C  C117  F008         	movff	fabsf@F465+3,fabsf@u+3
  7956   005130  C001  F005         	movff	fabsf@x,fabsf@u
  7957   005134  C002  F006         	movff	fabsf@x+1,fabsf@u+1
  7958   005138  C003  F007         	movff	fabsf@x+2,fabsf@u+2
  7959   00513C  C004  F008         	movff	fabsf@x+3,fabsf@u+3
  7960   005140  9E08               	bcf	(fabsf@u+3)^0,7,c
  7961   005142  C005  F001         	movff	fabsf@u,?_fabsf
  7962   005146  C006  F002         	movff	fabsf@u+1,?_fabsf+1
  7963   00514A  C007  F003         	movff	fabsf@u+2,?_fabsf+2
  7964   00514E  C008  F004         	movff	fabsf@u+3,?_fabsf+3
  7965   005152  0012               	return		;funcret
  7966   005154                     __end_of_fabsf:
  7967                           	callstack 0
  7968                           
  7969 ;; *************** function ___fpclassifyf *****************
  7970 ;; Defined at:
  7971 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  x               4    0[COMRAM] float 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  u               4   10[COMRAM] struct .
  7976 ;;  e               2    8[COMRAM] int 
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  2    0[COMRAM] int 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2, status,0
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7986 ;;      Params:         4       0       0       0       0       0       0       0       0
  7987 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7988 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7989 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7990 ;;Total ram usage:       14 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; This function calls:
  7993 ;;		Nothing
  7994 ;; This function is called by:
  7995 ;;		_atanf
  7996 ;;		_efgtoa
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text30
  8001   00473A                     __ptext30:
  8002                           	callstack 0
  8003   00473A                     ___fpclassifyf:
  8004                           	callstack 26
  8005   00473A  C118  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8006   00473E  C119  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8007   004742  C11A  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8008   004746  C11B  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8009   00474A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8010   00474E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8011   004752  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8012   004756  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8013   00475A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8014   00475E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8015   004762  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8016   004766  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8017   00476A  0E18               	movlw	24
  8018   00476C  EFBD  F023         	goto	u6200
  8019   004770                     u6205:
  8020   004770  90D8               	bcf	status,0,c
  8021   004772  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  8022   004774  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  8023   004776  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  8024   004778  3205               	rrcf	??___fpclassifyf^0,f,c
  8025   00477A                     u6200:
  8026   00477A  2EE8               	decfsz	wreg,f,c
  8027   00477C  EFB8  F023         	goto	u6205
  8028   004780  5005               	movf	??___fpclassifyf^0,w,c
  8029   004782  6E09               	movwf	___fpclassifyf@e^0,c
  8030   004784  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  8031   004786  5009               	movf	___fpclassifyf@e^0,w,c
  8032   004788  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8033   00478A  A4D8               	btfss	status,2,c
  8034   00478C  EFCA  F023         	goto	u6211
  8035   004790  EFCC  F023         	goto	u6210
  8036   004794                     u6211:
  8037   004794  EFEC  F023         	goto	l5747
  8038   004798                     u6210:
  8039   004798  90D8               	bcf	status,0,c
  8040   00479A  340B               	rlcf	___fpclassifyf@u^0,w,c
  8041   00479C  6E05               	movwf	??___fpclassifyf^0,c
  8042   00479E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8043   0047A0  6E06               	movwf	(??___fpclassifyf+1)^0,c
  8044   0047A2  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8045   0047A4  6E07               	movwf	(??___fpclassifyf+2)^0,c
  8046   0047A6  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8047   0047A8  6E08               	movwf	(??___fpclassifyf+3)^0,c
  8048   0047AA  5005               	movf	??___fpclassifyf^0,w,c
  8049   0047AC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8050   0047AE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8051   0047B0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8052   0047B2  A4D8               	btfss	status,2,c
  8053   0047B4  EFDE  F023         	goto	u6221
  8054   0047B8  EFE0  F023         	goto	u6220
  8055   0047BC                     u6221:
  8056   0047BC  EFE6  F023         	goto	l5743
  8057   0047C0                     u6220:
  8058   0047C0  0E00               	movlw	0
  8059   0047C2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8060   0047C4  0E02               	movlw	2
  8061   0047C6  6E01               	movwf	?___fpclassifyf^0,c
  8062   0047C8  EF1B  F024         	goto	l1114
  8063   0047CC                     l5743:
  8064   0047CC  0E00               	movlw	0
  8065   0047CE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8066   0047D0  0E03               	movlw	3
  8067   0047D2  6E01               	movwf	?___fpclassifyf^0,c
  8068   0047D4  EF1B  F024         	goto	l1114
  8069   0047D8                     l5747:
  8070   0047D8  2809               	incf	___fpclassifyf@e^0,w,c
  8071   0047DA  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8072   0047DC  A4D8               	btfss	status,2,c
  8073   0047DE  EFF3  F023         	goto	u6231
  8074   0047E2  EFF5  F023         	goto	u6230
  8075   0047E6                     u6231:
  8076   0047E6  EF17  F024         	goto	l5753
  8077   0047EA                     u6230:
  8078   0047EA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8079   0047EE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8080   0047F2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8081   0047F6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8082   0047FA  0E09               	movlw	9
  8083   0047FC                     u6245:
  8084   0047FC  90D8               	bcf	status,0,c
  8085   0047FE  3605               	rlcf	??___fpclassifyf^0,f,c
  8086   004800  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  8087   004802  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  8088   004804  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  8089   004806  2EE8               	decfsz	wreg,f,c
  8090   004808  EFFE  F023         	goto	u6245
  8091   00480C  5005               	movf	??___fpclassifyf^0,w,c
  8092   00480E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8093   004810  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8094   004812  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8095   004814  B4D8               	btfsc	status,2,c
  8096   004816  EF0F  F024         	goto	u6251
  8097   00481A  EF12  F024         	goto	u6250
  8098   00481E                     u6251:
  8099   00481E  0E01               	movlw	1
  8100   004820  EF13  F024         	goto	u6260
  8101   004824                     u6250:
  8102   004824  0E00               	movlw	0
  8103   004826                     u6260:
  8104   004826  6E01               	movwf	?___fpclassifyf^0,c
  8105   004828  6A02               	clrf	(?___fpclassifyf+1)^0,c
  8106   00482A  EF1B  F024         	goto	l1114
  8107   00482E                     l5753:
  8108   00482E  0E00               	movlw	0
  8109   004830  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8110   004832  0E04               	movlw	4
  8111   004834  6E01               	movwf	?___fpclassifyf^0,c
  8112   004836                     l1114:
  8113   004836  0012               	return		;funcret
  8114   004838                     __end_of___fpclassifyf:
  8115                           	callstack 0
  8116                           
  8117 ;; *************** function ___flneg *****************
  8118 ;; Defined at:
  8119 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  f1              4    0[COMRAM] int 
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;		None
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  4    0[COMRAM] int 
  8126 ;; Registers used:
  8127 ;;		wreg, status,2, status,0
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8133 ;;      Params:         4       0       0       0       0       0       0       0       0
  8134 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8136 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8137 ;;Total ram usage:        4 bytes
  8138 ;; Hardware stack levels used: 1
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_ArmBalancePID
  8143 ;;		_WheelBalancePID
  8144 ;;		_atanf
  8145 ;;		_efgtoa
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text31
  8150   005080                     __ptext31:
  8151                           	callstack 0
  8152   005080                     ___flneg:
  8153                           	callstack 26
  8154   005080  5001               	movf	___flneg@f1^0,w,c
  8155   005082  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8156   005084  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8157   005086  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8158   005088  B4D8               	btfsc	status,2,c
  8159   00508A  EF49  F028         	goto	u6121
  8160   00508E  EF4B  F028         	goto	u6120
  8161   005092                     u6121:
  8162   005092  EF53  F028         	goto	l5687
  8163   005096                     u6120:
  8164   005096  0E00               	movlw	0
  8165   005098  1A01               	xorwf	___flneg@f1^0,f,c
  8166   00509A  0E00               	movlw	0
  8167   00509C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8168   00509E  0E00               	movlw	0
  8169   0050A0  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8170   0050A2  0E80               	movlw	128
  8171   0050A4  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8172   0050A6                     l5687:
  8173   0050A6  C001  F001         	movff	___flneg@f1,?___flneg
  8174   0050AA  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8175   0050AE  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8176   0050B2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8177   0050B6  0012               	return		;funcret
  8178   0050B8                     __end_of___flneg:
  8179                           	callstack 0
  8180                           
  8181 ;; *************** function ___xxtofl *****************
  8182 ;; Defined at:
  8183 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;  sign            1    wreg     unsigned char 
  8186 ;;  val             4    0[COMRAM] long 
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;  sign            1    8[COMRAM] unsigned char 
  8189 ;;  arg             4   10[COMRAM] unsigned long 
  8190 ;;  exp             1    9[COMRAM] unsigned char 
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  4    0[COMRAM] unsigned char 
  8193 ;; Registers used:
  8194 ;;		wreg, status,2, status,0
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8200 ;;      Params:         4       0       0       0       0       0       0       0       0
  8201 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8202 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8203 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8204 ;;Total ram usage:       14 bytes
  8205 ;; Hardware stack levels used: 1
  8206 ;; This function calls:
  8207 ;;		Nothing
  8208 ;; This function is called by:
  8209 ;;		_WheelMPU6050_Read
  8210 ;;		_ArmMPU6050_Read
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text32
  8215   0040AC                     __ptext32:
  8216                           	callstack 0
  8217   0040AC                     ___xxtofl:
  8218                           	callstack 28
  8219                           
  8220                           ;incstack = 0
  8221                           ;___xxtofl@sign stored from wreg
  8222   0040AC  6E09               	movwf	___xxtofl@sign^0,c
  8223   0040AE  5009               	movf	___xxtofl@sign^0,w,c
  8224   0040B0  B4D8               	btfsc	status,2,c
  8225   0040B2  EF5D  F020         	goto	u7171
  8226   0040B6  EF5F  F020         	goto	u7170
  8227   0040BA                     u7171:
  8228   0040BA  EF81  F020         	goto	l1039
  8229   0040BE                     u7170:
  8230   0040BE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8231   0040C0  EF66  F020         	goto	u7180
  8232   0040C4  EF64  F020         	goto	u7181
  8233   0040C8                     u7181:
  8234   0040C8  EF81  F020         	goto	l1039
  8235   0040CC                     u7180:
  8236   0040CC  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8237   0040D0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8238   0040D4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8239   0040D8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8240   0040DC  1E05               	comf	??___xxtofl^0,f,c
  8241   0040DE  1E06               	comf	(??___xxtofl+1)^0,f,c
  8242   0040E0  1E07               	comf	(??___xxtofl+2)^0,f,c
  8243   0040E2  1E08               	comf	(??___xxtofl+3)^0,f,c
  8244   0040E4  2A05               	incf	??___xxtofl^0,f,c
  8245   0040E6  0E00               	movlw	0
  8246   0040E8  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8247   0040EA  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8248   0040EC  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8249   0040EE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8250   0040F2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8251   0040F6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8252   0040FA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8253   0040FE  EF89  F020         	goto	l6323
  8254   004102                     l1039:
  8255   004102  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8256   004106  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8257   00410A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8258   00410E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8259   004112                     l6323:
  8260   004112  5001               	movf	___xxtofl@val^0,w,c
  8261   004114  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8262   004116  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8263   004118  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8264   00411A  A4D8               	btfss	status,2,c
  8265   00411C  EF92  F020         	goto	u7191
  8266   004120  EF94  F020         	goto	u7190
  8267   004124                     u7191:
  8268   004124  EF9E  F020         	goto	l6329
  8269   004128                     u7190:
  8270   004128  0E00               	movlw	0
  8271   00412A  6E01               	movwf	?___xxtofl^0,c
  8272   00412C  0E00               	movlw	0
  8273   00412E  6E02               	movwf	(?___xxtofl+1)^0,c
  8274   004130  0E00               	movlw	0
  8275   004132  6E03               	movwf	(?___xxtofl+2)^0,c
  8276   004134  0E00               	movlw	0
  8277   004136  6E04               	movwf	(?___xxtofl+3)^0,c
  8278   004138  EF2F  F021         	goto	l1042
  8279   00413C                     l6329:
  8280   00413C  0E96               	movlw	150
  8281   00413E  6E0A               	movwf	___xxtofl@exp^0,c
  8282   004140  EFA8  F020         	goto	l6333
  8283   004144                     l6331:
  8284   004144  2A0A               	incf	___xxtofl@exp^0,f,c
  8285   004146  90D8               	bcf	status,0,c
  8286   004148  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8287   00414A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8288   00414C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8289   00414E  320B               	rrcf	___xxtofl@arg^0,f,c
  8290   004150                     l6333:
  8291   004150  0E00               	movlw	0
  8292   004152  140B               	andwf	___xxtofl@arg^0,w,c
  8293   004154  6E05               	movwf	??___xxtofl^0,c
  8294   004156  0E00               	movlw	0
  8295   004158  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8296   00415A  6E06               	movwf	(??___xxtofl+1)^0,c
  8297   00415C  0E00               	movlw	0
  8298   00415E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8299   004160  6E07               	movwf	(??___xxtofl+2)^0,c
  8300   004162  0EFE               	movlw	254
  8301   004164  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8302   004166  6E08               	movwf	(??___xxtofl+3)^0,c
  8303   004168  5005               	movf	??___xxtofl^0,w,c
  8304   00416A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8305   00416C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8306   00416E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8307   004170  A4D8               	btfss	status,2,c
  8308   004172  EFBD  F020         	goto	u7201
  8309   004176  EFBF  F020         	goto	u7200
  8310   00417A                     u7201:
  8311   00417A  EFA2  F020         	goto	l6331
  8312   00417E                     u7200:
  8313   00417E  EFCD  F020         	goto	l1046
  8314   004182                     l6335:
  8315   004182  2A0A               	incf	___xxtofl@exp^0,f,c
  8316   004184  0E01               	movlw	1
  8317   004186  260B               	addwf	___xxtofl@arg^0,f,c
  8318   004188  0E00               	movlw	0
  8319   00418A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8320   00418C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8321   00418E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8322   004190  90D8               	bcf	status,0,c
  8323   004192  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8324   004194  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8325   004196  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8326   004198  320B               	rrcf	___xxtofl@arg^0,f,c
  8327   00419A                     l1046:
  8328   00419A  0E00               	movlw	0
  8329   00419C  140B               	andwf	___xxtofl@arg^0,w,c
  8330   00419E  6E05               	movwf	??___xxtofl^0,c
  8331   0041A0  0E00               	movlw	0
  8332   0041A2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8333   0041A4  6E06               	movwf	(??___xxtofl+1)^0,c
  8334   0041A6  0E00               	movlw	0
  8335   0041A8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8336   0041AA  6E07               	movwf	(??___xxtofl+2)^0,c
  8337   0041AC  0EFF               	movlw	255
  8338   0041AE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8339   0041B0  6E08               	movwf	(??___xxtofl+3)^0,c
  8340   0041B2  5005               	movf	??___xxtofl^0,w,c
  8341   0041B4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8342   0041B6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8343   0041B8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8344   0041BA  A4D8               	btfss	status,2,c
  8345   0041BC  EFE2  F020         	goto	u7211
  8346   0041C0  EFE4  F020         	goto	u7210
  8347   0041C4                     u7211:
  8348   0041C4  EFC1  F020         	goto	l6335
  8349   0041C8                     u7210:
  8350   0041C8  EFEC  F020         	goto	l6343
  8351   0041CC                     l6341:
  8352   0041CC  060A               	decf	___xxtofl@exp^0,f,c
  8353   0041CE  90D8               	bcf	status,0,c
  8354   0041D0  360B               	rlcf	___xxtofl@arg^0,f,c
  8355   0041D2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8356   0041D4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8357   0041D6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8358   0041D8                     l6343:
  8359   0041D8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8360   0041DA  EFF1  F020         	goto	u7221
  8361   0041DE  EFF3  F020         	goto	u7220
  8362   0041E2                     u7221:
  8363   0041E2  EFFB  F020         	goto	l1053
  8364   0041E6                     u7220:
  8365   0041E6  0E02               	movlw	2
  8366   0041E8  600A               	cpfslt	___xxtofl@exp^0,c
  8367   0041EA  EFF9  F020         	goto	u7231
  8368   0041EE  EFFB  F020         	goto	u7230
  8369   0041F2                     u7231:
  8370   0041F2  EFE6  F020         	goto	l6341
  8371   0041F6                     u7230:
  8372   0041F6                     l1053:
  8373   0041F6  B00A               	btfsc	___xxtofl@exp^0,0,c
  8374   0041F8  EF00  F021         	goto	u7241
  8375   0041FC  EF02  F021         	goto	u7240
  8376   004200                     u7241:
  8377   004200  EF03  F021         	goto	l6349
  8378   004204                     u7240:
  8379   004204  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8380   004206                     l6349:
  8381   004206  90D8               	bcf	status,0,c
  8382   004208  320A               	rrcf	___xxtofl@exp^0,f,c
  8383   00420A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8384   00420E  6A06               	clrf	(??___xxtofl+1)^0,c
  8385   004210  6A07               	clrf	(??___xxtofl+2)^0,c
  8386   004212  6A08               	clrf	(??___xxtofl+3)^0,c
  8387   004214  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8388   004218  6A07               	clrf	(??___xxtofl+2)^0,c
  8389   00421A  6A06               	clrf	(??___xxtofl+1)^0,c
  8390   00421C  6A05               	clrf	??___xxtofl^0,c
  8391   00421E  5005               	movf	??___xxtofl^0,w,c
  8392   004220  120B               	iorwf	___xxtofl@arg^0,f,c
  8393   004222  5006               	movf	(??___xxtofl+1)^0,w,c
  8394   004224  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8395   004226  5007               	movf	(??___xxtofl+2)^0,w,c
  8396   004228  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8397   00422A  5008               	movf	(??___xxtofl+3)^0,w,c
  8398   00422C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8399   00422E  5009               	movf	___xxtofl@sign^0,w,c
  8400   004230  B4D8               	btfsc	status,2,c
  8401   004232  EF1D  F021         	goto	u7251
  8402   004236  EF1F  F021         	goto	u7250
  8403   00423A                     u7251:
  8404   00423A  EF27  F021         	goto	l6359
  8405   00423E                     u7250:
  8406   00423E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8407   004240  EF26  F021         	goto	u7260
  8408   004244  EF24  F021         	goto	u7261
  8409   004248                     u7261:
  8410   004248  EF27  F021         	goto	l6359
  8411   00424C                     u7260:
  8412   00424C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8413   00424E                     l6359:
  8414   00424E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8415   004252  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8416   004256  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8417   00425A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8418   00425E                     l1042:
  8419   00425E  0012               	return		;funcret
  8420   004260                     __end_of___xxtofl:
  8421                           	callstack 0
  8422                           
  8423 ;; *************** function _I2C_Read *****************
  8424 ;; Defined at:
  8425 ;;		line 81 in file "I2C.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;  ACK_NACK        1    wreg     unsigned char 
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;  ACK_NACK        1    0[COMRAM] unsigned char 
  8430 ;;  Data            1    1[COMRAM] unsigned char 
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  1    wreg      unsigned char 
  8433 ;; Registers used:
  8434 ;;		wreg, status,2, cstack
  8435 ;; Tracked objects:
  8436 ;;		On entry : 0/0
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8440 ;;      Params:         0       0       0       0       0       0       0       0       0
  8441 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8443 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8444 ;;Total ram usage:        2 bytes
  8445 ;; Hardware stack levels used: 1
  8446 ;; Hardware stack levels required when called: 1
  8447 ;; This function calls:
  8448 ;;		_I2C_ACK
  8449 ;;		_I2C_NACK
  8450 ;; This function is called by:
  8451 ;;		_WheelMPU6050_Read
  8452 ;;		_ArmMPU6050_Read
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text33
  8457   004F36                     __ptext33:
  8458                           	callstack 0
  8459   004F36                     _I2C_Read:
  8460                           	callstack 27
  8461                           
  8462                           ;incstack = 0
  8463                           ;I2C_Read@ACK_NACK stored from wreg
  8464   004F36  6E01               	movwf	I2C_Read@ACK_NACK^0,c
  8465   004F38                     
  8466                           ;I2C.c: 81: unsigned char I2C_Read(unsigned char ACK_NACK);I2C.c: 82: {;I2C.c: 84:     u
      +                          nsigned char Data;;I2C.c: 85:     RCEN = 1;
  8467   004F38  86C5               	bsf	4037,3,c	;volatile
  8468   004F3A                     l213:
  8469   004F3A  A0C7               	btfss	4039,0,c	;volatile
  8470   004F3C  EFA2  F027         	goto	u6881
  8471   004F40  EFA4  F027         	goto	u6880
  8472   004F44                     u6881:
  8473   004F44  EF9D  F027         	goto	l213
  8474   004F48                     u6880:
  8475   004F48                     
  8476                           ;I2C.c: 87:     Data = SSPBUF;
  8477   004F48  CFC9 F002          	movff	4041,I2C_Read@Data	;volatile
  8478   004F4C                     
  8479                           ;I2C.c: 88:     if(ACK_NACK==0)
  8480   004F4C  5001               	movf	I2C_Read@ACK_NACK^0,w,c
  8481   004F4E  A4D8               	btfss	status,2,c
  8482   004F50  EFAC  F027         	goto	u6891
  8483   004F54  EFAE  F027         	goto	u6890
  8484   004F58                     u6891:
  8485   004F58  EFB2  F027         	goto	l6131
  8486   004F5C                     u6890:
  8487   004F5C                     
  8488                           ;I2C.c: 89:         I2C_ACK();
  8489   004F5C  EC3F  F029         	call	_I2C_ACK	;wreg free
  8490   004F60  EFB4  F027         	goto	l218
  8491   004F64                     l6131:
  8492                           
  8493                           ;I2C.c: 91:         I2C_NACK();
  8494   004F64  EC35  F029         	call	_I2C_NACK	;wreg free
  8495   004F68                     l218:
  8496   004F68  A69E               	btfss	3998,3,c	;volatile
  8497   004F6A  EFB9  F027         	goto	u6901
  8498   004F6E  EFBB  F027         	goto	u6900
  8499   004F72                     u6901:
  8500   004F72  EFB4  F027         	goto	l218
  8501   004F76                     u6900:
  8502   004F76                     
  8503                           ;I2C.c: 93:     SSPIF=0;
  8504   004F76  969E               	bcf	3998,3,c	;volatile
  8505                           
  8506                           ;I2C.c: 94:     return Data;
  8507   004F78  5002               	movf	I2C_Read@Data^0,w,c
  8508   004F7A  0012               	return		;funcret
  8509   004F7C                     __end_of_I2C_Read:
  8510                           	callstack 0
  8511                           
  8512 ;; *************** function _I2C_NACK *****************
  8513 ;; Defined at:
  8514 ;;		line 54 in file "I2C.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;		None
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;		None
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  1    wreg      void 
  8521 ;; Registers used:
  8522 ;;		None
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8528 ;;      Params:         0       0       0       0       0       0       0       0       0
  8529 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8531 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8532 ;;Total ram usage:        0 bytes
  8533 ;; Hardware stack levels used: 1
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_I2C_Read
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text34
  8542   00526A                     __ptext34:
  8543                           	callstack 0
  8544   00526A                     _I2C_NACK:
  8545                           	callstack 27
  8546   00526A                     
  8547                           ;I2C.c: 56:  ACKDT = 1;
  8548   00526A  8AC5               	bsf	4037,5,c	;volatile
  8549                           
  8550                           ;I2C.c: 57:  ACKEN = 1;
  8551   00526C  88C5               	bsf	4037,4,c	;volatile
  8552   00526E                     l195:
  8553   00526E  B8C5               	btfsc	4037,4,c	;volatile
  8554   005270  EF3C  F029         	goto	u6441
  8555   005274  EF3E  F029         	goto	u6440
  8556   005278                     u6441:
  8557   005278  EF37  F029         	goto	l195
  8558   00527C                     u6440:
  8559   00527C  0012               	return		;funcret
  8560   00527E                     __end_of_I2C_NACK:
  8561                           	callstack 0
  8562                           
  8563 ;; *************** function _I2C_ACK *****************
  8564 ;; Defined at:
  8565 ;;		line 47 in file "I2C.c"
  8566 ;; Parameters:    Size  Location     Type
  8567 ;;		None
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;		None
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  1    wreg      void 
  8572 ;; Registers used:
  8573 ;;		None
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8579 ;;      Params:         0       0       0       0       0       0       0       0       0
  8580 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8581 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8582 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8583 ;;Total ram usage:        0 bytes
  8584 ;; Hardware stack levels used: 1
  8585 ;; This function calls:
  8586 ;;		Nothing
  8587 ;; This function is called by:
  8588 ;;		_I2C_Read
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text35
  8593   00527E                     __ptext35:
  8594                           	callstack 0
  8595   00527E                     _I2C_ACK:
  8596                           	callstack 27
  8597   00527E                     
  8598                           ;I2C.c: 49:  ACKDT = 0;
  8599   00527E  9AC5               	bcf	4037,5,c	;volatile
  8600                           
  8601                           ;I2C.c: 50:     ACKEN = 1;
  8602   005280  88C5               	bsf	4037,4,c	;volatile
  8603   005282                     l189:
  8604   005282  B8C5               	btfsc	4037,4,c	;volatile
  8605   005284  EF46  F029         	goto	u6431
  8606   005288  EF48  F029         	goto	u6430
  8607   00528C                     u6431:
  8608   00528C  EF41  F029         	goto	l189
  8609   005290                     u6430:
  8610   005290  0012               	return		;funcret
  8611   005292                     __end_of_I2C_ACK:
  8612                           	callstack 0
  8613                           
  8614 ;; *************** function _ArmKalmanFilter *****************
  8615 ;; Defined at:
  8616 ;;		line 24 in file "ArmMPU6050.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  armKalmanSta    4   13[BANK0 ] void 
  8619 ;;  armKalmanUnc    4   17[BANK0 ] void 
  8620 ;;  armKalmanInp    4   21[BANK0 ] void 
  8621 ;;  armKalmanMea    4   25[BANK0 ] void 
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8633 ;;      Params:         0      16       0       0       0       0       0       0       0
  8634 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8636 ;;      Totals:         4      16       0       0       0       0       0       0       0
  8637 ;;Total ram usage:       20 bytes
  8638 ;; Hardware stack levels used: 1
  8639 ;; Hardware stack levels required when called: 2
  8640 ;; This function calls:
  8641 ;;		___fladd
  8642 ;;		___fldiv
  8643 ;;		___flmul
  8644 ;;		___flsub
  8645 ;; This function is called by:
  8646 ;;		_ArmMPU6050_Read
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           	psect	text36
  8651   003CC6                     __ptext36:
  8652                           	callstack 0
  8653   003CC6                     _ArmKalmanFilter:
  8654                           	callstack 26
  8655   003CC6                     
  8656                           ;ArmMPU6050.c: 25:   armKalmanState = armKalmanState + 0.004*armKalmanInput;
  8657   003CC6  0E6F               	movlw	111
  8658   003CC8  6E05               	movwf	___flmul@a^0,c
  8659   003CCA  0E12               	movlw	18
  8660   003CCC  6E06               	movwf	(___flmul@a+1)^0,c
  8661   003CCE  0E83               	movlw	131
  8662   003CD0  6E07               	movwf	(___flmul@a+2)^0,c
  8663   003CD2  0E3B               	movlw	59
  8664   003CD4  6E08               	movwf	(___flmul@a+3)^0,c
  8665   003CD6  C075  F001         	movff	ArmKalmanFilter@armKalmanInput,___flmul@b
  8666   003CDA  C076  F002         	movff	ArmKalmanFilter@armKalmanInput+1,___flmul@b+1
  8667   003CDE  C077  F003         	movff	ArmKalmanFilter@armKalmanInput+2,___flmul@b+2
  8668   003CE2  C078  F004         	movff	ArmKalmanFilter@armKalmanInput+3,___flmul@b+3
  8669   003CE6  EC46  F00F         	call	___flmul	;wreg free
  8670   003CEA  C001  F01A         	movff	?___flmul,___fladd@b
  8671   003CEE  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  8672   003CF2  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  8673   003CF6  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  8674   003CFA  C06D  F01E         	movff	ArmKalmanFilter@armKalmanState,___fladd@a
  8675   003CFE  C06E  F01F         	movff	ArmKalmanFilter@armKalmanState+1,___fladd@a+1
  8676   003D02  C06F  F020         	movff	ArmKalmanFilter@armKalmanState+2,___fladd@a+2
  8677   003D06  C070  F021         	movff	ArmKalmanFilter@armKalmanState+3,___fladd@a+3
  8678   003D0A  ECE6  F00C         	call	___fladd	;wreg free
  8679   003D0E  C01A  F06D         	movff	?___fladd,ArmKalmanFilter@armKalmanState
  8680   003D12  C01B  F06E         	movff	?___fladd+1,ArmKalmanFilter@armKalmanState+1
  8681   003D16  C01C  F06F         	movff	?___fladd+2,ArmKalmanFilter@armKalmanState+2
  8682   003D1A  C01D  F070         	movff	?___fladd+3,ArmKalmanFilter@armKalmanState+3
  8683   003D1E                     
  8684                           ;ArmMPU6050.c: 26:   armKalmanUncertainty = armKalmanUncertainty + .000256;
  8685   003D1E  C071  F01A         	movff	ArmKalmanFilter@armKalmanUncertainty,___fladd@b
  8686   003D22  C072  F01B         	movff	ArmKalmanFilter@armKalmanUncertainty+1,___fladd@b+1
  8687   003D26  C073  F01C         	movff	ArmKalmanFilter@armKalmanUncertainty+2,___fladd@b+2
  8688   003D2A  C074  F01D         	movff	ArmKalmanFilter@armKalmanUncertainty+3,___fladd@b+3
  8689   003D2E  0EBD               	movlw	189
  8690   003D30  6E1E               	movwf	___fladd@a^0,c
  8691   003D32  0E37               	movlw	55
  8692   003D34  6E1F               	movwf	(___fladd@a+1)^0,c
  8693   003D36  0E86               	movlw	134
  8694   003D38  6E20               	movwf	(___fladd@a+2)^0,c
  8695   003D3A  0E39               	movlw	57
  8696   003D3C  6E21               	movwf	(___fladd@a+3)^0,c
  8697   003D3E  ECE6  F00C         	call	___fladd	;wreg free
  8698   003D42  C01A  F071         	movff	?___fladd,ArmKalmanFilter@armKalmanUncertainty
  8699   003D46  C01B  F072         	movff	?___fladd+1,ArmKalmanFilter@armKalmanUncertainty+1
  8700   003D4A  C01C  F073         	movff	?___fladd+2,ArmKalmanFilter@armKalmanUncertainty+2
  8701   003D4E  C01D  F074         	movff	?___fladd+3,ArmKalmanFilter@armKalmanUncertainty+3
  8702   003D52                     
  8703                           ;ArmMPU6050.c: 27:   armKalmanGain = armKalmanUncertainty * 1/(armKalmanUncertainty + ar
      +                          mdegreeVar * armdegreeVar);
  8704   003D52  0E00               	movlw	0
  8705   003D54  6E05               	movwf	___flmul@a^0,c
  8706   003D56  0E00               	movlw	0
  8707   003D58  6E06               	movwf	(___flmul@a+1)^0,c
  8708   003D5A  0E80               	movlw	128
  8709   003D5C  6E07               	movwf	(___flmul@a+2)^0,c
  8710   003D5E  0E3F               	movlw	63
  8711   003D60  6E08               	movwf	(___flmul@a+3)^0,c
  8712   003D62  C071  F001         	movff	ArmKalmanFilter@armKalmanUncertainty,___flmul@b
  8713   003D66  C072  F002         	movff	ArmKalmanFilter@armKalmanUncertainty+1,___flmul@b+1
  8714   003D6A  C073  F003         	movff	ArmKalmanFilter@armKalmanUncertainty+2,___flmul@b+2
  8715   003D6E  C074  F004         	movff	ArmKalmanFilter@armKalmanUncertainty+3,___flmul@b+3
  8716   003D72  EC46  F00F         	call	___flmul	;wreg free
  8717   003D76  C001  F04F         	movff	?___flmul,___fldiv@b
  8718   003D7A  C002  F050         	movff	?___flmul+1,___fldiv@b+1
  8719   003D7E  C003  F051         	movff	?___flmul+2,___fldiv@b+2
  8720   003D82  C004  F052         	movff	?___flmul+3,___fldiv@b+3
  8721   003D86  0E0A               	movlw	10
  8722   003D88  6E1E               	movwf	___fladd@a^0,c
  8723   003D8A  0ED7               	movlw	215
  8724   003D8C  6E1F               	movwf	(___fladd@a+1)^0,c
  8725   003D8E  0E23               	movlw	35
  8726   003D90  6E20               	movwf	(___fladd@a+2)^0,c
  8727   003D92  0E3C               	movlw	60
  8728   003D94  6E21               	movwf	(___fladd@a+3)^0,c
  8729   003D96  C071  F01A         	movff	ArmKalmanFilter@armKalmanUncertainty,___fladd@b
  8730   003D9A  C072  F01B         	movff	ArmKalmanFilter@armKalmanUncertainty+1,___fladd@b+1
  8731   003D9E  C073  F01C         	movff	ArmKalmanFilter@armKalmanUncertainty+2,___fladd@b+2
  8732   003DA2  C074  F01D         	movff	ArmKalmanFilter@armKalmanUncertainty+3,___fladd@b+3
  8733   003DA6  ECE6  F00C         	call	___fladd	;wreg free
  8734   003DAA  C01A  F053         	movff	?___fladd,___fldiv@a
  8735   003DAE  C01B  F054         	movff	?___fladd+1,___fldiv@a+1
  8736   003DB2  C01C  F055         	movff	?___fladd+2,___fldiv@a+2
  8737   003DB6  C01D  F056         	movff	?___fladd+3,___fldiv@a+3
  8738   003DBA  EC4A  F013         	call	___fldiv	;wreg free
  8739   003DBE  C04F  F11C         	movff	?___fldiv,_armKalmanGain
  8740   003DC2  C050  F11D         	movff	?___fldiv+1,_armKalmanGain+1
  8741   003DC6  C051  F11E         	movff	?___fldiv+2,_armKalmanGain+2
  8742   003DCA  C052  F11F         	movff	?___fldiv+3,_armKalmanGain+3
  8743   003DCE                     
  8744                           ;ArmMPU6050.c: 28:   armKalmanState = armKalmanState + armKalmanGain * (armKalmanMeasure
      +                          ment-armKalmanState);
  8745   003DCE  C11C  F005         	movff	_armKalmanGain,___flmul@a
  8746   003DD2  C11D  F006         	movff	_armKalmanGain+1,___flmul@a+1
  8747   003DD6  C11E  F007         	movff	_armKalmanGain+2,___flmul@a+2
  8748   003DDA  C11F  F008         	movff	_armKalmanGain+3,___flmul@a+3
  8749   003DDE  C06D  F02E         	movff	ArmKalmanFilter@armKalmanState,___flsub@a
  8750   003DE2  C06E  F02F         	movff	ArmKalmanFilter@armKalmanState+1,___flsub@a+1
  8751   003DE6  C06F  F030         	movff	ArmKalmanFilter@armKalmanState+2,___flsub@a+2
  8752   003DEA  C070  F031         	movff	ArmKalmanFilter@armKalmanState+3,___flsub@a+3
  8753   003DEE  C079  F02A         	movff	ArmKalmanFilter@armKalmanMeasurement,___flsub@b
  8754   003DF2  C07A  F02B         	movff	ArmKalmanFilter@armKalmanMeasurement+1,___flsub@b+1
  8755   003DF6  C07B  F02C         	movff	ArmKalmanFilter@armKalmanMeasurement+2,___flsub@b+2
  8756   003DFA  C07C  F02D         	movff	ArmKalmanFilter@armKalmanMeasurement+3,___flsub@b+3
  8757   003DFE  ECBE  F027         	call	___flsub	;wreg free
  8758   003E02  C02A  F001         	movff	?___flsub,___flmul@b
  8759   003E06  C02B  F002         	movff	?___flsub+1,___flmul@b+1
  8760   003E0A  C02C  F003         	movff	?___flsub+2,___flmul@b+2
  8761   003E0E  C02D  F004         	movff	?___flsub+3,___flmul@b+3
  8762   003E12  EC46  F00F         	call	___flmul	;wreg free
  8763   003E16  C001  F05B         	movff	?___flmul,_ArmKalmanFilter$1816
  8764   003E1A  C002  F05C         	movff	?___flmul+1,_ArmKalmanFilter$1816+1
  8765   003E1E  C003  F05D         	movff	?___flmul+2,_ArmKalmanFilter$1816+2
  8766   003E22  C004  F05E         	movff	?___flmul+3,_ArmKalmanFilter$1816+3
  8767   003E26                     
  8768                           ;ArmMPU6050.c: 28:   armKalmanState = armKalmanState + armKalmanGain * (armKalmanMeasure
      +                          ment-armKalmanState);
  8769   003E26  C05B  F01A         	movff	_ArmKalmanFilter$1816,___fladd@b
  8770   003E2A  C05C  F01B         	movff	_ArmKalmanFilter$1816+1,___fladd@b+1
  8771   003E2E  C05D  F01C         	movff	_ArmKalmanFilter$1816+2,___fladd@b+2
  8772   003E32  C05E  F01D         	movff	_ArmKalmanFilter$1816+3,___fladd@b+3
  8773   003E36  C06D  F01E         	movff	ArmKalmanFilter@armKalmanState,___fladd@a
  8774   003E3A  C06E  F01F         	movff	ArmKalmanFilter@armKalmanState+1,___fladd@a+1
  8775   003E3E  C06F  F020         	movff	ArmKalmanFilter@armKalmanState+2,___fladd@a+2
  8776   003E42  C070  F021         	movff	ArmKalmanFilter@armKalmanState+3,___fladd@a+3
  8777   003E46  ECE6  F00C         	call	___fladd	;wreg free
  8778   003E4A  C01A  F06D         	movff	?___fladd,ArmKalmanFilter@armKalmanState
  8779   003E4E  C01B  F06E         	movff	?___fladd+1,ArmKalmanFilter@armKalmanState+1
  8780   003E52  C01C  F06F         	movff	?___fladd+2,ArmKalmanFilter@armKalmanState+2
  8781   003E56  C01D  F070         	movff	?___fladd+3,ArmKalmanFilter@armKalmanState+3
  8782                           
  8783                           ;ArmMPU6050.c: 29:   armKalmanUncertainty =(1-armKalmanGain) * armKalmanUncertainty;
  8784   003E5A  C11C  F02E         	movff	_armKalmanGain,___flsub@a
  8785   003E5E  C11D  F02F         	movff	_armKalmanGain+1,___flsub@a+1
  8786   003E62  C11E  F030         	movff	_armKalmanGain+2,___flsub@a+2
  8787   003E66  C11F  F031         	movff	_armKalmanGain+3,___flsub@a+3
  8788   003E6A  0E00               	movlw	0
  8789   003E6C  6E2A               	movwf	___flsub@b^0,c
  8790   003E6E  0E00               	movlw	0
  8791   003E70  6E2B               	movwf	(___flsub@b+1)^0,c
  8792   003E72  0E80               	movlw	128
  8793   003E74  6E2C               	movwf	(___flsub@b+2)^0,c
  8794   003E76  0E3F               	movlw	63
  8795   003E78  6E2D               	movwf	(___flsub@b+3)^0,c
  8796   003E7A  ECBE  F027         	call	___flsub	;wreg free
  8797   003E7E  C02A  F001         	movff	?___flsub,___flmul@b
  8798   003E82  C02B  F002         	movff	?___flsub+1,___flmul@b+1
  8799   003E86  C02C  F003         	movff	?___flsub+2,___flmul@b+2
  8800   003E8A  C02D  F004         	movff	?___flsub+3,___flmul@b+3
  8801   003E8E  C071  F005         	movff	ArmKalmanFilter@armKalmanUncertainty,___flmul@a
  8802   003E92  C072  F006         	movff	ArmKalmanFilter@armKalmanUncertainty+1,___flmul@a+1
  8803   003E96  C073  F007         	movff	ArmKalmanFilter@armKalmanUncertainty+2,___flmul@a+2
  8804   003E9A  C074  F008         	movff	ArmKalmanFilter@armKalmanUncertainty+3,___flmul@a+3
  8805   003E9E  EC46  F00F         	call	___flmul	;wreg free
  8806   003EA2  C001  F071         	movff	?___flmul,ArmKalmanFilter@armKalmanUncertainty
  8807   003EA6  C002  F072         	movff	?___flmul+1,ArmKalmanFilter@armKalmanUncertainty+1
  8808   003EAA  C003  F073         	movff	?___flmul+2,ArmKalmanFilter@armKalmanUncertainty+2
  8809   003EAE  C004  F074         	movff	?___flmul+3,ArmKalmanFilter@armKalmanUncertainty+3
  8810   003EB2                     
  8811                           ;ArmMPU6050.c: 30:   armKalmanOutput[0] = armKalmanState;
  8812   003EB2  C06D  F100         	movff	ArmKalmanFilter@armKalmanState,_armKalmanOutput
  8813   003EB6  C06E  F101         	movff	ArmKalmanFilter@armKalmanState+1,_armKalmanOutput+1
  8814   003EBA  C06F  F102         	movff	ArmKalmanFilter@armKalmanState+2,_armKalmanOutput+2
  8815   003EBE  C070  F103         	movff	ArmKalmanFilter@armKalmanState+3,_armKalmanOutput+3
  8816   003EC2                     
  8817                           ;ArmMPU6050.c: 31:   armKalmanOutput[1] = armKalmanUncertainty;
  8818   003EC2  C071  F104         	movff	ArmKalmanFilter@armKalmanUncertainty,_armKalmanOutput+4
  8819   003EC6  C072  F105         	movff	ArmKalmanFilter@armKalmanUncertainty+1,_armKalmanOutput+5
  8820   003ECA  C073  F106         	movff	ArmKalmanFilter@armKalmanUncertainty+2,_armKalmanOutput+6
  8821   003ECE  C074  F107         	movff	ArmKalmanFilter@armKalmanUncertainty+3,_armKalmanOutput+7
  8822   003ED2  0012               	return		;funcret
  8823   003ED4                     __end_of_ArmKalmanFilter:
  8824                           	callstack 0
  8825                           
  8826 ;; *************** function ___fldiv *****************
  8827 ;; Defined at:
  8828 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  b               4   78[COMRAM] void 
  8831 ;;  a               4   82[COMRAM] void 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;  grs             4    7[BANK0 ] unsigned long 
  8834 ;;  rem             4    0[BANK0 ] unsigned long 
  8835 ;;  new_exp         2    5[BANK0 ] short 
  8836 ;;  aexp            1   12[BANK0 ] unsigned char 
  8837 ;;  bexp            1   11[BANK0 ] unsigned char 
  8838 ;;  sign            1    4[BANK0 ] unsigned char 
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  4   78[COMRAM] unsigned char 
  8841 ;; Registers used:
  8842 ;;		wreg, status,2, status,0
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8848 ;;      Params:         8       0       0       0       0       0       0       0       0
  8849 ;;      Locals:         0      13       0       0       0       0       0       0       0
  8850 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8851 ;;      Totals:        12      13       0       0       0       0       0       0       0
  8852 ;;Total ram usage:       25 bytes
  8853 ;; Hardware stack levels used: 1
  8854 ;; This function calls:
  8855 ;;		Nothing
  8856 ;; This function is called by:
  8857 ;;		_WheelKalmanFilter
  8858 ;;		_WheelMPU6050_Read
  8859 ;;		_ArmKalmanFilter
  8860 ;;		_ArmMPU6050_Read
  8861 ;;		_atanf
  8862 ;;		_efgtoa
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text37
  8867   002694                     __ptext37:
  8868                           	callstack 0
  8869   002694                     ___fldiv:
  8870                           	callstack 26
  8871   002694  5052               	movf	(___fldiv@b+3)^0,w,c
  8872   002696  0B80               	andlw	128
  8873   002698  0100               	movlb	0	; () banked
  8874   00269A  6F64               	movwf	___fldiv@sign& (0+255),b
  8875   00269C  5052               	movf	(___fldiv@b+3)^0,w,c
  8876   00269E  2452               	addwf	(___fldiv@b+3)^0,w,c
  8877   0026A0  6F6B               	movwf	___fldiv@bexp& (0+255),b
  8878   0026A2                     
  8879                           ; BSR set to: 0
  8880   0026A2  AE51               	btfss	(___fldiv@b+2)^0,7,c
  8881   0026A4  EF56  F013         	goto	u5501
  8882   0026A8  EF58  F013         	goto	u5500
  8883   0026AC                     u5501:
  8884   0026AC  EF59  F013         	goto	l5297
  8885   0026B0                     u5500:
  8886   0026B0                     
  8887                           ; BSR set to: 0
  8888   0026B0  816B               	bsf	___fldiv@bexp& (0+255),0,b
  8889   0026B2                     l5297:
  8890                           
  8891                           ; BSR set to: 0
  8892   0026B2  516B               	movf	___fldiv@bexp& (0+255),w,b
  8893   0026B4  B4D8               	btfsc	status,2,c
  8894   0026B6  EF5F  F013         	goto	u5511
  8895   0026BA  EF61  F013         	goto	u5510
  8896   0026BE                     u5511:
  8897   0026BE  EF76  F013         	goto	l5307
  8898   0026C2                     u5510:
  8899   0026C2                     
  8900                           ; BSR set to: 0
  8901   0026C2  296B               	incf	___fldiv@bexp& (0+255),w,b
  8902   0026C4  A4D8               	btfss	status,2,c
  8903   0026C6  EF67  F013         	goto	u5521
  8904   0026CA  EF69  F013         	goto	u5520
  8905   0026CE                     u5521:
  8906   0026CE  EF71  F013         	goto	l5303
  8907   0026D2                     u5520:
  8908   0026D2                     
  8909                           ; BSR set to: 0
  8910   0026D2  0E00               	movlw	0
  8911   0026D4  6E4F               	movwf	___fldiv@b^0,c
  8912   0026D6  0E00               	movlw	0
  8913   0026D8  6E50               	movwf	(___fldiv@b+1)^0,c
  8914   0026DA  0E00               	movlw	0
  8915   0026DC  6E51               	movwf	(___fldiv@b+2)^0,c
  8916   0026DE  0E00               	movlw	0
  8917   0026E0  6E52               	movwf	(___fldiv@b+3)^0,c
  8918   0026E2                     l5303:
  8919                           
  8920                           ; BSR set to: 0
  8921   0026E2  8E51               	bsf	(___fldiv@b+2)^0,7,c
  8922   0026E4                     
  8923                           ; BSR set to: 0
  8924   0026E4  0E00               	movlw	0
  8925   0026E6  6E52               	movwf	(___fldiv@b+3)^0,c
  8926   0026E8  EF7E  F013         	goto	l5309
  8927   0026EC                     l5307:
  8928                           
  8929                           ; BSR set to: 0
  8930   0026EC  0E00               	movlw	0
  8931   0026EE  6E4F               	movwf	___fldiv@b^0,c
  8932   0026F0  0E00               	movlw	0
  8933   0026F2  6E50               	movwf	(___fldiv@b+1)^0,c
  8934   0026F4  0E00               	movlw	0
  8935   0026F6  6E51               	movwf	(___fldiv@b+2)^0,c
  8936   0026F8  0E00               	movlw	0
  8937   0026FA  6E52               	movwf	(___fldiv@b+3)^0,c
  8938   0026FC                     l5309:
  8939                           
  8940                           ; BSR set to: 0
  8941   0026FC  5056               	movf	(___fldiv@a+3)^0,w,c
  8942   0026FE  0B80               	andlw	128
  8943   002700  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  8944   002702                     
  8945                           ; BSR set to: 0
  8946   002702  5056               	movf	(___fldiv@a+3)^0,w,c
  8947   002704  2456               	addwf	(___fldiv@a+3)^0,w,c
  8948   002706  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8949   002708                     
  8950                           ; BSR set to: 0
  8951   002708  AE55               	btfss	(___fldiv@a+2)^0,7,c
  8952   00270A  EF89  F013         	goto	u5531
  8953   00270E  EF8B  F013         	goto	u5530
  8954   002712                     u5531:
  8955   002712  EF8C  F013         	goto	l5317
  8956   002716                     u5530:
  8957   002716                     
  8958                           ; BSR set to: 0
  8959   002716  816C               	bsf	___fldiv@aexp& (0+255),0,b
  8960   002718                     l5317:
  8961                           
  8962                           ; BSR set to: 0
  8963   002718  516C               	movf	___fldiv@aexp& (0+255),w,b
  8964   00271A  B4D8               	btfsc	status,2,c
  8965   00271C  EF92  F013         	goto	u5541
  8966   002720  EF94  F013         	goto	u5540
  8967   002724                     u5541:
  8968   002724  EFA9  F013         	goto	l5327
  8969   002728                     u5540:
  8970   002728                     
  8971                           ; BSR set to: 0
  8972   002728  296C               	incf	___fldiv@aexp& (0+255),w,b
  8973   00272A  A4D8               	btfss	status,2,c
  8974   00272C  EF9A  F013         	goto	u5551
  8975   002730  EF9C  F013         	goto	u5550
  8976   002734                     u5551:
  8977   002734  EFA4  F013         	goto	l5323
  8978   002738                     u5550:
  8979   002738                     
  8980                           ; BSR set to: 0
  8981   002738  0E00               	movlw	0
  8982   00273A  6E53               	movwf	___fldiv@a^0,c
  8983   00273C  0E00               	movlw	0
  8984   00273E  6E54               	movwf	(___fldiv@a+1)^0,c
  8985   002740  0E00               	movlw	0
  8986   002742  6E55               	movwf	(___fldiv@a+2)^0,c
  8987   002744  0E00               	movlw	0
  8988   002746  6E56               	movwf	(___fldiv@a+3)^0,c
  8989   002748                     l5323:
  8990                           
  8991                           ; BSR set to: 0
  8992   002748  8E55               	bsf	(___fldiv@a+2)^0,7,c
  8993   00274A                     
  8994                           ; BSR set to: 0
  8995   00274A  0E00               	movlw	0
  8996   00274C  6E56               	movwf	(___fldiv@a+3)^0,c
  8997   00274E  EFB1  F013         	goto	l5329
  8998   002752                     l5327:
  8999                           
  9000                           ; BSR set to: 0
  9001   002752  0E00               	movlw	0
  9002   002754  6E53               	movwf	___fldiv@a^0,c
  9003   002756  0E00               	movlw	0
  9004   002758  6E54               	movwf	(___fldiv@a+1)^0,c
  9005   00275A  0E00               	movlw	0
  9006   00275C  6E55               	movwf	(___fldiv@a+2)^0,c
  9007   00275E  0E00               	movlw	0
  9008   002760  6E56               	movwf	(___fldiv@a+3)^0,c
  9009   002762                     l5329:
  9010                           
  9011                           ; BSR set to: 0
  9012   002762  5053               	movf	___fldiv@a^0,w,c
  9013   002764  1054               	iorwf	(___fldiv@a+1)^0,w,c
  9014   002766  1055               	iorwf	(___fldiv@a+2)^0,w,c
  9015   002768  1056               	iorwf	(___fldiv@a+3)^0,w,c
  9016   00276A  A4D8               	btfss	status,2,c
  9017   00276C  EFBA  F013         	goto	u5561
  9018   002770  EFBC  F013         	goto	u5560
  9019   002774                     u5561:
  9020   002774  EFD4  F013         	goto	l5341
  9021   002778                     u5560:
  9022   002778                     
  9023                           ; BSR set to: 0
  9024   002778  0E00               	movlw	0
  9025   00277A  6E4F               	movwf	___fldiv@b^0,c
  9026   00277C  0E00               	movlw	0
  9027   00277E  6E50               	movwf	(___fldiv@b+1)^0,c
  9028   002780  0E00               	movlw	0
  9029   002782  6E51               	movwf	(___fldiv@b+2)^0,c
  9030   002784  0E00               	movlw	0
  9031   002786  6E52               	movwf	(___fldiv@b+3)^0,c
  9032   002788                     
  9033                           ; BSR set to: 0
  9034   002788  0E80               	movlw	128
  9035   00278A  1251               	iorwf	(___fldiv@b+2)^0,f,c
  9036   00278C  0E7F               	movlw	127
  9037   00278E  1252               	iorwf	(___fldiv@b+3)^0,f,c
  9038   002790                     l5335:
  9039                           
  9040                           ; BSR set to: 0
  9041   002790  5164               	movf	___fldiv@sign& (0+255),w,b
  9042   002792  1252               	iorwf	(___fldiv@b+3)^0,f,c
  9043   002794                     
  9044                           ; BSR set to: 0
  9045   002794  C04F  F04F         	movff	___fldiv@b,?___fldiv
  9046   002798  C050  F050         	movff	___fldiv@b+1,?___fldiv+1
  9047   00279C  C051  F051         	movff	___fldiv@b+2,?___fldiv+2
  9048   0027A0  C052  F052         	movff	___fldiv@b+3,?___fldiv+3
  9049   0027A4  EF17  F015         	goto	l966
  9050   0027A8                     l5341:
  9051                           
  9052                           ; BSR set to: 0
  9053   0027A8  516B               	movf	___fldiv@bexp& (0+255),w,b
  9054   0027AA  A4D8               	btfss	status,2,c
  9055   0027AC  EFDA  F013         	goto	u5571
  9056   0027B0  EFDC  F013         	goto	u5570
  9057   0027B4                     u5571:
  9058   0027B4  EFE6  F013         	goto	l5349
  9059   0027B8                     u5570:
  9060   0027B8                     
  9061                           ; BSR set to: 0
  9062   0027B8  0E00               	movlw	0
  9063   0027BA  6E4F               	movwf	?___fldiv^0,c
  9064   0027BC  0E00               	movlw	0
  9065   0027BE  6E50               	movwf	(?___fldiv+1)^0,c
  9066   0027C0  0E00               	movlw	0
  9067   0027C2  6E51               	movwf	(?___fldiv+2)^0,c
  9068   0027C4  0E00               	movlw	0
  9069   0027C6  6E52               	movwf	(?___fldiv+3)^0,c
  9070   0027C8  EF17  F015         	goto	l966
  9071   0027CC                     l5349:
  9072                           
  9073                           ; BSR set to: 0
  9074   0027CC  516C               	movf	___fldiv@aexp& (0+255),w,b
  9075   0027CE  C06B  F057         	movff	___fldiv@bexp,??___fldiv
  9076   0027D2  6A58               	clrf	(??___fldiv+1)^0,c
  9077   0027D4  5E57               	subwf	??___fldiv^0,f,c
  9078   0027D6  0E00               	movlw	0
  9079   0027D8  5A58               	subwfb	(??___fldiv+1)^0,f,c
  9080   0027DA  0E7F               	movlw	127
  9081   0027DC  2457               	addwf	??___fldiv^0,w,c
  9082   0027DE  6F65               	movwf	___fldiv@new_exp& (0+255),b
  9083   0027E0  0E00               	movlw	0
  9084   0027E2  2058               	addwfc	(??___fldiv+1)^0,w,c
  9085   0027E4  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9086   0027E6                     
  9087                           ; BSR set to: 0
  9088   0027E6  C04F  F060         	movff	___fldiv@b,___fldiv@rem
  9089   0027EA  C050  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  9090   0027EE  C051  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  9091   0027F2  C052  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  9092   0027F6                     
  9093                           ; BSR set to: 0
  9094   0027F6  0E00               	movlw	0
  9095   0027F8  6E4F               	movwf	___fldiv@b^0,c
  9096   0027FA  0E00               	movlw	0
  9097   0027FC  6E50               	movwf	(___fldiv@b+1)^0,c
  9098   0027FE  0E00               	movlw	0
  9099   002800  6E51               	movwf	(___fldiv@b+2)^0,c
  9100   002802  0E00               	movlw	0
  9101   002804  6E52               	movwf	(___fldiv@b+3)^0,c
  9102   002806                     
  9103                           ; BSR set to: 0
  9104   002806  0E00               	movlw	0
  9105   002808  6F67               	movwf	___fldiv@grs& (0+255),b
  9106   00280A  0E00               	movlw	0
  9107   00280C  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  9108   00280E  0E00               	movlw	0
  9109   002810  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  9110   002812  0E00               	movlw	0
  9111   002814  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  9112   002816                     
  9113                           ; BSR set to: 0
  9114   002816  0E00               	movlw	0
  9115   002818  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9116   00281A  EF47  F014         	goto	l968
  9117   00281E                     l5359:
  9118                           
  9119                           ; BSR set to: 0
  9120   00281E  516C               	movf	___fldiv@aexp& (0+255),w,b
  9121   002820  B4D8               	btfsc	status,2,c
  9122   002822  EF15  F014         	goto	u5581
  9123   002826  EF17  F014         	goto	u5580
  9124   00282A                     u5581:
  9125   00282A  EF2E  F014         	goto	l5367
  9126   00282E                     u5580:
  9127   00282E                     
  9128                           ; BSR set to: 0
  9129   00282E  90D8               	bcf	status,0,c
  9130   002830  3760               	rlcf	___fldiv@rem& (0+255),f,b
  9131   002832  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9132   002834  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9133   002836  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9134   002838  90D8               	bcf	status,0,c
  9135   00283A  364F               	rlcf	___fldiv@b^0,f,c
  9136   00283C  3650               	rlcf	(___fldiv@b+1)^0,f,c
  9137   00283E  3651               	rlcf	(___fldiv@b+2)^0,f,c
  9138   002840  3652               	rlcf	(___fldiv@b+3)^0,f,c
  9139   002842                     
  9140                           ; BSR set to: 0
  9141   002842  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9142   002844  EF26  F014         	goto	u5591
  9143   002848  EF28  F014         	goto	u5590
  9144   00284C                     u5591:
  9145   00284C  EF29  F014         	goto	l971
  9146   002850                     u5590:
  9147   002850                     
  9148                           ; BSR set to: 0
  9149   002850  804F               	bsf	___fldiv@b^0,0,c
  9150   002852                     l971:
  9151                           
  9152                           ; BSR set to: 0
  9153   002852  90D8               	bcf	status,0,c
  9154   002854  3767               	rlcf	___fldiv@grs& (0+255),f,b
  9155   002856  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9156   002858  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9157   00285A  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9158   00285C                     l5367:
  9159                           
  9160                           ; BSR set to: 0
  9161   00285C  5053               	movf	___fldiv@a^0,w,c
  9162   00285E  5D60               	subwf	___fldiv@rem& (0+255),w,b
  9163   002860  5054               	movf	(___fldiv@a+1)^0,w,c
  9164   002862  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9165   002864  5055               	movf	(___fldiv@a+2)^0,w,c
  9166   002866  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9167   002868  5056               	movf	(___fldiv@a+3)^0,w,c
  9168   00286A  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9169   00286C  A0D8               	btfss	status,0,c
  9170   00286E  EF3B  F014         	goto	u5601
  9171   002872  EF3D  F014         	goto	u5600
  9172   002876                     u5601:
  9173   002876  EF46  F014         	goto	l5373
  9174   00287A                     u5600:
  9175   00287A                     
  9176                           ; BSR set to: 0
  9177   00287A  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9178   00287C                     
  9179                           ; BSR set to: 0
  9180   00287C  5053               	movf	___fldiv@a^0,w,c
  9181   00287E  5F60               	subwf	___fldiv@rem& (0+255),f,b
  9182   002880  5054               	movf	(___fldiv@a+1)^0,w,c
  9183   002882  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9184   002884  5055               	movf	(___fldiv@a+2)^0,w,c
  9185   002886  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9186   002888  5056               	movf	(___fldiv@a+3)^0,w,c
  9187   00288A  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9188   00288C                     l5373:
  9189                           
  9190                           ; BSR set to: 0
  9191   00288C  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  9192   00288E                     l968:
  9193                           
  9194                           ; BSR set to: 0
  9195   00288E  0E19               	movlw	25
  9196   002890  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  9197   002892  EF4D  F014         	goto	u5611
  9198   002896  EF4F  F014         	goto	u5610
  9199   00289A                     u5611:
  9200   00289A  EF0F  F014         	goto	l5359
  9201   00289E                     u5610:
  9202   00289E                     
  9203                           ; BSR set to: 0
  9204   00289E  5160               	movf	___fldiv@rem& (0+255),w,b
  9205   0028A0  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9206   0028A2  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9207   0028A4  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9208   0028A6  B4D8               	btfsc	status,2,c
  9209   0028A8  EF58  F014         	goto	u5621
  9210   0028AC  EF5A  F014         	goto	u5620
  9211   0028B0                     u5621:
  9212   0028B0  EF72  F014         	goto	l5385
  9213   0028B4                     u5620:
  9214   0028B4                     
  9215                           ; BSR set to: 0
  9216   0028B4  8167               	bsf	___fldiv@grs& (0+255),0,b
  9217   0028B6  EF72  F014         	goto	l5385
  9218   0028BA                     l5379:
  9219                           
  9220                           ; BSR set to: 0
  9221   0028BA  90D8               	bcf	status,0,c
  9222   0028BC  364F               	rlcf	___fldiv@b^0,f,c
  9223   0028BE  3650               	rlcf	(___fldiv@b+1)^0,f,c
  9224   0028C0  3651               	rlcf	(___fldiv@b+2)^0,f,c
  9225   0028C2  3652               	rlcf	(___fldiv@b+3)^0,f,c
  9226   0028C4                     
  9227                           ; BSR set to: 0
  9228   0028C4  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9229   0028C6  EF67  F014         	goto	u5631
  9230   0028CA  EF69  F014         	goto	u5630
  9231   0028CE                     u5631:
  9232   0028CE  EF6A  F014         	goto	l977
  9233   0028D2                     u5630:
  9234   0028D2                     
  9235                           ; BSR set to: 0
  9236   0028D2  804F               	bsf	___fldiv@b^0,0,c
  9237   0028D4                     l977:
  9238                           
  9239                           ; BSR set to: 0
  9240   0028D4  90D8               	bcf	status,0,c
  9241   0028D6  3767               	rlcf	___fldiv@grs& (0+255),f,b
  9242   0028D8  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9243   0028DA  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9244   0028DC  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9245   0028DE  0765               	decf	___fldiv@new_exp& (0+255),f,b
  9246   0028E0  A0D8               	btfss	status,0,c
  9247   0028E2  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9248   0028E4                     l5385:
  9249                           
  9250                           ; BSR set to: 0
  9251   0028E4  AE51               	btfss	(___fldiv@b+2)^0,7,c
  9252   0028E6  EF77  F014         	goto	u5641
  9253   0028EA  EF79  F014         	goto	u5640
  9254   0028EE                     u5641:
  9255   0028EE  EF5D  F014         	goto	l5379
  9256   0028F2                     u5640:
  9257   0028F2                     
  9258                           ; BSR set to: 0
  9259   0028F2  0E00               	movlw	0
  9260   0028F4  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9261   0028F6                     
  9262                           ; BSR set to: 0
  9263   0028F6  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9264   0028F8  EF80  F014         	goto	u5651
  9265   0028FC  EF82  F014         	goto	u5650
  9266   002900                     u5651:
  9267   002900  EFA6  F014         	goto	l979
  9268   002904                     u5650:
  9269   002904                     
  9270                           ; BSR set to: 0
  9271   002904  0EFF               	movlw	255
  9272   002906  1567               	andwf	___fldiv@grs& (0+255),w,b
  9273   002908  6E57               	movwf	??___fldiv^0,c
  9274   00290A  0EFF               	movlw	255
  9275   00290C  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9276   00290E  6E58               	movwf	(??___fldiv+1)^0,c
  9277   002910  0EFF               	movlw	255
  9278   002912  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9279   002914  6E59               	movwf	(??___fldiv+2)^0,c
  9280   002916  0E7F               	movlw	127
  9281   002918  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9282   00291A  6E5A               	movwf	(??___fldiv+3)^0,c
  9283   00291C  5057               	movf	??___fldiv^0,w,c
  9284   00291E  1058               	iorwf	(??___fldiv+1)^0,w,c
  9285   002920  1059               	iorwf	(??___fldiv+2)^0,w,c
  9286   002922  105A               	iorwf	(??___fldiv+3)^0,w,c
  9287   002924  B4D8               	btfsc	status,2,c
  9288   002926  EF97  F014         	goto	u5661
  9289   00292A  EF99  F014         	goto	u5660
  9290   00292E                     u5661:
  9291   00292E  EF9D  F014         	goto	l980
  9292   002932                     u5660:
  9293   002932                     l5393:
  9294                           
  9295                           ; BSR set to: 0
  9296   002932  0E01               	movlw	1
  9297   002934  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9298   002936  EFA6  F014         	goto	l979
  9299   00293A                     l980:
  9300                           
  9301                           ; BSR set to: 0
  9302   00293A  A04F               	btfss	___fldiv@b^0,0,c
  9303   00293C  EFA2  F014         	goto	u5671
  9304   002940  EFA4  F014         	goto	u5670
  9305   002944                     u5671:
  9306   002944  EFA6  F014         	goto	l979
  9307   002948                     u5670:
  9308   002948  EF99  F014         	goto	l5393
  9309   00294C                     l979:
  9310                           
  9311                           ; BSR set to: 0
  9312   00294C  516C               	movf	___fldiv@aexp& (0+255),w,b
  9313   00294E  B4D8               	btfsc	status,2,c
  9314   002950  EFAC  F014         	goto	u5681
  9315   002954  EFAE  F014         	goto	u5680
  9316   002958                     u5681:
  9317   002958  EFD2  F014         	goto	l5405
  9318   00295C                     u5680:
  9319   00295C                     
  9320                           ; BSR set to: 0
  9321   00295C  0E01               	movlw	1
  9322   00295E  264F               	addwf	___fldiv@b^0,f,c
  9323   002960  0E00               	movlw	0
  9324   002962  2250               	addwfc	(___fldiv@b+1)^0,f,c
  9325   002964  2251               	addwfc	(___fldiv@b+2)^0,f,c
  9326   002966  2252               	addwfc	(___fldiv@b+3)^0,f,c
  9327   002968                     
  9328                           ; BSR set to: 0
  9329   002968  A052               	btfss	(___fldiv@b+3)^0,0,c
  9330   00296A  EFB9  F014         	goto	u5691
  9331   00296E  EFBB  F014         	goto	u5690
  9332   002972                     u5691:
  9333   002972  EFD2  F014         	goto	l5405
  9334   002976                     u5690:
  9335   002976                     
  9336                           ; BSR set to: 0
  9337   002976  C04F  F057         	movff	___fldiv@b,??___fldiv
  9338   00297A  C050  F058         	movff	___fldiv@b+1,??___fldiv+1
  9339   00297E  C051  F059         	movff	___fldiv@b+2,??___fldiv+2
  9340   002982  C052  F05A         	movff	___fldiv@b+3,??___fldiv+3
  9341   002986  345A               	rlcf	(??___fldiv+3)^0,w,c
  9342   002988  325A               	rrcf	(??___fldiv+3)^0,f,c
  9343   00298A  3259               	rrcf	(??___fldiv+2)^0,f,c
  9344   00298C  3258               	rrcf	(??___fldiv+1)^0,f,c
  9345   00298E  3257               	rrcf	??___fldiv^0,f,c
  9346   002990  C057  F04F         	movff	??___fldiv,___fldiv@b
  9347   002994  C058  F050         	movff	??___fldiv+1,___fldiv@b+1
  9348   002998  C059  F051         	movff	??___fldiv+2,___fldiv@b+2
  9349   00299C  C05A  F052         	movff	??___fldiv+3,___fldiv@b+3
  9350   0029A0                     
  9351                           ; BSR set to: 0
  9352   0029A0  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  9353   0029A2  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9354   0029A4                     l5405:
  9355                           
  9356                           ; BSR set to: 0
  9357   0029A4  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9358   0029A6  EFDD  F014         	goto	u5701
  9359   0029AA  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9360   0029AC  E108               	bnz	u5700
  9361   0029AE  2965               	incf	___fldiv@new_exp& (0+255),w,b
  9362   0029B0  A0D8               	btfss	status,0,c
  9363   0029B2  EFDD  F014         	goto	u5701
  9364   0029B6  EFDF  F014         	goto	u5700
  9365   0029BA                     u5701:
  9366   0029BA  EFEA  F014         	goto	l5409
  9367   0029BE                     u5700:
  9368   0029BE                     
  9369                           ; BSR set to: 0
  9370   0029BE  0E00               	movlw	0
  9371   0029C0  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9372   0029C2  6965               	setf	___fldiv@new_exp& (0+255),b
  9373   0029C4  0E00               	movlw	0
  9374   0029C6  6E4F               	movwf	___fldiv@b^0,c
  9375   0029C8  0E00               	movlw	0
  9376   0029CA  6E50               	movwf	(___fldiv@b+1)^0,c
  9377   0029CC  0E00               	movlw	0
  9378   0029CE  6E51               	movwf	(___fldiv@b+2)^0,c
  9379   0029D0  0E00               	movlw	0
  9380   0029D2  6E52               	movwf	(___fldiv@b+3)^0,c
  9381   0029D4                     l5409:
  9382                           
  9383                           ; BSR set to: 0
  9384   0029D4  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9385   0029D6  EFF7  F014         	goto	u5710
  9386   0029DA  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9387   0029DC  E106               	bnz	u5711
  9388   0029DE  0565               	decf	___fldiv@new_exp& (0+255),w,b
  9389   0029E0  B0D8               	btfsc	status,0,c
  9390   0029E2  EFF5  F014         	goto	u5711
  9391   0029E6  EFF7  F014         	goto	u5710
  9392   0029EA                     u5711:
  9393   0029EA  EF05  F015         	goto	l5413
  9394   0029EE                     u5710:
  9395   0029EE                     
  9396                           ; BSR set to: 0
  9397   0029EE  0E00               	movlw	0
  9398   0029F0  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9399   0029F2  0E00               	movlw	0
  9400   0029F4  6F65               	movwf	___fldiv@new_exp& (0+255),b
  9401   0029F6  0E00               	movlw	0
  9402   0029F8  6E4F               	movwf	___fldiv@b^0,c
  9403   0029FA  0E00               	movlw	0
  9404   0029FC  6E50               	movwf	(___fldiv@b+1)^0,c
  9405   0029FE  0E00               	movlw	0
  9406   002A00  6E51               	movwf	(___fldiv@b+2)^0,c
  9407   002A02  0E00               	movlw	0
  9408   002A04  6E52               	movwf	(___fldiv@b+3)^0,c
  9409   002A06  0E00               	movlw	0
  9410   002A08  6F64               	movwf	___fldiv@sign& (0+255),b
  9411   002A0A                     l5413:
  9412                           
  9413                           ; BSR set to: 0
  9414   002A0A  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  9415   002A0E                     
  9416                           ; BSR set to: 0
  9417   002A0E  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  9418   002A10  EF0C  F015         	goto	u5721
  9419   002A14  EF0E  F015         	goto	u5720
  9420   002A18                     u5721:
  9421   002A18  EF11  F015         	goto	l5419
  9422   002A1C                     u5720:
  9423   002A1C                     
  9424                           ; BSR set to: 0
  9425   002A1C  8E51               	bsf	(___fldiv@b+2)^0,7,c
  9426   002A1E  EF12  F015         	goto	l5421
  9427   002A22                     l5419:
  9428                           
  9429                           ; BSR set to: 0
  9430   002A22  9E51               	bcf	(___fldiv@b+2)^0,7,c
  9431   002A24                     l5421:
  9432                           
  9433                           ; BSR set to: 0
  9434   002A24  90D8               	bcf	status,0,c
  9435   002A26  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  9436   002A28  6E52               	movwf	(___fldiv@b+3)^0,c
  9437   002A2A  EFC8  F013         	goto	l5335
  9438   002A2E                     l966:
  9439                           
  9440                           ; BSR set to: 0
  9441   002A2E  0012               	return		;funcret
  9442   002A30                     __end_of___fldiv:
  9443                           	callstack 0
  9444                           
  9445 ;; *************** function _WheelBalancePID *****************
  9446 ;; Defined at:
  9447 ;;		line 88 in file "main.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  InputAngle      4   49[COMRAM] unsigned char 
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;		None
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  4   49[COMRAM] unsigned char 
  9454 ;; Registers used:
  9455 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9461 ;;      Params:         4       0       0       0       0       0       0       0       0
  9462 ;;      Locals:         8       0       0       0       0       0       0       0       0
  9463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9464 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9465 ;;Total ram usage:       12 bytes
  9466 ;; Hardware stack levels used: 1
  9467 ;; Hardware stack levels required when called: 2
  9468 ;; This function calls:
  9469 ;;		___fladd
  9470 ;;		___flge
  9471 ;;		___flmul
  9472 ;;		___flsub
  9473 ;; This function is called by:
  9474 ;;		_main
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text38
  9479   003118                     __ptext38:
  9480                           	callstack 0
  9481   003118                     _WheelBalancePID:
  9482                           	callstack 28
  9483   003118                     
  9484                           ;main.c: 91:     AngleError = InputAngle - DesiredAngle;
  9485   003118  C032  F0E0         	movff	WheelBalancePID@InputAngle,_AngleError
  9486   00311C  C033  F0E1         	movff	WheelBalancePID@InputAngle+1,_AngleError+1
  9487   003120  C034  F0E2         	movff	WheelBalancePID@InputAngle+2,_AngleError+2
  9488   003124  C035  F0E3         	movff	WheelBalancePID@InputAngle+3,_AngleError+3
  9489   003128                     
  9490                           ;main.c: 92:     Pterm = KP*(AngleError);
  9491   003128  C0E0  F001         	movff	_AngleError,___flmul@b
  9492   00312C  C0E1  F002         	movff	_AngleError+1,___flmul@b+1
  9493   003130  C0E2  F003         	movff	_AngleError+2,___flmul@b+2
  9494   003134  C0E3  F004         	movff	_AngleError+3,___flmul@b+3
  9495   003138  0E00               	movlw	0
  9496   00313A  6E05               	movwf	___flmul@a^0,c
  9497   00313C  0E00               	movlw	0
  9498   00313E  6E06               	movwf	(___flmul@a+1)^0,c
  9499   003140  0E00               	movlw	0
  9500   003142  6E07               	movwf	(___flmul@a+2)^0,c
  9501   003144  0E3F               	movlw	63
  9502   003146  6E08               	movwf	(___flmul@a+3)^0,c
  9503   003148  EC46  F00F         	call	___flmul	;wreg free
  9504   00314C  C001  F188         	movff	?___flmul,_Pterm
  9505   003150  C002  F189         	movff	?___flmul+1,_Pterm+1
  9506   003154  C003  F18A         	movff	?___flmul+2,_Pterm+2
  9507   003158  C004  F18B         	movff	?___flmul+3,_Pterm+3
  9508                           
  9509                           ;main.c: 94:     Iterm = PrevIterm + KI*(AngleError + PrevAngleError);
  9510   00315C  0E9A               	movlw	154
  9511   00315E  6E05               	movwf	___flmul@a^0,c
  9512   003160  0E99               	movlw	153
  9513   003162  6E06               	movwf	(___flmul@a+1)^0,c
  9514   003164  0E99               	movlw	153
  9515   003166  6E07               	movwf	(___flmul@a+2)^0,c
  9516   003168  0E3E               	movlw	62
  9517   00316A  6E08               	movwf	(___flmul@a+3)^0,c
  9518   00316C  C0DC  F01E         	movff	_PrevAngleError,___fladd@a
  9519   003170  C0DD  F01F         	movff	_PrevAngleError+1,___fladd@a+1
  9520   003174  C0DE  F020         	movff	_PrevAngleError+2,___fladd@a+2
  9521   003178  C0DF  F021         	movff	_PrevAngleError+3,___fladd@a+3
  9522   00317C  C0E0  F01A         	movff	_AngleError,___fladd@b
  9523   003180  C0E1  F01B         	movff	_AngleError+1,___fladd@b+1
  9524   003184  C0E2  F01C         	movff	_AngleError+2,___fladd@b+2
  9525   003188  C0E3  F01D         	movff	_AngleError+3,___fladd@b+3
  9526   00318C  ECE6  F00C         	call	___fladd	;wreg free
  9527   003190  C01A  F001         	movff	?___fladd,___flmul@b
  9528   003194  C01B  F002         	movff	?___fladd+1,___flmul@b+1
  9529   003198  C01C  F003         	movff	?___fladd+2,___flmul@b+2
  9530   00319C  C01D  F004         	movff	?___fladd+3,___flmul@b+3
  9531   0031A0  EC46  F00F         	call	___flmul	;wreg free
  9532   0031A4  C001  F036         	movff	?___flmul,_WheelBalancePID$1811
  9533   0031A8  C002  F037         	movff	?___flmul+1,_WheelBalancePID$1811+1
  9534   0031AC  C003  F038         	movff	?___flmul+2,_WheelBalancePID$1811+2
  9535   0031B0  C004  F039         	movff	?___flmul+3,_WheelBalancePID$1811+3
  9536   0031B4                     
  9537                           ;main.c: 94:     Iterm = PrevIterm + KI*(AngleError + PrevAngleError);
  9538   0031B4  C036  F01A         	movff	_WheelBalancePID$1811,___fladd@b
  9539   0031B8  C037  F01B         	movff	_WheelBalancePID$1811+1,___fladd@b+1
  9540   0031BC  C038  F01C         	movff	_WheelBalancePID$1811+2,___fladd@b+2
  9541   0031C0  C039  F01D         	movff	_WheelBalancePID$1811+3,___fladd@b+3
  9542   0031C4  C18C  F01E         	movff	_PrevIterm,___fladd@a
  9543   0031C8  C18D  F01F         	movff	_PrevIterm+1,___fladd@a+1
  9544   0031CC  C18E  F020         	movff	_PrevIterm+2,___fladd@a+2
  9545   0031D0  C18F  F021         	movff	_PrevIterm+3,___fladd@a+3
  9546   0031D4  ECE6  F00C         	call	___fladd	;wreg free
  9547   0031D8  C01A  F0D8         	movff	?___fladd,_Iterm
  9548   0031DC  C01B  F0D9         	movff	?___fladd+1,_Iterm+1
  9549   0031E0  C01C  F0DA         	movff	?___fladd+2,_Iterm+2
  9550   0031E4  C01D  F0DB         	movff	?___fladd+3,_Iterm+3
  9551   0031E8                     
  9552                           ;main.c: 95:     if (Iterm>Max)Iterm = Max;
  9553   0031E8  0E00               	movlw	0
  9554   0031EA  6E1A               	movwf	___flge@ff1^0,c
  9555   0031EC  0E00               	movlw	0
  9556   0031EE  6E1B               	movwf	(___flge@ff1+1)^0,c
  9557   0031F0  0E80               	movlw	128
  9558   0031F2  6E1C               	movwf	(___flge@ff1+2)^0,c
  9559   0031F4  0E3F               	movlw	63
  9560   0031F6  6E1D               	movwf	(___flge@ff1+3)^0,c
  9561   0031F8  C0D8  F01E         	movff	_Iterm,___flge@ff2
  9562   0031FC  C0D9  F01F         	movff	_Iterm+1,___flge@ff2+1
  9563   003200  C0DA  F020         	movff	_Iterm+2,___flge@ff2+2
  9564   003204  C0DB  F021         	movff	_Iterm+3,___flge@ff2+3
  9565   003208  EC1B  F023         	call	___flge	;wreg free
  9566   00320C  B0D8               	btfsc	status,0,c
  9567   00320E  EF0B  F019         	goto	u7421
  9568   003212  EF0D  F019         	goto	u7420
  9569   003216                     u7421:
  9570   003216  EF18  F019         	goto	l6613
  9571   00321A                     u7420:
  9572   00321A  0E00               	movlw	0
  9573   00321C  0100               	movlb	0	; () banked
  9574   00321E  6FD8               	movwf	_Iterm& (0+255),b
  9575   003220  0E00               	movlw	0
  9576   003222  6FD9               	movwf	(_Iterm+1)& (0+255),b
  9577   003224  0E80               	movlw	128
  9578   003226  6FDA               	movwf	(_Iterm+2)& (0+255),b
  9579   003228  0E3F               	movlw	63
  9580   00322A  6FDB               	movwf	(_Iterm+3)& (0+255),b
  9581   00322C  EF3A  F019         	goto	l6617
  9582   003230                     l6613:
  9583   003230  C0D8  F01A         	movff	_Iterm,___flge@ff1
  9584   003234  C0D9  F01B         	movff	_Iterm+1,___flge@ff1+1
  9585   003238  C0DA  F01C         	movff	_Iterm+2,___flge@ff1+2
  9586   00323C  C0DB  F01D         	movff	_Iterm+3,___flge@ff1+3
  9587   003240  0E00               	movlw	0
  9588   003242  6E1E               	movwf	___flge@ff2^0,c
  9589   003244  0E00               	movlw	0
  9590   003246  6E1F               	movwf	(___flge@ff2+1)^0,c
  9591   003248  0E80               	movlw	128
  9592   00324A  6E20               	movwf	(___flge@ff2+2)^0,c
  9593   00324C  0EBF               	movlw	191
  9594   00324E  6E21               	movwf	(___flge@ff2+3)^0,c
  9595   003250  EC1B  F023         	call	___flge	;wreg free
  9596   003254  B0D8               	btfsc	status,0,c
  9597   003256  EF2F  F019         	goto	u7431
  9598   00325A  EF31  F019         	goto	u7430
  9599   00325E                     u7431:
  9600   00325E  EF3A  F019         	goto	l6617
  9601   003262                     u7430:
  9602   003262  0E00               	movlw	0
  9603   003264  0100               	movlb	0	; () banked
  9604   003266  6FD8               	movwf	_Iterm& (0+255),b
  9605   003268  0E00               	movlw	0
  9606   00326A  6FD9               	movwf	(_Iterm+1)& (0+255),b
  9607   00326C  0E80               	movlw	128
  9608   00326E  6FDA               	movwf	(_Iterm+2)& (0+255),b
  9609   003270  0EBF               	movlw	191
  9610   003272  6FDB               	movwf	(_Iterm+3)& (0+255),b
  9611   003274                     l6617:
  9612                           
  9613                           ;main.c: 98:     Dterm = KD * (AngleError-PrevAngleError);
  9614   003274  C0DC  F02E         	movff	_PrevAngleError,___flsub@a
  9615   003278  C0DD  F02F         	movff	_PrevAngleError+1,___flsub@a+1
  9616   00327C  C0DE  F030         	movff	_PrevAngleError+2,___flsub@a+2
  9617   003280  C0DF  F031         	movff	_PrevAngleError+3,___flsub@a+3
  9618   003284  C0E0  F02A         	movff	_AngleError,___flsub@b
  9619   003288  C0E1  F02B         	movff	_AngleError+1,___flsub@b+1
  9620   00328C  C0E2  F02C         	movff	_AngleError+2,___flsub@b+2
  9621   003290  C0E3  F02D         	movff	_AngleError+3,___flsub@b+3
  9622   003294  ECBE  F027         	call	___flsub	;wreg free
  9623   003298  C02A  F001         	movff	?___flsub,___flmul@b
  9624   00329C  C02B  F002         	movff	?___flsub+1,___flmul@b+1
  9625   0032A0  C02C  F003         	movff	?___flsub+2,___flmul@b+2
  9626   0032A4  C02D  F004         	movff	?___flsub+3,___flmul@b+3
  9627   0032A8  0EA6               	movlw	166
  9628   0032AA  6E05               	movwf	___flmul@a^0,c
  9629   0032AC  0E9B               	movlw	155
  9630   0032AE  6E06               	movwf	(___flmul@a+1)^0,c
  9631   0032B0  0EC4               	movlw	196
  9632   0032B2  6E07               	movwf	(___flmul@a+2)^0,c
  9633   0032B4  0E3A               	movlw	58
  9634   0032B6  6E08               	movwf	(___flmul@a+3)^0,c
  9635   0032B8  EC46  F00F         	call	___flmul	;wreg free
  9636   0032BC  C001  F184         	movff	?___flmul,_Dterm
  9637   0032C0  C002  F185         	movff	?___flmul+1,_Dterm+1
  9638   0032C4  C003  F186         	movff	?___flmul+2,_Dterm+2
  9639   0032C8  C004  F187         	movff	?___flmul+3,_Dterm+3
  9640   0032CC                     
  9641                           ;main.c: 100:     PID_U = Pterm + Iterm - Dterm;
  9642   0032CC  C0D8  F01E         	movff	_Iterm,___fladd@a
  9643   0032D0  C0D9  F01F         	movff	_Iterm+1,___fladd@a+1
  9644   0032D4  C0DA  F020         	movff	_Iterm+2,___fladd@a+2
  9645   0032D8  C0DB  F021         	movff	_Iterm+3,___fladd@a+3
  9646   0032DC  C188  F01A         	movff	_Pterm,___fladd@b
  9647   0032E0  C189  F01B         	movff	_Pterm+1,___fladd@b+1
  9648   0032E4  C18A  F01C         	movff	_Pterm+2,___fladd@b+2
  9649   0032E8  C18B  F01D         	movff	_Pterm+3,___fladd@b+3
  9650   0032EC  ECE6  F00C         	call	___fladd	;wreg free
  9651   0032F0  C01A  F03A         	movff	?___fladd,_WheelBalancePID$1812
  9652   0032F4  C01B  F03B         	movff	?___fladd+1,_WheelBalancePID$1812+1
  9653   0032F8  C01C  F03C         	movff	?___fladd+2,_WheelBalancePID$1812+2
  9654   0032FC  C01D  F03D         	movff	?___fladd+3,_WheelBalancePID$1812+3
  9655   003300                     
  9656                           ;main.c: 100:     PID_U = Pterm + Iterm - Dterm;
  9657   003300  C03A  F02A         	movff	_WheelBalancePID$1812,___flsub@b
  9658   003304  C03B  F02B         	movff	_WheelBalancePID$1812+1,___flsub@b+1
  9659   003308  C03C  F02C         	movff	_WheelBalancePID$1812+2,___flsub@b+2
  9660   00330C  C03D  F02D         	movff	_WheelBalancePID$1812+3,___flsub@b+3
  9661   003310  C184  F02E         	movff	_Dterm,___flsub@a
  9662   003314  C185  F02F         	movff	_Dterm+1,___flsub@a+1
  9663   003318  C186  F030         	movff	_Dterm+2,___flsub@a+2
  9664   00331C  C187  F031         	movff	_Dterm+3,___flsub@a+3
  9665   003320  ECBE  F027         	call	___flsub	;wreg free
  9666   003324  C02A  F180         	movff	?___flsub,_PID_U
  9667   003328  C02B  F181         	movff	?___flsub+1,_PID_U+1
  9668   00332C  C02C  F182         	movff	?___flsub+2,_PID_U+2
  9669   003330  C02D  F183         	movff	?___flsub+3,_PID_U+3
  9670   003334                     
  9671                           ;main.c: 101:     if (PID_U>Max)PID_U = Max;
  9672   003334  0E00               	movlw	0
  9673   003336  6E1A               	movwf	___flge@ff1^0,c
  9674   003338  0E00               	movlw	0
  9675   00333A  6E1B               	movwf	(___flge@ff1+1)^0,c
  9676   00333C  0E80               	movlw	128
  9677   00333E  6E1C               	movwf	(___flge@ff1+2)^0,c
  9678   003340  0E3F               	movlw	63
  9679   003342  6E1D               	movwf	(___flge@ff1+3)^0,c
  9680   003344  C180  F01E         	movff	_PID_U,___flge@ff2
  9681   003348  C181  F01F         	movff	_PID_U+1,___flge@ff2+1
  9682   00334C  C182  F020         	movff	_PID_U+2,___flge@ff2+2
  9683   003350  C183  F021         	movff	_PID_U+3,___flge@ff2+3
  9684   003354  EC1B  F023         	call	___flge	;wreg free
  9685   003358  B0D8               	btfsc	status,0,c
  9686   00335A  EFB1  F019         	goto	u7441
  9687   00335E  EFB3  F019         	goto	u7440
  9688   003362                     u7441:
  9689   003362  EFBE  F019         	goto	l6627
  9690   003366                     u7440:
  9691   003366  0E00               	movlw	0
  9692   003368  0101               	movlb	1	; () banked
  9693   00336A  6F80               	movwf	_PID_U& (0+255),b
  9694   00336C  0E00               	movlw	0
  9695   00336E  6F81               	movwf	(_PID_U+1)& (0+255),b
  9696   003370  0E80               	movlw	128
  9697   003372  6F82               	movwf	(_PID_U+2)& (0+255),b
  9698   003374  0E3F               	movlw	63
  9699   003376  6F83               	movwf	(_PID_U+3)& (0+255),b
  9700   003378  EFE0  F019         	goto	l6631
  9701   00337C                     l6627:
  9702   00337C  C180  F01A         	movff	_PID_U,___flge@ff1
  9703   003380  C181  F01B         	movff	_PID_U+1,___flge@ff1+1
  9704   003384  C182  F01C         	movff	_PID_U+2,___flge@ff1+2
  9705   003388  C183  F01D         	movff	_PID_U+3,___flge@ff1+3
  9706   00338C  0E00               	movlw	0
  9707   00338E  6E1E               	movwf	___flge@ff2^0,c
  9708   003390  0E00               	movlw	0
  9709   003392  6E1F               	movwf	(___flge@ff2+1)^0,c
  9710   003394  0E80               	movlw	128
  9711   003396  6E20               	movwf	(___flge@ff2+2)^0,c
  9712   003398  0EBF               	movlw	191
  9713   00339A  6E21               	movwf	(___flge@ff2+3)^0,c
  9714   00339C  EC1B  F023         	call	___flge	;wreg free
  9715   0033A0  B0D8               	btfsc	status,0,c
  9716   0033A2  EFD5  F019         	goto	u7451
  9717   0033A6  EFD7  F019         	goto	u7450
  9718   0033AA                     u7451:
  9719   0033AA  EFE0  F019         	goto	l6631
  9720   0033AE                     u7450:
  9721   0033AE  0E00               	movlw	0
  9722   0033B0  0101               	movlb	1	; () banked
  9723   0033B2  6F80               	movwf	_PID_U& (0+255),b
  9724   0033B4  0E00               	movlw	0
  9725   0033B6  6F81               	movwf	(_PID_U+1)& (0+255),b
  9726   0033B8  0E80               	movlw	128
  9727   0033BA  6F82               	movwf	(_PID_U+2)& (0+255),b
  9728   0033BC  0EBF               	movlw	191
  9729   0033BE  6F83               	movwf	(_PID_U+3)& (0+255),b
  9730   0033C0                     l6631:
  9731                           
  9732                           ;main.c: 104:     PrevIterm = Iterm;
  9733   0033C0  C0D8  F18C         	movff	_Iterm,_PrevIterm
  9734   0033C4  C0D9  F18D         	movff	_Iterm+1,_PrevIterm+1
  9735   0033C8  C0DA  F18E         	movff	_Iterm+2,_PrevIterm+2
  9736   0033CC  C0DB  F18F         	movff	_Iterm+3,_PrevIterm+3
  9737   0033D0                     
  9738                           ;main.c: 105:     PrevAngleError = AngleError;
  9739   0033D0  C0E0  F0DC         	movff	_AngleError,_PrevAngleError
  9740   0033D4  C0E1  F0DD         	movff	_AngleError+1,_PrevAngleError+1
  9741   0033D8  C0E2  F0DE         	movff	_AngleError+2,_PrevAngleError+2
  9742   0033DC  C0E3  F0DF         	movff	_AngleError+3,_PrevAngleError+3
  9743   0033E0                     
  9744                           ;main.c: 106:     return PID_U;
  9745   0033E0  C180  F032         	movff	_PID_U,?_WheelBalancePID
  9746   0033E4  C181  F033         	movff	_PID_U+1,?_WheelBalancePID+1
  9747   0033E8  C182  F034         	movff	_PID_U+2,?_WheelBalancePID+2
  9748   0033EC  C183  F035         	movff	_PID_U+3,?_WheelBalancePID+3
  9749   0033F0  0012               	return		;funcret
  9750   0033F2                     __end_of_WheelBalancePID:
  9751                           	callstack 0
  9752                           
  9753 ;; *************** function _UART_Write_String *****************
  9754 ;; Defined at:
  9755 ;;		line 31 in file "UART.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;  buf             2    1[COMRAM] PTR unsigned char 
  9758 ;;		 -> main@buffer(40), 
  9759 ;; Auto vars:     Size  Location     Type
  9760 ;;  i               2    3[COMRAM] int 
  9761 ;; Return value:  Size  Location     Type
  9762 ;;                  1    wreg      void 
  9763 ;; Registers used:
  9764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9765 ;; Tracked objects:
  9766 ;;		On entry : 0/0
  9767 ;;		On exit  : 0/0
  9768 ;;		Unchanged: 0/0
  9769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9770 ;;      Params:         2       0       0       0       0       0       0       0       0
  9771 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9772 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9773 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9774 ;;Total ram usage:        4 bytes
  9775 ;; Hardware stack levels used: 1
  9776 ;; Hardware stack levels required when called: 1
  9777 ;; This function calls:
  9778 ;;		_UART_Write
  9779 ;; This function is called by:
  9780 ;;		_main
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           	psect	text39
  9785   005006                     __ptext39:
  9786                           	callstack 0
  9787   005006                     _UART_Write_String:
  9788                           	callstack 29
  9789   005006                     
  9790                           ;UART.c: 31: void UART_Write_String(char* buf);UART.c: 32: {;UART.c: 33:     int i=0;
  9791   005006  0E00               	movlw	0
  9792   005008  6E05               	movwf	(UART_Write_String@i+1)^0,c
  9793   00500A  0E00               	movlw	0
  9794   00500C  6E04               	movwf	UART_Write_String@i^0,c
  9795                           
  9796                           ;UART.c: 34:     while(buf[i] != '\0')
  9797   00500E  EF14  F028         	goto	l6835
  9798   005012                     l6831:
  9799                           
  9800                           ;UART.c: 35:         UART_Write(buf[i++]);
  9801   005012  5004               	movf	UART_Write_String@i^0,w,c
  9802   005014  2402               	addwf	UART_Write_String@buf^0,w,c
  9803   005016  6ED9               	movwf	fsr2l,c
  9804   005018  5005               	movf	(UART_Write_String@i+1)^0,w,c
  9805   00501A  2003               	addwfc	(UART_Write_String@buf+1)^0,w,c
  9806   00501C  6EDA               	movwf	fsr2h,c
  9807   00501E  50DF               	movf	indf2,w,c
  9808   005020  EC1F  F029         	call	_UART_Write
  9809   005024  4A04               	infsnz	UART_Write_String@i^0,f,c
  9810   005026  2A05               	incf	(UART_Write_String@i+1)^0,f,c
  9811   005028                     l6835:
  9812                           
  9813                           ;UART.c: 34:     while(buf[i] != '\0')
  9814   005028  5004               	movf	UART_Write_String@i^0,w,c
  9815   00502A  2402               	addwf	UART_Write_String@buf^0,w,c
  9816   00502C  6ED9               	movwf	fsr2l,c
  9817   00502E  5005               	movf	(UART_Write_String@i+1)^0,w,c
  9818   005030  2003               	addwfc	(UART_Write_String@buf+1)^0,w,c
  9819   005032  6EDA               	movwf	fsr2h,c
  9820   005034  50DF               	movf	indf2,w,c
  9821   005036  A4D8               	btfss	status,2,c
  9822   005038  EF20  F028         	goto	u7501
  9823   00503C  EF22  F028         	goto	u7500
  9824   005040                     u7501:
  9825   005040  EF09  F028         	goto	l6831
  9826   005044                     u7500:
  9827   005044  0012               	return		;funcret
  9828   005046                     __end_of_UART_Write_String:
  9829                           	callstack 0
  9830                           
  9831 ;; *************** function _UART_Write *****************
  9832 ;; Defined at:
  9833 ;;		line 25 in file "UART.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;  data            1    wreg     unsigned char 
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;  data            1    0[COMRAM] unsigned char 
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1    wreg      void 
  9840 ;; Registers used:
  9841 ;;		wreg
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9847 ;;      Params:         0       0       0       0       0       0       0       0       0
  9848 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9850 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9851 ;;Total ram usage:        1 bytes
  9852 ;; Hardware stack levels used: 1
  9853 ;; This function calls:
  9854 ;;		Nothing
  9855 ;; This function is called by:
  9856 ;;		_UART_Write_String
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           	psect	text40
  9861   00523E                     __ptext40:
  9862                           	callstack 0
  9863   00523E                     _UART_Write:
  9864                           	callstack 29
  9865                           
  9866                           ;incstack = 0
  9867                           ;UART_Write@data stored from wreg
  9868   00523E  6E01               	movwf	UART_Write@data^0,c
  9869   005240                     l247:
  9870   005240  A2AC               	btfss	4012,1,c	;volatile
  9871   005242  EF25  F029         	goto	u7321
  9872   005246  EF27  F029         	goto	u7320
  9873   00524A                     u7321:
  9874   00524A  EF20  F029         	goto	l247
  9875   00524E                     u7320:
  9876   00524E                     
  9877                           ;UART.c: 28:   TXREG = data;
  9878   00524E  C001  FFAD         	movff	UART_Write@data,4013	;volatile
  9879   005252  0012               	return		;funcret
  9880   005254                     __end_of_UART_Write:
  9881                           	callstack 0
  9882                           
  9883 ;; *************** function _UART_TX_Init *****************
  9884 ;; Defined at:
  9885 ;;		line 6 in file "UART.c"
  9886 ;; Parameters:    Size  Location     Type
  9887 ;;		None
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;		None
  9890 ;; Return value:  Size  Location     Type
  9891 ;;                  1    wreg      void 
  9892 ;; Registers used:
  9893 ;;		wreg, status,2
  9894 ;; Tracked objects:
  9895 ;;		On entry : 0/0
  9896 ;;		On exit  : 0/0
  9897 ;;		Unchanged: 0/0
  9898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9899 ;;      Params:         0       0       0       0       0       0       0       0       0
  9900 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9901 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9902 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9903 ;;Total ram usage:        0 bytes
  9904 ;; Hardware stack levels used: 1
  9905 ;; This function calls:
  9906 ;;		Nothing
  9907 ;; This function is called by:
  9908 ;;		_main
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           	psect	text41
  9913   005204                     __ptext41:
  9914                           	callstack 0
  9915   005204                     _UART_TX_Init:
  9916                           	callstack 30
  9917   005204                     
  9918                           ;UART.c: 8:     TRISCbits.RC7=1;
  9919   005204  8E94               	bsf	148,7,c	;volatile
  9920                           
  9921                           ;UART.c: 9:     TRISCbits.RC6=1;
  9922   005206  8C94               	bsf	148,6,c	;volatile
  9923   005208                     
  9924                           ;UART.c: 11:     SPBRGH = (16 & 0xFF00) >> 8;
  9925   005208  0E00               	movlw	0
  9926   00520A  6EB0               	movwf	176,c	;volatile
  9927                           
  9928                           ;UART.c: 12:     SPBRG = 16 & 0x00FF;
  9929   00520C  0E10               	movlw	16
  9930   00520E  6EAF               	movwf	175,c	;volatile
  9931   005210                     
  9932                           ;UART.c: 14:     RCSTAbits.CREN = 1;
  9933   005210  88AB               	bsf	171,4,c	;volatile
  9934   005212                     
  9935                           ;UART.c: 15:     RCSTAbits.SPEN = 1;
  9936   005212  8EAB               	bsf	171,7,c	;volatile
  9937   005214                     
  9938                           ;UART.c: 16:     BAUDCONbits.BRG16 = 1;
  9939   005214  86B8               	bsf	184,3,c	;volatile
  9940   005216                     
  9941                           ;UART.c: 17:     TXSTAbits.SYNC = 0;
  9942   005216  98AC               	bcf	172,4,c	;volatile
  9943   005218                     
  9944                           ;UART.c: 18:     TXSTAbits.BRGH = 1;
  9945   005218  84AC               	bsf	172,2,c	;volatile
  9946   00521A                     
  9947                           ;UART.c: 19:     TXSTAbits.TXEN = 1;
  9948   00521A  8AAC               	bsf	172,5,c	;volatile
  9949   00521C                     
  9950                           ;UART.c: 20:     IPR1bits.RCIP=1;
  9951   00521C  8A9F               	bsf	159,5,c	;volatile
  9952   00521E                     
  9953                           ;UART.c: 21:     PIE1bits.RCIE=1;
  9954   00521E  8A9D               	bsf	157,5,c	;volatile
  9955   005220  0012               	return		;funcret
  9956   005222                     __end_of_UART_TX_Init:
  9957                           	callstack 0
  9958                           
  9959 ;; *************** function _MPU6050_Init *****************
  9960 ;; Defined at:
  9961 ;;		line 11 in file "Init_MPU6050.c"
  9962 ;; Parameters:    Size  Location     Type
  9963 ;;		None
  9964 ;; Auto vars:     Size  Location     Type
  9965 ;;		None
  9966 ;; Return value:  Size  Location     Type
  9967 ;;                  1    wreg      void 
  9968 ;; Registers used:
  9969 ;;		wreg, status,2, status,0, cstack
  9970 ;; Tracked objects:
  9971 ;;		On entry : 0/0
  9972 ;;		On exit  : 0/0
  9973 ;;		Unchanged: 0/0
  9974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9975 ;;      Params:         0       0       0       0       0       0       0       0       0
  9976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9977 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9978 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9979 ;;Total ram usage:        2 bytes
  9980 ;; Hardware stack levels used: 1
  9981 ;; Hardware stack levels required when called: 3
  9982 ;; This function calls:
  9983 ;;		_I2C_Master_Init
  9984 ;;		_I2C_Master_Stop
  9985 ;;		_I2C_Master_Write
  9986 ;;		_I2C_Start
  9987 ;; This function is called by:
  9988 ;;		_main
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text42
  9993   0043DE                     __ptext42:
  9994                           	callstack 0
  9995   0043DE                     _MPU6050_Init:
  9996                           	callstack 27
  9997   0043DE                     
  9998                           ;Init_MPU6050.c: 17:   _delay((unsigned long)((100)*(8000000/4000.0)));
  9999   0043DE  0E02               	movlw	2
 10000   0043E0  6E05               	movwf	(??_MPU6050_Init+1)^0,c
 10001   0043E2  0E04               	movlw	4
 10002   0043E4  6E04               	movwf	??_MPU6050_Init^0,c
 10003   0043E6  0EBA               	movlw	186
 10004   0043E8                     u8127:
 10005   0043E8  2EE8               	decfsz	wreg,f,c
 10006   0043EA  D7FE               	bra	u8127
 10007   0043EC  2E04               	decfsz	??_MPU6050_Init^0,f,c
 10008   0043EE  D7FC               	bra	u8127
 10009   0043F0  2E05               	decfsz	(??_MPU6050_Init+1)^0,f,c
 10010   0043F2  D7FA               	bra	u8127
 10011   0043F4  D000               	nop2	
 10012   0043F6                     
 10013                           ;Init_MPU6050.c: 18:   I2C_Master_Init();
 10014   0043F6  EC2A  F029         	call	_I2C_Master_Init	;wreg free
 10015   0043FA                     
 10016                           ;Init_MPU6050.c: 21:   I2C_Start(0xD0);
 10017   0043FA  0ED0               	movlw	208
 10018   0043FC  EC49  F029         	call	_I2C_Start
 10019   004400                     
 10020                           ;Init_MPU6050.c: 22:   I2C_Master_Write(0x19);
 10021   004400  0E19               	movlw	25
 10022   004402  EC11  F029         	call	_I2C_Master_Write
 10023   004406                     
 10024                           ;Init_MPU6050.c: 23:   I2C_Master_Write(0x07);
 10025   004406  0E07               	movlw	7
 10026   004408  EC11  F029         	call	_I2C_Master_Write
 10027   00440C                     
 10028                           ;Init_MPU6050.c: 24:   I2C_Master_Stop();
 10029   00440C  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10030   004410                     
 10031                           ;Init_MPU6050.c: 27:   I2C_Start(0xD0);
 10032   004410  0ED0               	movlw	208
 10033   004412  EC49  F029         	call	_I2C_Start
 10034   004416                     
 10035                           ;Init_MPU6050.c: 28:   I2C_Master_Write(0x6B);
 10036   004416  0E6B               	movlw	107
 10037   004418  EC11  F029         	call	_I2C_Master_Write
 10038   00441C                     
 10039                           ;Init_MPU6050.c: 29:   I2C_Master_Write(0x01);
 10040   00441C  0E01               	movlw	1
 10041   00441E  EC11  F029         	call	_I2C_Master_Write
 10042   004422                     
 10043                           ;Init_MPU6050.c: 30:   I2C_Master_Stop();
 10044   004422  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10045   004426                     
 10046                           ;Init_MPU6050.c: 33:   I2C_Start(0xD0);
 10047   004426  0ED0               	movlw	208
 10048   004428  EC49  F029         	call	_I2C_Start
 10049   00442C                     
 10050                           ;Init_MPU6050.c: 34:   I2C_Master_Write(0x1A);
 10051   00442C  0E1A               	movlw	26
 10052   00442E  EC11  F029         	call	_I2C_Master_Write
 10053   004432                     
 10054                           ;Init_MPU6050.c: 35:   I2C_Master_Write(0x00);
 10055   004432  0E00               	movlw	0
 10056   004434  EC11  F029         	call	_I2C_Master_Write
 10057   004438                     
 10058                           ;Init_MPU6050.c: 36:   I2C_Master_Stop();
 10059   004438  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10060   00443C                     
 10061                           ;Init_MPU6050.c: 39:   I2C_Start(0xD0);
 10062   00443C  0ED0               	movlw	208
 10063   00443E  EC49  F029         	call	_I2C_Start
 10064   004442                     
 10065                           ;Init_MPU6050.c: 40:   I2C_Master_Write(0x1C);
 10066   004442  0E1C               	movlw	28
 10067   004444  EC11  F029         	call	_I2C_Master_Write
 10068   004448                     
 10069                           ;Init_MPU6050.c: 41:   I2C_Master_Write(0x00);
 10070   004448  0E00               	movlw	0
 10071   00444A  EC11  F029         	call	_I2C_Master_Write
 10072   00444E                     
 10073                           ;Init_MPU6050.c: 42:   I2C_Master_Stop();
 10074   00444E  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10075   004452                     
 10076                           ;Init_MPU6050.c: 45:   I2C_Start(0xD0);
 10077   004452  0ED0               	movlw	208
 10078   004454  EC49  F029         	call	_I2C_Start
 10079   004458                     
 10080                           ;Init_MPU6050.c: 46:   I2C_Master_Write(0x1B);
 10081   004458  0E1B               	movlw	27
 10082   00445A  EC11  F029         	call	_I2C_Master_Write
 10083   00445E                     
 10084                           ;Init_MPU6050.c: 47:   I2C_Master_Write(0x18);
 10085   00445E  0E18               	movlw	24
 10086   004460  EC11  F029         	call	_I2C_Master_Write
 10087   004464                     
 10088                           ;Init_MPU6050.c: 48:   I2C_Master_Stop();
 10089   004464  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10090   004468                     
 10091                           ;Init_MPU6050.c: 51:   I2C_Start(0xD0);
 10092   004468  0ED0               	movlw	208
 10093   00446A  EC49  F029         	call	_I2C_Start
 10094   00446E                     
 10095                           ;Init_MPU6050.c: 52:   I2C_Master_Write(0x38);
 10096   00446E  0E38               	movlw	56
 10097   004470  EC11  F029         	call	_I2C_Master_Write
 10098   004474                     
 10099                           ;Init_MPU6050.c: 53:   I2C_Master_Write(0x01);
 10100   004474  0E01               	movlw	1
 10101   004476  EC11  F029         	call	_I2C_Master_Write
 10102   00447A                     
 10103                           ;Init_MPU6050.c: 54:   I2C_Master_Stop();
 10104   00447A  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10105   00447E                     
 10106                           ;Init_MPU6050.c: 57:   I2C_Start(0xD0);
 10107   00447E  0ED0               	movlw	208
 10108   004480  EC49  F029         	call	_I2C_Start
 10109   004484                     
 10110                           ;Init_MPU6050.c: 58:   I2C_Master_Write(0x23);
 10111   004484  0E23               	movlw	35
 10112   004486  EC11  F029         	call	_I2C_Master_Write
 10113   00448A                     
 10114                           ;Init_MPU6050.c: 59:   I2C_Master_Write(0x4F);
 10115   00448A  0E4F               	movlw	79
 10116   00448C  EC11  F029         	call	_I2C_Master_Write
 10117   004490                     
 10118                           ;Init_MPU6050.c: 60:   I2C_Master_Stop();
 10119   004490  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10120   004494                     
 10121                           ;Init_MPU6050.c: 68:   I2C_Start(0xD2);
 10122   004494  0ED2               	movlw	210
 10123   004496  EC49  F029         	call	_I2C_Start
 10124   00449A                     
 10125                           ;Init_MPU6050.c: 69:   I2C_Master_Write(0x19);
 10126   00449A  0E19               	movlw	25
 10127   00449C  EC11  F029         	call	_I2C_Master_Write
 10128   0044A0                     
 10129                           ;Init_MPU6050.c: 70:   I2C_Master_Write(0x07);
 10130   0044A0  0E07               	movlw	7
 10131   0044A2  EC11  F029         	call	_I2C_Master_Write
 10132   0044A6                     
 10133                           ;Init_MPU6050.c: 71:   I2C_Master_Stop();
 10134   0044A6  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10135   0044AA                     
 10136                           ;Init_MPU6050.c: 74:   I2C_Start(0xD2);
 10137   0044AA  0ED2               	movlw	210
 10138   0044AC  EC49  F029         	call	_I2C_Start
 10139   0044B0                     
 10140                           ;Init_MPU6050.c: 75:   I2C_Master_Write(0x6B);
 10141   0044B0  0E6B               	movlw	107
 10142   0044B2  EC11  F029         	call	_I2C_Master_Write
 10143   0044B6                     
 10144                           ;Init_MPU6050.c: 76:   I2C_Master_Write(0x01);
 10145   0044B6  0E01               	movlw	1
 10146   0044B8  EC11  F029         	call	_I2C_Master_Write
 10147   0044BC                     
 10148                           ;Init_MPU6050.c: 77:   I2C_Master_Stop();
 10149   0044BC  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10150   0044C0                     
 10151                           ;Init_MPU6050.c: 80:   I2C_Start(0xD2);
 10152   0044C0  0ED2               	movlw	210
 10153   0044C2  EC49  F029         	call	_I2C_Start
 10154   0044C6                     
 10155                           ;Init_MPU6050.c: 81:   I2C_Master_Write(0x1A);
 10156   0044C6  0E1A               	movlw	26
 10157   0044C8  EC11  F029         	call	_I2C_Master_Write
 10158   0044CC                     
 10159                           ;Init_MPU6050.c: 82:   I2C_Master_Write(0x00);
 10160   0044CC  0E00               	movlw	0
 10161   0044CE  EC11  F029         	call	_I2C_Master_Write
 10162   0044D2                     
 10163                           ;Init_MPU6050.c: 83:   I2C_Master_Stop();
 10164   0044D2  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10165   0044D6                     
 10166                           ;Init_MPU6050.c: 86:   I2C_Start(0xD2);
 10167   0044D6  0ED2               	movlw	210
 10168   0044D8  EC49  F029         	call	_I2C_Start
 10169   0044DC                     
 10170                           ;Init_MPU6050.c: 87:   I2C_Master_Write(0x1C);
 10171   0044DC  0E1C               	movlw	28
 10172   0044DE  EC11  F029         	call	_I2C_Master_Write
 10173   0044E2                     
 10174                           ;Init_MPU6050.c: 88:   I2C_Master_Write(0x00);
 10175   0044E2  0E00               	movlw	0
 10176   0044E4  EC11  F029         	call	_I2C_Master_Write
 10177   0044E8                     
 10178                           ;Init_MPU6050.c: 89:   I2C_Master_Stop();
 10179   0044E8  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10180   0044EC                     
 10181                           ;Init_MPU6050.c: 92:   I2C_Start(0xD2);
 10182   0044EC  0ED2               	movlw	210
 10183   0044EE  EC49  F029         	call	_I2C_Start
 10184   0044F2                     
 10185                           ;Init_MPU6050.c: 93:   I2C_Master_Write(0x1B);
 10186   0044F2  0E1B               	movlw	27
 10187   0044F4  EC11  F029         	call	_I2C_Master_Write
 10188   0044F8                     
 10189                           ;Init_MPU6050.c: 94:   I2C_Master_Write(0x18);
 10190   0044F8  0E18               	movlw	24
 10191   0044FA  EC11  F029         	call	_I2C_Master_Write
 10192   0044FE                     
 10193                           ;Init_MPU6050.c: 95:   I2C_Master_Stop();
 10194   0044FE  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10195   004502                     
 10196                           ;Init_MPU6050.c: 98:   I2C_Start(0xD2);
 10197   004502  0ED2               	movlw	210
 10198   004504  EC49  F029         	call	_I2C_Start
 10199   004508                     
 10200                           ;Init_MPU6050.c: 99:   I2C_Master_Write(0x38);
 10201   004508  0E38               	movlw	56
 10202   00450A  EC11  F029         	call	_I2C_Master_Write
 10203   00450E                     
 10204                           ;Init_MPU6050.c: 100:   I2C_Master_Write(0x01);
 10205   00450E  0E01               	movlw	1
 10206   004510  EC11  F029         	call	_I2C_Master_Write
 10207   004514                     
 10208                           ;Init_MPU6050.c: 101:   I2C_Master_Stop();
 10209   004514  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10210   004518                     
 10211                           ;Init_MPU6050.c: 104:   I2C_Start(0xD2);
 10212   004518  0ED2               	movlw	210
 10213   00451A  EC49  F029         	call	_I2C_Start
 10214   00451E                     
 10215                           ;Init_MPU6050.c: 105:   I2C_Master_Write(0x23);
 10216   00451E  0E23               	movlw	35
 10217   004520  EC11  F029         	call	_I2C_Master_Write
 10218   004524                     
 10219                           ;Init_MPU6050.c: 106:   I2C_Master_Write(0x2F);
 10220   004524  0E2F               	movlw	47
 10221   004526  EC11  F029         	call	_I2C_Master_Write
 10222   00452A                     
 10223                           ;Init_MPU6050.c: 107:   I2C_Master_Stop();
 10224   00452A  EC56  F029         	call	_I2C_Master_Stop	;wreg free
 10225   00452E  0012               	return		;funcret
 10226   004530                     __end_of_MPU6050_Init:
 10227                           	callstack 0
 10228                           
 10229 ;; *************** function _I2C_Start *****************
 10230 ;; Defined at:
 10231 ;;		line 28 in file "I2C.c"
 10232 ;; Parameters:    Size  Location     Type
 10233 ;;  add             1    wreg     unsigned char 
 10234 ;; Auto vars:     Size  Location     Type
 10235 ;;  add             1    2[COMRAM] unsigned char 
 10236 ;; Return value:  Size  Location     Type
 10237 ;;                  1    wreg      void 
 10238 ;; Registers used:
 10239 ;;		wreg, status,2, status,0, cstack
 10240 ;; Tracked objects:
 10241 ;;		On entry : 0/0
 10242 ;;		On exit  : 0/0
 10243 ;;		Unchanged: 0/0
 10244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10245 ;;      Params:         0       0       0       0       0       0       0       0       0
 10246 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10247 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10248 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10249 ;;Total ram usage:        1 bytes
 10250 ;; Hardware stack levels used: 1
 10251 ;; Hardware stack levels required when called: 2
 10252 ;; This function calls:
 10253 ;;		_I2C_Master_Wait
 10254 ;;		_I2C_Master_Write
 10255 ;; This function is called by:
 10256 ;;		_WheelMPU6050_Read
 10257 ;;		_ArmMPU6050_Read
 10258 ;;		_MPU6050_Init
 10259 ;; This function uses a non-reentrant model
 10260 ;;
 10261                           
 10262                           	psect	text43
 10263   005292                     __ptext43:
 10264                           	callstack 0
 10265   005292                     _I2C_Start:
 10266                           	callstack 26
 10267                           
 10268                           ;incstack = 0
 10269                           ;I2C_Start@add stored from wreg
 10270   005292  6E03               	movwf	I2C_Start@add^0,c
 10271   005294                     
 10272                           ;I2C.c: 28: void I2C_Start(char add);I2C.c: 29: {;I2C.c: 30:     I2C_Master_Wait();
 10273   005294  ECEF  F028         	call	_I2C_Master_Wait	;wreg free
 10274   005298                     
 10275                           ;I2C.c: 31:     SEN = 1;
 10276   005298  80C5               	bsf	4037,0,c	;volatile
 10277                           
 10278                           ;I2C.c: 32:     I2C_Master_Write(add);
 10279   00529A  5003               	movf	I2C_Start@add^0,w,c
 10280   00529C  EC11  F029         	call	_I2C_Master_Write
 10281   0052A0  0012               	return		;funcret
 10282   0052A2                     __end_of_I2C_Start:
 10283                           	callstack 0
 10284                           
 10285 ;; *************** function _I2C_Master_Write *****************
 10286 ;; Defined at:
 10287 ;;		line 61 in file "I2C.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;  data            1    wreg     unsigned char 
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;  data            1    1[COMRAM] unsigned char 
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  1    wreg      unsigned char 
 10294 ;; Registers used:
 10295 ;;		wreg, status,2, status,0, cstack
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10301 ;;      Params:         0       0       0       0       0       0       0       0       0
 10302 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10303 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10304 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10305 ;;Total ram usage:        1 bytes
 10306 ;; Hardware stack levels used: 1
 10307 ;; Hardware stack levels required when called: 1
 10308 ;; This function calls:
 10309 ;;		_I2C_Master_Wait
 10310 ;; This function is called by:
 10311 ;;		_I2C_Start
 10312 ;;		_WheelMPU6050_Read
 10313 ;;		_ArmMPU6050_Read
 10314 ;;		_MPU6050_Init
 10315 ;; This function uses a non-reentrant model
 10316 ;;
 10317                           
 10318                           	psect	text44
 10319   005222                     __ptext44:
 10320                           	callstack 0
 10321   005222                     _I2C_Master_Write:
 10322                           	callstack 26
 10323                           
 10324                           ;incstack = 0
 10325                           ;I2C_Master_Write@data stored from wreg
 10326   005222  6E02               	movwf	I2C_Master_Write@data^0,c
 10327   005224                     
 10328                           ;I2C.c: 61: unsigned char I2C_Master_Write(unsigned char data);I2C.c: 62: {;I2C.c: 63:  
      +                             I2C_Master_Wait();
 10329   005224  ECEF  F028         	call	_I2C_Master_Wait	;wreg free
 10330   005228                     
 10331                           ;I2C.c: 64:     SSPBUF = data;
 10332   005228  C002  FFC9         	movff	I2C_Master_Write@data,4041	;volatile
 10333   00522C                     l201:
 10334   00522C  A69E               	btfss	3998,3,c	;volatile
 10335   00522E  EF1B  F029         	goto	u6421
 10336   005232  EF1D  F029         	goto	u6420
 10337   005236                     u6421:
 10338   005236  EF16  F029         	goto	l201
 10339   00523A                     u6420:
 10340   00523A                     
 10341                           ;I2C.c: 66:  SSPIF = 0;
 10342   00523A  969E               	bcf	3998,3,c	;volatile
 10343   00523C  0012               	return		;funcret
 10344   00523E                     __end_of_I2C_Master_Write:
 10345                           	callstack 0
 10346                           
 10347 ;; *************** function _I2C_Master_Stop *****************
 10348 ;; Defined at:
 10349 ;;		line 41 in file "I2C.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;		None
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;		None
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      void 
 10356 ;; Registers used:
 10357 ;;		wreg, status,2, status,0, cstack
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10363 ;;      Params:         0       0       0       0       0       0       0       0       0
 10364 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10365 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10366 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10367 ;;Total ram usage:        0 bytes
 10368 ;; Hardware stack levels used: 1
 10369 ;; Hardware stack levels required when called: 1
 10370 ;; This function calls:
 10371 ;;		_I2C_Master_Wait
 10372 ;; This function is called by:
 10373 ;;		_WheelMPU6050_Read
 10374 ;;		_ArmMPU6050_Read
 10375 ;;		_MPU6050_Init
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           	psect	text45
 10380   0052AC                     __ptext45:
 10381                           	callstack 0
 10382   0052AC                     _I2C_Master_Stop:
 10383                           	callstack 27
 10384   0052AC                     
 10385                           ;I2C.c: 43:     I2C_Master_Wait();
 10386   0052AC  ECEF  F028         	call	_I2C_Master_Wait	;wreg free
 10387   0052B0                     
 10388                           ;I2C.c: 44:     PEN = 1;
 10389   0052B0  84C5               	bsf	4037,2,c	;volatile
 10390   0052B2  0012               	return		;funcret
 10391   0052B4                     __end_of_I2C_Master_Stop:
 10392                           	callstack 0
 10393                           
 10394 ;; *************** function _I2C_Master_Wait *****************
 10395 ;; Defined at:
 10396 ;;		line 17 in file "I2C.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;		None
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;		None
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  1    wreg      void 
 10403 ;; Registers used:
 10404 ;;		wreg, status,2, status,0
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10410 ;;      Params:         0       0       0       0       0       0       0       0       0
 10411 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10412 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10413 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10414 ;;Total ram usage:        1 bytes
 10415 ;; Hardware stack levels used: 1
 10416 ;; This function calls:
 10417 ;;		Nothing
 10418 ;; This function is called by:
 10419 ;;		_I2C_Start
 10420 ;;		_I2C_Master_Stop
 10421 ;;		_I2C_Master_Write
 10422 ;;		_I2C_Master_Start
 10423 ;;		_I2C_Master_RepeatedStart
 10424 ;;		_I2C_Read_Byte
 10425 ;; This function uses a non-reentrant model
 10426 ;;
 10427                           
 10428                           	psect	text46
 10429   0051DE                     __ptext46:
 10430                           	callstack 0
 10431   0051DE                     _I2C_Master_Wait:
 10432                           	callstack 26
 10433   0051DE                     l171:
 10434   0051DE  B4C7               	btfsc	199,2,c	;volatile
 10435   0051E0  EFF4  F028         	goto	u5481
 10436   0051E4  EFF6  F028         	goto	u5480
 10437   0051E8                     u5481:
 10438   0051E8  EFEF  F028         	goto	l171
 10439   0051EC                     u5480:
 10440   0051EC  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
 10441   0051F0  0E1F               	movlw	31
 10442   0051F2  1601               	andwf	??_I2C_Master_Wait^0,f,c
 10443   0051F4  A4D8               	btfss	status,2,c
 10444   0051F6  EFFF  F028         	goto	u5491
 10445   0051FA  EF01  F029         	goto	u5490
 10446   0051FE                     u5491:
 10447   0051FE  EFEF  F028         	goto	l171
 10448   005202                     u5490:
 10449   005202  0012               	return		;funcret
 10450   005204                     __end_of_I2C_Master_Wait:
 10451                           	callstack 0
 10452                           
 10453 ;; *************** function _I2C_Master_Init *****************
 10454 ;; Defined at:
 10455 ;;		line 7 in file "I2C.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;		None
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;		None
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1    wreg      void 
 10462 ;; Registers used:
 10463 ;;		wreg, status,2
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10469 ;;      Params:         0       0       0       0       0       0       0       0       0
 10470 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10471 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10472 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10473 ;;Total ram usage:        0 bytes
 10474 ;; Hardware stack levels used: 1
 10475 ;; This function calls:
 10476 ;;		Nothing
 10477 ;; This function is called by:
 10478 ;;		_MPU6050_Init
 10479 ;; This function uses a non-reentrant model
 10480 ;;
 10481                           
 10482                           	psect	text47
 10483   005254                     __ptext47:
 10484                           	callstack 0
 10485   005254                     _I2C_Master_Init:
 10486                           	callstack 29
 10487   005254                     
 10488                           ;I2C.c: 9:   SSPCON1 = 0x28;
 10489   005254  0E28               	movlw	40
 10490   005256  6EC6               	movwf	198,c	;volatile
 10491                           
 10492                           ;I2C.c: 10:   SSPCON2 = 0x00;
 10493   005258  0E00               	movlw	0
 10494   00525A  6EC5               	movwf	197,c	;volatile
 10495                           
 10496                           ;I2C.c: 11:   SSPSTAT = 0x00;
 10497   00525C  0E00               	movlw	0
 10498   00525E  6EC7               	movwf	199,c	;volatile
 10499                           
 10500                           ;I2C.c: 12:   SSPADD = ((8000000/4)/400000) - 1;
 10501   005260  0E04               	movlw	4
 10502   005262  6EC8               	movwf	200,c	;volatile
 10503   005264                     
 10504                           ;I2C.c: 13:   TRISB1 = 1;
 10505   005264  8293               	bsf	3987,1,c	;volatile
 10506   005266                     
 10507                           ;I2C.c: 14:   TRISB0 = 1;
 10508   005266  8093               	bsf	3987,0,c	;volatile
 10509   005268  0012               	return		;funcret
 10510   00526A                     __end_of_I2C_Master_Init:
 10511                           	callstack 0
 10512                           
 10513 ;; *************** function _BothWheels *****************
 10514 ;; Defined at:
 10515 ;;		line 111 in file "main.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  direction       1    wreg     _Bool 
 10518 ;;  steps           2    0[COMRAM] unsigned int 
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;  direction       1    7[COMRAM] _Bool 
 10521 ;;  i               2    5[COMRAM] int 
 10522 ;;  frequency       2    3[COMRAM] int 
 10523 ;; Return value:  Size  Location     Type
 10524 ;;                  1    wreg      void 
 10525 ;; Registers used:
 10526 ;;		wreg, status,2, status,0
 10527 ;; Tracked objects:
 10528 ;;		On entry : 0/0
 10529 ;;		On exit  : 0/0
 10530 ;;		Unchanged: 0/0
 10531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10532 ;;      Params:         2       0       0       0       0       0       0       0       0
 10533 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10534 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10535 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10536 ;;Total ram usage:        8 bytes
 10537 ;; Hardware stack levels used: 1
 10538 ;; This function calls:
 10539 ;;		Nothing
 10540 ;; This function is called by:
 10541 ;;		_main
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           	psect	text48
 10546   004D46                     __ptext48:
 10547                           	callstack 0
 10548   004D46                     _BothWheels:
 10549                           	callstack 30
 10550                           
 10551                           ;incstack = 0
 10552                           ;BothWheels@direction stored from wreg
 10553   004D46  6E08               	movwf	BothWheels@direction^0,c
 10554   004D48                     
 10555                           ;main.c: 113:     LATDbits.LATD1 = direction;
 10556   004D48  B008               	btfsc	BothWheels@direction^0,0,c
 10557   004D4A  D002               	bra	u7465
 10558   004D4C  928C               	bcf	140,1,c	;volatile
 10559   004D4E  D001               	bra	u7466
 10560   004D50                     u7465:
 10561   004D50  828C               	bsf	140,1,c	;volatile
 10562   004D52                     u7466:
 10563   004D52                     
 10564                           ;main.c: 114:     LATBbits.LATB3 = ~direction;
 10565   004D52  5008               	movf	BothWheels@direction^0,w,c
 10566   004D54  0AFF               	xorlw	255
 10567   004D56  6E03               	movwf	??_BothWheels^0,c
 10568   004D58  4603               	rlncf	??_BothWheels^0,f,c
 10569   004D5A  4603               	rlncf	??_BothWheels^0,f,c
 10570   004D5C  4603               	rlncf	??_BothWheels^0,f,c
 10571   004D5E  508A               	movf	138,w,c	;volatile
 10572   004D60  1803               	xorwf	??_BothWheels^0,w,c
 10573   004D62  0BF7               	andlw	-9
 10574   004D64  1803               	xorwf	??_BothWheels^0,w,c
 10575   004D66  6E8A               	movwf	138,c	;volatile
 10576   004D68                     
 10577                           ;main.c: 116:     int frequency =1;
 10578   004D68  0E00               	movlw	0
 10579   004D6A  6E05               	movwf	(BothWheels@frequency+1)^0,c
 10580   004D6C  0E01               	movlw	1
 10581   004D6E  6E04               	movwf	BothWheels@frequency^0,c
 10582   004D70                     
 10583                           ;main.c: 119:     LATDbits.LATD0 = 1;
 10584   004D70  808C               	bsf	140,0,c	;volatile
 10585   004D72                     
 10586                           ;main.c: 120:     LATBbits.LATB4 = 1;
 10587   004D72  888A               	bsf	138,4,c	;volatile
 10588   004D74                     
 10589                           ;main.c: 122:     for(int i = 0; i<frequency;i++){
 10590   004D74  0E00               	movlw	0
 10591   004D76  6E07               	movwf	(BothWheels@i+1)^0,c
 10592   004D78  0E00               	movlw	0
 10593   004D7A  6E06               	movwf	BothWheels@i^0,c
 10594   004D7C  EFC2  F026         	goto	l6653
 10595   004D80                     l6651:
 10596                           
 10597                           ;main.c: 124:     }
 10598   004D80  4A06               	infsnz	BothWheels@i^0,f,c
 10599   004D82  2A07               	incf	(BothWheels@i+1)^0,f,c
 10600   004D84                     l6653:
 10601   004D84  5004               	movf	BothWheels@frequency^0,w,c
 10602   004D86  5C06               	subwf	BothWheels@i^0,w,c
 10603   004D88  5007               	movf	(BothWheels@i+1)^0,w,c
 10604   004D8A  0A80               	xorlw	128
 10605   004D8C  6E03               	movwf	??_BothWheels^0,c
 10606   004D8E  5005               	movf	(BothWheels@frequency+1)^0,w,c
 10607   004D90  0A80               	xorlw	128
 10608   004D92  5803               	subwfb	??_BothWheels^0,w,c
 10609   004D94  A0D8               	btfss	status,0,c
 10610   004D96  EFCF  F026         	goto	u7471
 10611   004D9A  EFD1  F026         	goto	u7470
 10612   004D9E                     u7471:
 10613   004D9E  EFC0  F026         	goto	l6651
 10614   004DA2                     u7470:
 10615   004DA2                     
 10616                           ;main.c: 125:     LATDbits.LATD0 = 0;
 10617   004DA2  908C               	bcf	140,0,c	;volatile
 10618                           
 10619                           ;main.c: 126:     LATBbits.LATB4 = 0;
 10620   004DA4  988A               	bcf	138,4,c	;volatile
 10621   004DA6  0012               	return		;funcret
 10622   004DA8                     __end_of_BothWheels:
 10623                           	callstack 0
 10624                           
 10625 ;; *************** function _ArmMotor *****************
 10626 ;; Defined at:
 10627 ;;		line 64 in file "main.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;  direction       1    wreg     _Bool 
 10630 ;;  steps           2    7[COMRAM] unsigned int 
 10631 ;; Auto vars:     Size  Location     Type
 10632 ;;  direction       1   10[COMRAM] _Bool 
 10633 ;;  i               2   15[COMRAM] int 
 10634 ;;  k               2   13[COMRAM] int 
 10635 ;;  frequency       2   11[COMRAM] int 
 10636 ;; Return value:  Size  Location     Type
 10637 ;;                  1    wreg      void 
 10638 ;; Registers used:
 10639 ;;		wreg, status,2, status,0, cstack
 10640 ;; Tracked objects:
 10641 ;;		On entry : 0/0
 10642 ;;		On exit  : 0/0
 10643 ;;		Unchanged: 0/0
 10644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10645 ;;      Params:         2       0       0       0       0       0       0       0       0
 10646 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10647 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10648 ;;      Totals:        10       0       0       0       0       0       0       0       0
 10649 ;;Total ram usage:       10 bytes
 10650 ;; Hardware stack levels used: 1
 10651 ;; Hardware stack levels required when called: 1
 10652 ;; This function calls:
 10653 ;;		___lwdiv
 10654 ;; This function is called by:
 10655 ;;		_main
 10656 ;; This function uses a non-reentrant model
 10657 ;;
 10658                           
 10659                           	psect	text49
 10660   004BC8                     __ptext49:
 10661                           	callstack 0
 10662   004BC8                     _ArmMotor:
 10663                           	callstack 29
 10664                           
 10665                           ;incstack = 0
 10666                           ;ArmMotor@direction stored from wreg
 10667   004BC8  6E0B               	movwf	ArmMotor@direction^0,c
 10668   004BCA                     
 10669                           ;main.c: 66:     TRISCbits.RC0 = 0;
 10670   004BCA  9094               	bcf	148,0,c	;volatile
 10671                           
 10672                           ;main.c: 67:     TRISCbits.RC1 = 0;
 10673   004BCC  9294               	bcf	148,1,c	;volatile
 10674   004BCE                     
 10675                           ;main.c: 68:     LATCbits.LATC1 = direction;
 10676   004BCE  B00B               	btfsc	ArmMotor@direction^0,0,c
 10677   004BD0  D002               	bra	u7395
 10678   004BD2  928B               	bcf	139,1,c	;volatile
 10679   004BD4  D001               	bra	u7396
 10680   004BD6                     u7395:
 10681   004BD6  828B               	bsf	139,1,c	;volatile
 10682   004BD8                     u7396:
 10683   004BD8                     
 10684                           ;main.c: 71:     int frequency = 5000/steps;
 10685   004BD8  0E13               	movlw	19
 10686   004BDA  6E02               	movwf	(___lwdiv@dividend+1)^0,c
 10687   004BDC  0E88               	movlw	136
 10688   004BDE  6E01               	movwf	___lwdiv@dividend^0,c
 10689   004BE0  C008  F003         	movff	ArmMotor@steps,___lwdiv@divisor
 10690   004BE4  C009  F004         	movff	ArmMotor@steps+1,___lwdiv@divisor+1
 10691   004BE8  EC32  F026         	call	___lwdiv	;wreg free
 10692   004BEC  C001  F00C         	movff	?___lwdiv,ArmMotor@frequency
 10693   004BF0  C002  F00D         	movff	?___lwdiv+1,ArmMotor@frequency+1
 10694   004BF4                     
 10695                           ;main.c: 73:     int k = 0;
 10696   004BF4  0E00               	movlw	0
 10697   004BF6  6E0F               	movwf	(ArmMotor@k+1)^0,c
 10698   004BF8  0E00               	movlw	0
 10699   004BFA  6E0E               	movwf	ArmMotor@k^0,c
 10700                           
 10701                           ;main.c: 75:     while(k<steps/30){
 10702   004BFC  EF1C  F026         	goto	l6601
 10703   004C00                     l96:
 10704                           
 10705                           ;main.c: 76:         LATCbits.LATC0 = 1;
 10706   004C00  808B               	bsf	139,0,c	;volatile
 10707   004C02                     
 10708                           ;main.c: 77:         i = 0;
 10709   004C02  0E00               	movlw	0
 10710   004C04  6E11               	movwf	(ArmMotor@i+1)^0,c
 10711   004C06  0E00               	movlw	0
 10712   004C08  6E10               	movwf	ArmMotor@i^0,c
 10713                           
 10714                           ;main.c: 78:         while(i<frequency){
 10715   004C0A  EF0A  F026         	goto	l6595
 10716   004C0E                     l98:
 10717                           
 10718                           ;main.c: 79:             _delay((unsigned long)((1)*(8000000/4000000.0)));
 10719   004C0E  D000               	nop2		;2 cycle nop
 10720   004C10                     
 10721                           ;main.c: 80:             i++;
 10722   004C10  4A10               	infsnz	ArmMotor@i^0,f,c
 10723   004C12  2A11               	incf	(ArmMotor@i+1)^0,f,c
 10724   004C14                     l6595:
 10725                           
 10726                           ;main.c: 78:         while(i<frequency){
 10727   004C14  500C               	movf	ArmMotor@frequency^0,w,c
 10728   004C16  5C10               	subwf	ArmMotor@i^0,w,c
 10729   004C18  5011               	movf	(ArmMotor@i+1)^0,w,c
 10730   004C1A  0A80               	xorlw	128
 10731   004C1C  6E0A               	movwf	??_ArmMotor^0,c
 10732   004C1E  500D               	movf	(ArmMotor@frequency+1)^0,w,c
 10733   004C20  0A80               	xorlw	128
 10734   004C22  580A               	subwfb	??_ArmMotor^0,w,c
 10735   004C24  A0D8               	btfss	status,0,c
 10736   004C26  EF17  F026         	goto	u7401
 10737   004C2A  EF19  F026         	goto	u7400
 10738   004C2E                     u7401:
 10739   004C2E  EF07  F026         	goto	l98
 10740   004C32                     u7400:
 10741   004C32                     
 10742                           ;main.c: 82:         k++;
 10743   004C32  4A0E               	infsnz	ArmMotor@k^0,f,c
 10744   004C34  2A0F               	incf	(ArmMotor@k+1)^0,f,c
 10745   004C36                     
 10746                           ;main.c: 83:         LATCbits.LATC0 = 0;
 10747   004C36  908B               	bcf	139,0,c	;volatile
 10748   004C38                     l6601:
 10749                           
 10750                           ;main.c: 75:     while(k<steps/30){
 10751   004C38  C008  F001         	movff	ArmMotor@steps,___lwdiv@dividend
 10752   004C3C  C009  F002         	movff	ArmMotor@steps+1,___lwdiv@dividend+1
 10753   004C40  0E00               	movlw	0
 10754   004C42  6E04               	movwf	(___lwdiv@divisor+1)^0,c
 10755   004C44  0E1E               	movlw	30
 10756   004C46  6E03               	movwf	___lwdiv@divisor^0,c
 10757   004C48  EC32  F026         	call	___lwdiv	;wreg free
 10758   004C4C  5001               	movf	?___lwdiv^0,w,c
 10759   004C4E  5C0E               	subwf	ArmMotor@k^0,w,c
 10760   004C50  5002               	movf	(?___lwdiv+1)^0,w,c
 10761   004C52  580F               	subwfb	(ArmMotor@k+1)^0,w,c
 10762   004C54  A0D8               	btfss	status,0,c
 10763   004C56  EF2F  F026         	goto	u7411
 10764   004C5A  EF31  F026         	goto	u7410
 10765   004C5E                     u7411:
 10766   004C5E  EF00  F026         	goto	l96
 10767   004C62                     u7410:
 10768   004C62  0012               	return		;funcret
 10769   004C64                     __end_of_ArmMotor:
 10770                           	callstack 0
 10771                           
 10772 ;; *************** function ___lwdiv *****************
 10773 ;; Defined at:
 10774 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;  dividend        2    0[COMRAM] unsigned int 
 10777 ;;  divisor         2    2[COMRAM] unsigned int 
 10778 ;; Auto vars:     Size  Location     Type
 10779 ;;  quotient        2    5[COMRAM] unsigned int 
 10780 ;;  counter         1    4[COMRAM] unsigned char 
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  2    0[COMRAM] unsigned int 
 10783 ;; Registers used:
 10784 ;;		wreg, status,2, status,0
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10790 ;;      Params:         4       0       0       0       0       0       0       0       0
 10791 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10792 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10793 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10794 ;;Total ram usage:        7 bytes
 10795 ;; Hardware stack levels used: 1
 10796 ;; This function calls:
 10797 ;;		Nothing
 10798 ;; This function is called by:
 10799 ;;		_ArmMotor
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           	psect	text50
 10804   004C64                     __ptext50:
 10805                           	callstack 0
 10806   004C64                     ___lwdiv:
 10807                           	callstack 29
 10808   004C64  0E00               	movlw	0
 10809   004C66  6E07               	movwf	(___lwdiv@quotient+1)^0,c
 10810   004C68  0E00               	movlw	0
 10811   004C6A  6E06               	movwf	___lwdiv@quotient^0,c
 10812   004C6C  5003               	movf	___lwdiv@divisor^0,w,c
 10813   004C6E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10814   004C70  B4D8               	btfsc	status,2,c
 10815   004C72  EF3D  F026         	goto	u7331
 10816   004C76  EF3F  F026         	goto	u7330
 10817   004C7A                     u7331:
 10818   004C7A  EF67  F026         	goto	l875
 10819   004C7E                     u7330:
 10820   004C7E  0E01               	movlw	1
 10821   004C80  6E05               	movwf	___lwdiv@counter^0,c
 10822   004C82  EF47  F026         	goto	l6529
 10823   004C86                     l6527:
 10824   004C86  90D8               	bcf	status,0,c
 10825   004C88  3603               	rlcf	___lwdiv@divisor^0,f,c
 10826   004C8A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10827   004C8C  2A05               	incf	___lwdiv@counter^0,f,c
 10828   004C8E                     l6529:
 10829   004C8E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
 10830   004C90  EF4C  F026         	goto	u7341
 10831   004C94  EF4E  F026         	goto	u7340
 10832   004C98                     u7341:
 10833   004C98  EF43  F026         	goto	l6527
 10834   004C9C                     u7340:
 10835   004C9C                     l6531:
 10836   004C9C  90D8               	bcf	status,0,c
 10837   004C9E  3606               	rlcf	___lwdiv@quotient^0,f,c
 10838   004CA0  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10839   004CA2  5003               	movf	___lwdiv@divisor^0,w,c
 10840   004CA4  5C01               	subwf	___lwdiv@dividend^0,w,c
 10841   004CA6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 10842   004CA8  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10843   004CAA  A0D8               	btfss	status,0,c
 10844   004CAC  EF5A  F026         	goto	u7351
 10845   004CB0  EF5C  F026         	goto	u7350
 10846   004CB4                     u7351:
 10847   004CB4  EF61  F026         	goto	l6539
 10848   004CB8                     u7350:
 10849   004CB8  5003               	movf	___lwdiv@divisor^0,w,c
 10850   004CBA  5E01               	subwf	___lwdiv@dividend^0,f,c
 10851   004CBC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
 10852   004CBE  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10853   004CC0  8006               	bsf	___lwdiv@quotient^0,0,c
 10854   004CC2                     l6539:
 10855   004CC2  90D8               	bcf	status,0,c
 10856   004CC4  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10857   004CC6  3203               	rrcf	___lwdiv@divisor^0,f,c
 10858   004CC8  2E05               	decfsz	___lwdiv@counter^0,f,c
 10859   004CCA  EF4E  F026         	goto	l6531
 10860   004CCE                     l875:
 10861   004CCE  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
 10862   004CD2  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10863   004CD6  0012               	return		;funcret
 10864   004CD8                     __end_of___lwdiv:
 10865                           	callstack 0
 10866                           
 10867 ;; *************** function _ArmBalancePID *****************
 10868 ;; Defined at:
 10869 ;;		line 42 in file "main.c"
 10870 ;; Parameters:    Size  Location     Type
 10871 ;;  InputAngle      4   49[COMRAM] unsigned int 
 10872 ;; Auto vars:     Size  Location     Type
 10873 ;;		None
 10874 ;; Return value:  Size  Location     Type
 10875 ;;                  4   49[COMRAM] unsigned int 
 10876 ;; Registers used:
 10877 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10878 ;; Tracked objects:
 10879 ;;		On entry : 0/0
 10880 ;;		On exit  : 0/0
 10881 ;;		Unchanged: 0/0
 10882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10883 ;;      Params:         4       0       0       0       0       0       0       0       0
 10884 ;;      Locals:         8       0       0       0       0       0       0       0       0
 10885 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10886 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10887 ;;Total ram usage:       12 bytes
 10888 ;; Hardware stack levels used: 1
 10889 ;; Hardware stack levels required when called: 2
 10890 ;; This function calls:
 10891 ;;		___fladd
 10892 ;;		___flge
 10893 ;;		___flmul
 10894 ;;		___flsub
 10895 ;; This function is called by:
 10896 ;;		_main
 10897 ;; This function uses a non-reentrant model
 10898 ;;
 10899                           
 10900                           	psect	text51
 10901   003654                     __ptext51:
 10902                           	callstack 0
 10903   003654                     _ArmBalancePID:
 10904                           	callstack 28
 10905   003654                     
 10906                           ;main.c: 45:     armAngleError = InputAngle - armDesiredAngle;
 10907   003654  C032  F0D4         	movff	ArmBalancePID@InputAngle,_armAngleError
 10908   003658  C033  F0D5         	movff	ArmBalancePID@InputAngle+1,_armAngleError+1
 10909   00365C  C034  F0D6         	movff	ArmBalancePID@InputAngle+2,_armAngleError+2
 10910   003660  C035  F0D7         	movff	ArmBalancePID@InputAngle+3,_armAngleError+3
 10911   003664                     
 10912                           ;main.c: 46:     armPterm = armKP*(armAngleError);
 10913   003664  C0D4  F001         	movff	_armAngleError,___flmul@b
 10914   003668  C0D5  F002         	movff	_armAngleError+1,___flmul@b+1
 10915   00366C  C0D6  F003         	movff	_armAngleError+2,___flmul@b+2
 10916   003670  C0D7  F004         	movff	_armAngleError+3,___flmul@b+3
 10917   003674  0E00               	movlw	0
 10918   003676  6E05               	movwf	___flmul@a^0,c
 10919   003678  0E00               	movlw	0
 10920   00367A  6E06               	movwf	(___flmul@a+1)^0,c
 10921   00367C  0EC8               	movlw	200
 10922   00367E  6E07               	movwf	(___flmul@a+2)^0,c
 10923   003680  0E41               	movlw	65
 10924   003682  6E08               	movwf	(___flmul@a+3)^0,c
 10925   003684  EC46  F00F         	call	___flmul	;wreg free
 10926   003688  C001  F16C         	movff	?___flmul,_armPterm
 10927   00368C  C002  F16D         	movff	?___flmul+1,_armPterm+1
 10928   003690  C003  F16E         	movff	?___flmul+2,_armPterm+2
 10929   003694  C004  F16F         	movff	?___flmul+3,_armPterm+3
 10930                           
 10931                           ;main.c: 48:     armIterm = armPrevIterm + armKI*(armAngleError + armPrevAngleError);
 10932   003698  0E6F               	movlw	111
 10933   00369A  6E05               	movwf	___flmul@a^0,c
 10934   00369C  0E12               	movlw	18
 10935   00369E  6E06               	movwf	(___flmul@a+1)^0,c
 10936   0036A0  0E83               	movlw	131
 10937   0036A2  6E07               	movwf	(___flmul@a+2)^0,c
 10938   0036A4  0E3A               	movlw	58
 10939   0036A6  6E08               	movwf	(___flmul@a+3)^0,c
 10940   0036A8  C174  F01E         	movff	_armPrevAngleError,___fladd@a
 10941   0036AC  C175  F01F         	movff	_armPrevAngleError+1,___fladd@a+1
 10942   0036B0  C176  F020         	movff	_armPrevAngleError+2,___fladd@a+2
 10943   0036B4  C177  F021         	movff	_armPrevAngleError+3,___fladd@a+3
 10944   0036B8  C0D4  F01A         	movff	_armAngleError,___fladd@b
 10945   0036BC  C0D5  F01B         	movff	_armAngleError+1,___fladd@b+1
 10946   0036C0  C0D6  F01C         	movff	_armAngleError+2,___fladd@b+2
 10947   0036C4  C0D7  F01D         	movff	_armAngleError+3,___fladd@b+3
 10948   0036C8  ECE6  F00C         	call	___fladd	;wreg free
 10949   0036CC  C01A  F001         	movff	?___fladd,___flmul@b
 10950   0036D0  C01B  F002         	movff	?___fladd+1,___flmul@b+1
 10951   0036D4  C01C  F003         	movff	?___fladd+2,___flmul@b+2
 10952   0036D8  C01D  F004         	movff	?___fladd+3,___flmul@b+3
 10953   0036DC  EC46  F00F         	call	___flmul	;wreg free
 10954   0036E0  C001  F036         	movff	?___flmul,_ArmBalancePID$1809
 10955   0036E4  C002  F037         	movff	?___flmul+1,_ArmBalancePID$1809+1
 10956   0036E8  C003  F038         	movff	?___flmul+2,_ArmBalancePID$1809+2
 10957   0036EC  C004  F039         	movff	?___flmul+3,_ArmBalancePID$1809+3
 10958   0036F0                     
 10959                           ;main.c: 48:     armIterm = armPrevIterm + armKI*(armAngleError + armPrevAngleError);
 10960   0036F0  C036  F01A         	movff	_ArmBalancePID$1809,___fladd@b
 10961   0036F4  C037  F01B         	movff	_ArmBalancePID$1809+1,___fladd@b+1
 10962   0036F8  C038  F01C         	movff	_ArmBalancePID$1809+2,___fladd@b+2
 10963   0036FC  C039  F01D         	movff	_ArmBalancePID$1809+3,___fladd@b+3
 10964   003700  C170  F01E         	movff	_armPrevIterm,___fladd@a
 10965   003704  C171  F01F         	movff	_armPrevIterm+1,___fladd@a+1
 10966   003708  C172  F020         	movff	_armPrevIterm+2,___fladd@a+2
 10967   00370C  C173  F021         	movff	_armPrevIterm+3,___fladd@a+3
 10968   003710  ECE6  F00C         	call	___fladd	;wreg free
 10969   003714  C01A  F0D0         	movff	?___fladd,_armIterm
 10970   003718  C01B  F0D1         	movff	?___fladd+1,_armIterm+1
 10971   00371C  C01C  F0D2         	movff	?___fladd+2,_armIterm+2
 10972   003720  C01D  F0D3         	movff	?___fladd+3,_armIterm+3
 10973   003724                     
 10974                           ;main.c: 49:     if (armIterm>armMax)armIterm = armMax;
 10975   003724  0E00               	movlw	0
 10976   003726  6E1A               	movwf	___flge@ff1^0,c
 10977   003728  0E40               	movlw	64
 10978   00372A  6E1B               	movwf	(___flge@ff1+1)^0,c
 10979   00372C  0E9C               	movlw	156
 10980   00372E  6E1C               	movwf	(___flge@ff1+2)^0,c
 10981   003730  0E45               	movlw	69
 10982   003732  6E1D               	movwf	(___flge@ff1+3)^0,c
 10983   003734  C0D0  F01E         	movff	_armIterm,___flge@ff2
 10984   003738  C0D1  F01F         	movff	_armIterm+1,___flge@ff2+1
 10985   00373C  C0D2  F020         	movff	_armIterm+2,___flge@ff2+2
 10986   003740  C0D3  F021         	movff	_armIterm+3,___flge@ff2+3
 10987   003744  EC1B  F023         	call	___flge	;wreg free
 10988   003748  B0D8               	btfsc	status,0,c
 10989   00374A  EFA9  F01B         	goto	u7371
 10990   00374E  EFAB  F01B         	goto	u7370
 10991   003752                     u7371:
 10992   003752  EFB6  F01B         	goto	l6563
 10993   003756                     u7370:
 10994   003756  0E00               	movlw	0
 10995   003758  0100               	movlb	0	; () banked
 10996   00375A  6FD0               	movwf	_armIterm& (0+255),b
 10997   00375C  0E40               	movlw	64
 10998   00375E  6FD1               	movwf	(_armIterm+1)& (0+255),b
 10999   003760  0E9C               	movlw	156
 11000   003762  6FD2               	movwf	(_armIterm+2)& (0+255),b
 11001   003764  0E45               	movlw	69
 11002   003766  6FD3               	movwf	(_armIterm+3)& (0+255),b
 11003   003768  EFD8  F01B         	goto	l6567
 11004   00376C                     l6563:
 11005   00376C  C0D0  F01A         	movff	_armIterm,___flge@ff1
 11006   003770  C0D1  F01B         	movff	_armIterm+1,___flge@ff1+1
 11007   003774  C0D2  F01C         	movff	_armIterm+2,___flge@ff1+2
 11008   003778  C0D3  F01D         	movff	_armIterm+3,___flge@ff1+3
 11009   00377C  0E00               	movlw	0
 11010   00377E  6E1E               	movwf	___flge@ff2^0,c
 11011   003780  0E40               	movlw	64
 11012   003782  6E1F               	movwf	(___flge@ff2+1)^0,c
 11013   003784  0E9C               	movlw	156
 11014   003786  6E20               	movwf	(___flge@ff2+2)^0,c
 11015   003788  0EC5               	movlw	197
 11016   00378A  6E21               	movwf	(___flge@ff2+3)^0,c
 11017   00378C  EC1B  F023         	call	___flge	;wreg free
 11018   003790  B0D8               	btfsc	status,0,c
 11019   003792  EFCD  F01B         	goto	u7381
 11020   003796  EFCF  F01B         	goto	u7380
 11021   00379A                     u7381:
 11022   00379A  EFD8  F01B         	goto	l6567
 11023   00379E                     u7380:
 11024   00379E  0E00               	movlw	0
 11025   0037A0  0100               	movlb	0	; () banked
 11026   0037A2  6FD0               	movwf	_armIterm& (0+255),b
 11027   0037A4  0E40               	movlw	64
 11028   0037A6  6FD1               	movwf	(_armIterm+1)& (0+255),b
 11029   0037A8  0E9C               	movlw	156
 11030   0037AA  6FD2               	movwf	(_armIterm+2)& (0+255),b
 11031   0037AC  0EC5               	movlw	197
 11032   0037AE  6FD3               	movwf	(_armIterm+3)& (0+255),b
 11033   0037B0                     l6567:
 11034                           
 11035                           ;main.c: 52:     armDterm = armKD * (armAngleError-armPrevAngleError);
 11036   0037B0  C174  F02E         	movff	_armPrevAngleError,___flsub@a
 11037   0037B4  C175  F02F         	movff	_armPrevAngleError+1,___flsub@a+1
 11038   0037B8  C176  F030         	movff	_armPrevAngleError+2,___flsub@a+2
 11039   0037BC  C177  F031         	movff	_armPrevAngleError+3,___flsub@a+3
 11040   0037C0  C0D4  F02A         	movff	_armAngleError,___flsub@b
 11041   0037C4  C0D5  F02B         	movff	_armAngleError+1,___flsub@b+1
 11042   0037C8  C0D6  F02C         	movff	_armAngleError+2,___flsub@b+2
 11043   0037CC  C0D7  F02D         	movff	_armAngleError+3,___flsub@b+3
 11044   0037D0  ECBE  F027         	call	___flsub	;wreg free
 11045   0037D4  C02A  F001         	movff	?___flsub,___flmul@b
 11046   0037D8  C02B  F002         	movff	?___flsub+1,___flmul@b+1
 11047   0037DC  C02C  F003         	movff	?___flsub+2,___flmul@b+2
 11048   0037E0  C02D  F004         	movff	?___flsub+3,___flmul@b+3
 11049   0037E4  0E9A               	movlw	154
 11050   0037E6  6E05               	movwf	___flmul@a^0,c
 11051   0037E8  0E99               	movlw	153
 11052   0037EA  6E06               	movwf	(___flmul@a+1)^0,c
 11053   0037EC  0E19               	movlw	25
 11054   0037EE  6E07               	movwf	(___flmul@a+2)^0,c
 11055   0037F0  0E3E               	movlw	62
 11056   0037F2  6E08               	movwf	(___flmul@a+3)^0,c
 11057   0037F4  EC46  F00F         	call	___flmul	;wreg free
 11058   0037F8  C001  F168         	movff	?___flmul,_armDterm
 11059   0037FC  C002  F169         	movff	?___flmul+1,_armDterm+1
 11060   003800  C003  F16A         	movff	?___flmul+2,_armDterm+2
 11061   003804  C004  F16B         	movff	?___flmul+3,_armDterm+3
 11062   003808                     
 11063                           ;main.c: 54:     armPID_U = armPterm + armIterm - armDterm;
 11064   003808  C0D0  F01E         	movff	_armIterm,___fladd@a
 11065   00380C  C0D1  F01F         	movff	_armIterm+1,___fladd@a+1
 11066   003810  C0D2  F020         	movff	_armIterm+2,___fladd@a+2
 11067   003814  C0D3  F021         	movff	_armIterm+3,___fladd@a+3
 11068   003818  C16C  F01A         	movff	_armPterm,___fladd@b
 11069   00381C  C16D  F01B         	movff	_armPterm+1,___fladd@b+1
 11070   003820  C16E  F01C         	movff	_armPterm+2,___fladd@b+2
 11071   003824  C16F  F01D         	movff	_armPterm+3,___fladd@b+3
 11072   003828  ECE6  F00C         	call	___fladd	;wreg free
 11073   00382C  C01A  F03A         	movff	?___fladd,_ArmBalancePID$1810
 11074   003830  C01B  F03B         	movff	?___fladd+1,_ArmBalancePID$1810+1
 11075   003834  C01C  F03C         	movff	?___fladd+2,_ArmBalancePID$1810+2
 11076   003838  C01D  F03D         	movff	?___fladd+3,_ArmBalancePID$1810+3
 11077   00383C                     
 11078                           ;main.c: 54:     armPID_U = armPterm + armIterm - armDterm;
 11079   00383C  C03A  F02A         	movff	_ArmBalancePID$1810,___flsub@b
 11080   003840  C03B  F02B         	movff	_ArmBalancePID$1810+1,___flsub@b+1
 11081   003844  C03C  F02C         	movff	_ArmBalancePID$1810+2,___flsub@b+2
 11082   003848  C03D  F02D         	movff	_ArmBalancePID$1810+3,___flsub@b+3
 11083   00384C  C168  F02E         	movff	_armDterm,___flsub@a
 11084   003850  C169  F02F         	movff	_armDterm+1,___flsub@a+1
 11085   003854  C16A  F030         	movff	_armDterm+2,___flsub@a+2
 11086   003858  C16B  F031         	movff	_armDterm+3,___flsub@a+3
 11087   00385C  ECBE  F027         	call	___flsub	;wreg free
 11088   003860  C02A  F164         	movff	?___flsub,_armPID_U
 11089   003864  C02B  F165         	movff	?___flsub+1,_armPID_U+1
 11090   003868  C02C  F166         	movff	?___flsub+2,_armPID_U+2
 11091   00386C  C02D  F167         	movff	?___flsub+3,_armPID_U+3
 11092   003870                     
 11093                           ;main.c: 58:     armPrevIterm = armIterm;
 11094   003870  C0D0  F170         	movff	_armIterm,_armPrevIterm
 11095   003874  C0D1  F171         	movff	_armIterm+1,_armPrevIterm+1
 11096   003878  C0D2  F172         	movff	_armIterm+2,_armPrevIterm+2
 11097   00387C  C0D3  F173         	movff	_armIterm+3,_armPrevIterm+3
 11098   003880                     
 11099                           ;main.c: 59:     armPrevAngleError = armAngleError;
 11100   003880  C0D4  F174         	movff	_armAngleError,_armPrevAngleError
 11101   003884  C0D5  F175         	movff	_armAngleError+1,_armPrevAngleError+1
 11102   003888  C0D6  F176         	movff	_armAngleError+2,_armPrevAngleError+2
 11103   00388C  C0D7  F177         	movff	_armAngleError+3,_armPrevAngleError+3
 11104   003890                     
 11105                           ;main.c: 60:     return armPID_U;
 11106   003890  C164  F032         	movff	_armPID_U,?_ArmBalancePID
 11107   003894  C165  F033         	movff	_armPID_U+1,?_ArmBalancePID+1
 11108   003898  C166  F034         	movff	_armPID_U+2,?_ArmBalancePID+2
 11109   00389C  C167  F035         	movff	_armPID_U+3,?_ArmBalancePID+3
 11110   0038A0  0012               	return		;funcret
 11111   0038A2                     __end_of_ArmBalancePID:
 11112                           	callstack 0
 11113                           
 11114 ;; *************** function ___flsub *****************
 11115 ;; Defined at:
 11116 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;  b               4   41[COMRAM] unsigned int 
 11119 ;;  a               4   45[COMRAM] unsigned int 
 11120 ;; Auto vars:     Size  Location     Type
 11121 ;;		None
 11122 ;; Return value:  Size  Location     Type
 11123 ;;                  4   41[COMRAM] unsigned int 
 11124 ;; Registers used:
 11125 ;;		wreg, status,2, status,0, cstack
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11131 ;;      Params:         8       0       0       0       0       0       0       0       0
 11132 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11133 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11134 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11135 ;;Total ram usage:        8 bytes
 11136 ;; Hardware stack levels used: 1
 11137 ;; Hardware stack levels required when called: 1
 11138 ;; This function calls:
 11139 ;;		___fladd
 11140 ;; This function is called by:
 11141 ;;		_ArmBalancePID
 11142 ;;		_WheelBalancePID
 11143 ;;		_WheelKalmanFilter
 11144 ;;		_ArmKalmanFilter
 11145 ;;		_atanf
 11146 ;;		_efgtoa
 11147 ;; This function uses a non-reentrant model
 11148 ;;
 11149                           
 11150                           	psect	text52
 11151   004F7C                     __ptext52:
 11152                           	callstack 0
 11153   004F7C                     ___flsub:
 11154                           	callstack 25
 11155   004F7C  0E00               	movlw	0
 11156   004F7E  1A2E               	xorwf	___flsub@a^0,f,c
 11157   004F80  0E00               	movlw	0
 11158   004F82  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 11159   004F84  0E00               	movlw	0
 11160   004F86  1A30               	xorwf	(___flsub@a+2)^0,f,c
 11161   004F88  0E80               	movlw	128
 11162   004F8A  1A31               	xorwf	(___flsub@a+3)^0,f,c
 11163   004F8C  C02A  F01A         	movff	___flsub@b,___fladd@b
 11164   004F90  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
 11165   004F94  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
 11166   004F98  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
 11167   004F9C  C02E  F01E         	movff	___flsub@a,___fladd@a
 11168   004FA0  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
 11169   004FA4  C030  F020         	movff	___flsub@a+2,___fladd@a+2
 11170   004FA8  C031  F021         	movff	___flsub@a+3,___fladd@a+3
 11171   004FAC  ECE6  F00C         	call	___fladd	;wreg free
 11172   004FB0  C01A  F02A         	movff	?___fladd,?___flsub
 11173   004FB4  C01B  F02B         	movff	?___fladd+1,?___flsub+1
 11174   004FB8  C01C  F02C         	movff	?___fladd+2,?___flsub+2
 11175   004FBC  C01D  F02D         	movff	?___fladd+3,?___flsub+3
 11176   004FC0  0012               	return		;funcret
 11177   004FC2                     __end_of___flsub:
 11178                           	callstack 0
 11179                           
 11180 ;; *************** function ___fladd *****************
 11181 ;; Defined at:
 11182 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;  b               4   25[COMRAM] unsigned int 
 11185 ;;  a               4   29[COMRAM] unsigned int 
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;  grs             1   40[COMRAM] unsigned char 
 11188 ;;  bexp            1   39[COMRAM] unsigned char 
 11189 ;;  aexp            1   38[COMRAM] unsigned char 
 11190 ;;  signs           1   37[COMRAM] unsigned char 
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  4   25[COMRAM] unsigned char 
 11193 ;; Registers used:
 11194 ;;		wreg, status,2, status,0
 11195 ;; Tracked objects:
 11196 ;;		On entry : 0/0
 11197 ;;		On exit  : 0/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11200 ;;      Params:         8       0       0       0       0       0       0       0       0
 11201 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11202 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11203 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11204 ;;Total ram usage:       16 bytes
 11205 ;; Hardware stack levels used: 1
 11206 ;; This function calls:
 11207 ;;		Nothing
 11208 ;; This function is called by:
 11209 ;;		_ArmBalancePID
 11210 ;;		_WheelBalancePID
 11211 ;;		_WheelKalmanFilter
 11212 ;;		_WheelMPU6050_Read
 11213 ;;		_ArmKalmanFilter
 11214 ;;		_ArmMPU6050_Read
 11215 ;;		___flsub
 11216 ;;		_atanf
 11217 ;;		_efgtoa
 11218 ;; This function uses a non-reentrant model
 11219 ;;
 11220                           
 11221                           	psect	text53
 11222   0019CC                     __ptext53:
 11223                           	callstack 0
 11224   0019CC                     ___fladd:
 11225                           	callstack 25
 11226   0019CC  501D               	movf	(___fladd@b+3)^0,w,c
 11227   0019CE  0B80               	andlw	128
 11228   0019D0  6E26               	movwf	___fladd@signs^0,c
 11229   0019D2  501D               	movf	(___fladd@b+3)^0,w,c
 11230   0019D4  241D               	addwf	(___fladd@b+3)^0,w,c
 11231   0019D6  6E28               	movwf	___fladd@bexp^0,c
 11232   0019D8  AE1C               	btfss	(___fladd@b+2)^0,7,c
 11233   0019DA  EFF1  F00C         	goto	u5071
 11234   0019DE  EFF3  F00C         	goto	u5070
 11235   0019E2                     u5071:
 11236   0019E2  EFF4  F00C         	goto	l5073
 11237   0019E6                     u5070:
 11238   0019E6  8028               	bsf	___fladd@bexp^0,0,c
 11239   0019E8                     l5073:
 11240   0019E8  5028               	movf	___fladd@bexp^0,w,c
 11241   0019EA  B4D8               	btfsc	status,2,c
 11242   0019EC  EFFA  F00C         	goto	u5081
 11243   0019F0  EFFC  F00C         	goto	u5080
 11244   0019F4                     u5081:
 11245   0019F4  EF11  F00D         	goto	l5083
 11246   0019F8                     u5080:
 11247   0019F8  2828               	incf	___fladd@bexp^0,w,c
 11248   0019FA  A4D8               	btfss	status,2,c
 11249   0019FC  EF02  F00D         	goto	u5091
 11250   001A00  EF04  F00D         	goto	u5090
 11251   001A04                     u5091:
 11252   001A04  EF0C  F00D         	goto	l5079
 11253   001A08                     u5090:
 11254   001A08  0E00               	movlw	0
 11255   001A0A  6E1A               	movwf	___fladd@b^0,c
 11256   001A0C  0E00               	movlw	0
 11257   001A0E  6E1B               	movwf	(___fladd@b+1)^0,c
 11258   001A10  0E00               	movlw	0
 11259   001A12  6E1C               	movwf	(___fladd@b+2)^0,c
 11260   001A14  0E00               	movlw	0
 11261   001A16  6E1D               	movwf	(___fladd@b+3)^0,c
 11262   001A18                     l5079:
 11263   001A18  8E1C               	bsf	(___fladd@b+2)^0,7,c
 11264   001A1A  0E00               	movlw	0
 11265   001A1C  6E1D               	movwf	(___fladd@b+3)^0,c
 11266   001A1E  EF19  F00D         	goto	l5085
 11267   001A22                     l5083:
 11268   001A22  0E00               	movlw	0
 11269   001A24  6E1A               	movwf	___fladd@b^0,c
 11270   001A26  0E00               	movlw	0
 11271   001A28  6E1B               	movwf	(___fladd@b+1)^0,c
 11272   001A2A  0E00               	movlw	0
 11273   001A2C  6E1C               	movwf	(___fladd@b+2)^0,c
 11274   001A2E  0E00               	movlw	0
 11275   001A30  6E1D               	movwf	(___fladd@b+3)^0,c
 11276   001A32                     l5085:
 11277   001A32  5021               	movf	(___fladd@a+3)^0,w,c
 11278   001A34  0B80               	andlw	128
 11279   001A36  6E27               	movwf	___fladd@aexp^0,c
 11280   001A38  5026               	movf	___fladd@signs^0,w,c
 11281   001A3A  1827               	xorwf	___fladd@aexp^0,w,c
 11282   001A3C  B4D8               	btfsc	status,2,c
 11283   001A3E  EF23  F00D         	goto	u5101
 11284   001A42  EF25  F00D         	goto	u5100
 11285   001A46                     u5101:
 11286   001A46  EF26  F00D         	goto	l5091
 11287   001A4A                     u5100:
 11288   001A4A  8C26               	bsf	___fladd@signs^0,6,c
 11289   001A4C                     l5091:
 11290   001A4C  5021               	movf	(___fladd@a+3)^0,w,c
 11291   001A4E  2421               	addwf	(___fladd@a+3)^0,w,c
 11292   001A50  6E27               	movwf	___fladd@aexp^0,c
 11293   001A52  AE20               	btfss	(___fladd@a+2)^0,7,c
 11294   001A54  EF2E  F00D         	goto	u5111
 11295   001A58  EF30  F00D         	goto	u5110
 11296   001A5C                     u5111:
 11297   001A5C  EF31  F00D         	goto	l5097
 11298   001A60                     u5110:
 11299   001A60  8027               	bsf	___fladd@aexp^0,0,c
 11300   001A62                     l5097:
 11301   001A62  5027               	movf	___fladd@aexp^0,w,c
 11302   001A64  B4D8               	btfsc	status,2,c
 11303   001A66  EF37  F00D         	goto	u5121
 11304   001A6A  EF39  F00D         	goto	u5120
 11305   001A6E                     u5121:
 11306   001A6E  EF4E  F00D         	goto	l5107
 11307   001A72                     u5120:
 11308   001A72  2827               	incf	___fladd@aexp^0,w,c
 11309   001A74  A4D8               	btfss	status,2,c
 11310   001A76  EF3F  F00D         	goto	u5131
 11311   001A7A  EF41  F00D         	goto	u5130
 11312   001A7E                     u5131:
 11313   001A7E  EF49  F00D         	goto	l5103
 11314   001A82                     u5130:
 11315   001A82  0E00               	movlw	0
 11316   001A84  6E1E               	movwf	___fladd@a^0,c
 11317   001A86  0E00               	movlw	0
 11318   001A88  6E1F               	movwf	(___fladd@a+1)^0,c
 11319   001A8A  0E00               	movlw	0
 11320   001A8C  6E20               	movwf	(___fladd@a+2)^0,c
 11321   001A8E  0E00               	movlw	0
 11322   001A90  6E21               	movwf	(___fladd@a+3)^0,c
 11323   001A92                     l5103:
 11324   001A92  8E20               	bsf	(___fladd@a+2)^0,7,c
 11325   001A94  0E00               	movlw	0
 11326   001A96  6E21               	movwf	(___fladd@a+3)^0,c
 11327   001A98  EF56  F00D         	goto	l5109
 11328   001A9C                     l5107:
 11329   001A9C  0E00               	movlw	0
 11330   001A9E  6E1E               	movwf	___fladd@a^0,c
 11331   001AA0  0E00               	movlw	0
 11332   001AA2  6E1F               	movwf	(___fladd@a+1)^0,c
 11333   001AA4  0E00               	movlw	0
 11334   001AA6  6E20               	movwf	(___fladd@a+2)^0,c
 11335   001AA8  0E00               	movlw	0
 11336   001AAA  6E21               	movwf	(___fladd@a+3)^0,c
 11337   001AAC                     l5109:
 11338   001AAC  5028               	movf	___fladd@bexp^0,w,c
 11339   001AAE  5C27               	subwf	___fladd@aexp^0,w,c
 11340   001AB0  B0D8               	btfsc	status,0,c
 11341   001AB2  EF5D  F00D         	goto	u5141
 11342   001AB6  EF5F  F00D         	goto	u5140
 11343   001ABA                     u5141:
 11344   001ABA  EF86  F00D         	goto	l5145
 11345   001ABE                     u5140:
 11346   001ABE  AC26               	btfss	___fladd@signs^0,6,c
 11347   001AC0  EF64  F00D         	goto	u5151
 11348   001AC4  EF66  F00D         	goto	u5150
 11349   001AC8                     u5151:
 11350   001AC8  EF68  F00D         	goto	l5115
 11351   001ACC                     u5150:
 11352   001ACC  0E80               	movlw	128
 11353   001ACE  1A26               	xorwf	___fladd@signs^0,f,c
 11354   001AD0                     l5115:
 11355   001AD0  C028  F029         	movff	___fladd@bexp,___fladd@grs
 11356   001AD4  C027  F028         	movff	___fladd@aexp,___fladd@bexp
 11357   001AD8  C029  F027         	movff	___fladd@grs,___fladd@aexp
 11358   001ADC  C01A  F029         	movff	___fladd@b,___fladd@grs
 11359   001AE0  C01E  F01A         	movff	___fladd@a,___fladd@b
 11360   001AE4  C029  F01E         	movff	___fladd@grs,___fladd@a
 11361   001AE8  C01B  F029         	movff	___fladd@b+1,___fladd@grs
 11362   001AEC  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
 11363   001AF0  C029  F01F         	movff	___fladd@grs,___fladd@a+1
 11364   001AF4  C01C  F029         	movff	___fladd@b+2,___fladd@grs
 11365   001AF8  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
 11366   001AFC  C029  F020         	movff	___fladd@grs,___fladd@a+2
 11367   001B00  C01D  F029         	movff	___fladd@b+3,___fladd@grs
 11368   001B04  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
 11369   001B08  C029  F021         	movff	___fladd@grs,___fladd@a+3
 11370   001B0C                     l5145:
 11371   001B0C  0E00               	movlw	0
 11372   001B0E  6E29               	movwf	___fladd@grs^0,c
 11373   001B10  5028               	movf	___fladd@bexp^0,w,c
 11374   001B12  C027  F022         	movff	___fladd@aexp,??___fladd
 11375   001B16  6A23               	clrf	(??___fladd+1)^0,c
 11376   001B18  5E22               	subwf	??___fladd^0,f,c
 11377   001B1A  0E00               	movlw	0
 11378   001B1C  5A23               	subwfb	(??___fladd+1)^0,f,c
 11379   001B1E  BE23               	btfsc	(??___fladd+1)^0,7,c
 11380   001B20  EF9B  F00D         	goto	u5161
 11381   001B24  5023               	movf	(??___fladd+1)^0,w,c
 11382   001B26  E109               	bnz	u5160
 11383   001B28  0E1A               	movlw	26
 11384   001B2A  5C22               	subwf	??___fladd^0,w,c
 11385   001B2C  A0D8               	btfss	status,0,c
 11386   001B2E  EF9B  F00D         	goto	u5161
 11387   001B32  EF9D  F00D         	goto	u5160
 11388   001B36                     u5161:
 11389   001B36  EFD4  F00D         	goto	l913
 11390   001B3A                     u5160:
 11391   001B3A  501A               	movf	___fladd@b^0,w,c
 11392   001B3C  101B               	iorwf	(___fladd@b+1)^0,w,c
 11393   001B3E  101C               	iorwf	(___fladd@b+2)^0,w,c
 11394   001B40  101D               	iorwf	(___fladd@b+3)^0,w,c
 11395   001B42  A4D8               	btfss	status,2,c
 11396   001B44  EFA6  F00D         	goto	u5171
 11397   001B48  EFA9  F00D         	goto	u5170
 11398   001B4C                     u5171:
 11399   001B4C  0E01               	movlw	1
 11400   001B4E  EFAA  F00D         	goto	u5180
 11401   001B52                     u5170:
 11402   001B52  0E00               	movlw	0
 11403   001B54                     u5180:
 11404   001B54  6E29               	movwf	___fladd@grs^0,c
 11405   001B56  0E00               	movlw	0
 11406   001B58  6E1A               	movwf	___fladd@b^0,c
 11407   001B5A  0E00               	movlw	0
 11408   001B5C  6E1B               	movwf	(___fladd@b+1)^0,c
 11409   001B5E  0E00               	movlw	0
 11410   001B60  6E1C               	movwf	(___fladd@b+2)^0,c
 11411   001B62  0E00               	movlw	0
 11412   001B64  6E1D               	movwf	(___fladd@b+3)^0,c
 11413   001B66  C027  F028         	movff	___fladd@aexp,___fladd@bexp
 11414   001B6A  EFDD  F00D         	goto	l912
 11415   001B6E                     l914:
 11416   001B6E  A029               	btfss	___fladd@grs^0,0,c
 11417   001B70  EFBC  F00D         	goto	u5191
 11418   001B74  EFBE  F00D         	goto	u5190
 11419   001B78                     u5191:
 11420   001B78  EFC4  F00D         	goto	l5157
 11421   001B7C                     u5190:
 11422   001B7C  90D8               	bcf	status,0,c
 11423   001B7E  3029               	rrcf	___fladd@grs^0,w,c
 11424   001B80  0901               	iorlw	1
 11425   001B82  6E29               	movwf	___fladd@grs^0,c
 11426   001B84  EFC6  F00D         	goto	l5159
 11427   001B88                     l5157:
 11428   001B88  90D8               	bcf	status,0,c
 11429   001B8A  3229               	rrcf	___fladd@grs^0,f,c
 11430   001B8C                     l5159:
 11431   001B8C  A01A               	btfss	___fladd@b^0,0,c
 11432   001B8E  EFCB  F00D         	goto	u5201
 11433   001B92  EFCD  F00D         	goto	u5200
 11434   001B96                     u5201:
 11435   001B96  EFCE  F00D         	goto	l5163
 11436   001B9A                     u5200:
 11437   001B9A  8E29               	bsf	___fladd@grs^0,7,c
 11438   001B9C                     l5163:
 11439   001B9C  341D               	rlcf	(___fladd@b+3)^0,w,c
 11440   001B9E  321D               	rrcf	(___fladd@b+3)^0,f,c
 11441   001BA0  321C               	rrcf	(___fladd@b+2)^0,f,c
 11442   001BA2  321B               	rrcf	(___fladd@b+1)^0,f,c
 11443   001BA4  321A               	rrcf	___fladd@b^0,f,c
 11444   001BA6  2A28               	incf	___fladd@bexp^0,f,c
 11445   001BA8                     l913:
 11446   001BA8  5027               	movf	___fladd@aexp^0,w,c
 11447   001BAA  5C28               	subwf	___fladd@bexp^0,w,c
 11448   001BAC  A0D8               	btfss	status,0,c
 11449   001BAE  EFDB  F00D         	goto	u5211
 11450   001BB2  EFDD  F00D         	goto	u5210
 11451   001BB6                     u5211:
 11452   001BB6  EFB7  F00D         	goto	l914
 11453   001BBA                     u5210:
 11454   001BBA                     l912:
 11455   001BBA  BC26               	btfsc	___fladd@signs^0,6,c
 11456   001BBC  EFE2  F00D         	goto	u5221
 11457   001BC0  EFE4  F00D         	goto	u5220
 11458   001BC4                     u5221:
 11459   001BC4  EF24  F00E         	goto	l5191
 11460   001BC8                     u5220:
 11461   001BC8  5028               	movf	___fladd@bexp^0,w,c
 11462   001BCA  A4D8               	btfss	status,2,c
 11463   001BCC  EFEA  F00D         	goto	u5231
 11464   001BD0  EFEC  F00D         	goto	u5230
 11465   001BD4                     u5231:
 11466   001BD4  EFF6  F00D         	goto	l5173
 11467   001BD8                     u5230:
 11468   001BD8  0E00               	movlw	0
 11469   001BDA  6E1A               	movwf	?___fladd^0,c
 11470   001BDC  0E00               	movlw	0
 11471   001BDE  6E1B               	movwf	(?___fladd+1)^0,c
 11472   001BE0  0E00               	movlw	0
 11473   001BE2  6E1C               	movwf	(?___fladd+2)^0,c
 11474   001BE4  0E00               	movlw	0
 11475   001BE6  6E1D               	movwf	(?___fladd+3)^0,c
 11476   001BE8  EF45  F00F         	goto	l921
 11477   001BEC                     l5173:
 11478   001BEC  501E               	movf	___fladd@a^0,w,c
 11479   001BEE  261A               	addwf	___fladd@b^0,f,c
 11480   001BF0  501F               	movf	(___fladd@a+1)^0,w,c
 11481   001BF2  221B               	addwfc	(___fladd@b+1)^0,f,c
 11482   001BF4  5020               	movf	(___fladd@a+2)^0,w,c
 11483   001BF6  221C               	addwfc	(___fladd@b+2)^0,f,c
 11484   001BF8  5021               	movf	(___fladd@a+3)^0,w,c
 11485   001BFA  221D               	addwfc	(___fladd@b+3)^0,f,c
 11486   001BFC  A01D               	btfss	(___fladd@b+3)^0,0,c
 11487   001BFE  EF03  F00E         	goto	u5241
 11488   001C02  EF05  F00E         	goto	u5240
 11489   001C06                     u5241:
 11490   001C06  EFB1  F00E         	goto	l5227
 11491   001C0A                     u5240:
 11492   001C0A  A029               	btfss	___fladd@grs^0,0,c
 11493   001C0C  EF0A  F00E         	goto	u5251
 11494   001C10  EF0C  F00E         	goto	u5250
 11495   001C14                     u5251:
 11496   001C14  EF12  F00E         	goto	l5181
 11497   001C18                     u5250:
 11498   001C18  90D8               	bcf	status,0,c
 11499   001C1A  3029               	rrcf	___fladd@grs^0,w,c
 11500   001C1C  0901               	iorlw	1
 11501   001C1E  6E29               	movwf	___fladd@grs^0,c
 11502   001C20  EF14  F00E         	goto	l5183
 11503   001C24                     l5181:
 11504   001C24  90D8               	bcf	status,0,c
 11505   001C26  3229               	rrcf	___fladd@grs^0,f,c
 11506   001C28                     l5183:
 11507   001C28  A01A               	btfss	___fladd@b^0,0,c
 11508   001C2A  EF19  F00E         	goto	u5261
 11509   001C2E  EF1B  F00E         	goto	u5260
 11510   001C32                     u5261:
 11511   001C32  EF1C  F00E         	goto	l5187
 11512   001C36                     u5260:
 11513   001C36  8E29               	bsf	___fladd@grs^0,7,c
 11514   001C38                     l5187:
 11515   001C38  341D               	rlcf	(___fladd@b+3)^0,w,c
 11516   001C3A  321D               	rrcf	(___fladd@b+3)^0,f,c
 11517   001C3C  321C               	rrcf	(___fladd@b+2)^0,f,c
 11518   001C3E  321B               	rrcf	(___fladd@b+1)^0,f,c
 11519   001C40  321A               	rrcf	___fladd@b^0,f,c
 11520   001C42  2A28               	incf	___fladd@bexp^0,f,c
 11521   001C44  EFB1  F00E         	goto	l5227
 11522   001C48                     l5191:
 11523   001C48  501E               	movf	___fladd@a^0,w,c
 11524   001C4A  5C1A               	subwf	___fladd@b^0,w,c
 11525   001C4C  501F               	movf	(___fladd@a+1)^0,w,c
 11526   001C4E  581B               	subwfb	(___fladd@b+1)^0,w,c
 11527   001C50  5020               	movf	(___fladd@a+2)^0,w,c
 11528   001C52  581C               	subwfb	(___fladd@b+2)^0,w,c
 11529   001C54  501D               	movf	(___fladd@b+3)^0,w,c
 11530   001C56  0A80               	xorlw	128
 11531   001C58  6E22               	movwf	??___fladd^0,c
 11532   001C5A  5021               	movf	(___fladd@a+3)^0,w,c
 11533   001C5C  0A80               	xorlw	128
 11534   001C5E  5822               	subwfb	??___fladd^0,w,c
 11535   001C60  B0D8               	btfsc	status,0,c
 11536   001C62  EF35  F00E         	goto	u5271
 11537   001C66  EF37  F00E         	goto	u5270
 11538   001C6A                     u5271:
 11539   001C6A  EF62  F00E         	goto	l5201
 11540   001C6E                     u5270:
 11541   001C6E  501A               	movf	___fladd@b^0,w,c
 11542   001C70  5C1E               	subwf	___fladd@a^0,w,c
 11543   001C72  6E22               	movwf	??___fladd^0,c
 11544   001C74  501B               	movf	(___fladd@b+1)^0,w,c
 11545   001C76  581F               	subwfb	(___fladd@a+1)^0,w,c
 11546   001C78  6E23               	movwf	(??___fladd+1)^0,c
 11547   001C7A  501C               	movf	(___fladd@b+2)^0,w,c
 11548   001C7C  5820               	subwfb	(___fladd@a+2)^0,w,c
 11549   001C7E  6E24               	movwf	(??___fladd+2)^0,c
 11550   001C80  501D               	movf	(___fladd@b+3)^0,w,c
 11551   001C82  5821               	subwfb	(___fladd@a+3)^0,w,c
 11552   001C84  6E25               	movwf	(??___fladd+3)^0,c
 11553   001C86  0EFF               	movlw	255
 11554   001C88  2422               	addwf	??___fladd^0,w,c
 11555   001C8A  6E1A               	movwf	___fladd@b^0,c
 11556   001C8C  0EFF               	movlw	255
 11557   001C8E  2023               	addwfc	(??___fladd+1)^0,w,c
 11558   001C90  6E1B               	movwf	(___fladd@b+1)^0,c
 11559   001C92  0EFF               	movlw	255
 11560   001C94  2024               	addwfc	(??___fladd+2)^0,w,c
 11561   001C96  6E1C               	movwf	(___fladd@b+2)^0,c
 11562   001C98  0EFF               	movlw	255
 11563   001C9A  2025               	addwfc	(??___fladd+3)^0,w,c
 11564   001C9C  6E1D               	movwf	(___fladd@b+3)^0,c
 11565   001C9E  0E80               	movlw	128
 11566   001CA0  1A26               	xorwf	___fladd@signs^0,f,c
 11567   001CA2  6C29               	negf	___fladd@grs^0,c
 11568   001CA4  5029               	movf	___fladd@grs^0,w,c
 11569   001CA6  A4D8               	btfss	status,2,c
 11570   001CA8  EF58  F00E         	goto	u5281
 11571   001CAC  EF5A  F00E         	goto	u5280
 11572   001CB0                     u5281:
 11573   001CB0  EF6A  F00E         	goto	l929
 11574   001CB4                     u5280:
 11575   001CB4  0E01               	movlw	1
 11576   001CB6  261A               	addwf	___fladd@b^0,f,c
 11577   001CB8  0E00               	movlw	0
 11578   001CBA  221B               	addwfc	(___fladd@b+1)^0,f,c
 11579   001CBC  221C               	addwfc	(___fladd@b+2)^0,f,c
 11580   001CBE  221D               	addwfc	(___fladd@b+3)^0,f,c
 11581   001CC0  EF6A  F00E         	goto	l929
 11582   001CC4                     l5201:
 11583   001CC4  501E               	movf	___fladd@a^0,w,c
 11584   001CC6  5E1A               	subwf	___fladd@b^0,f,c
 11585   001CC8  501F               	movf	(___fladd@a+1)^0,w,c
 11586   001CCA  5A1B               	subwfb	(___fladd@b+1)^0,f,c
 11587   001CCC  5020               	movf	(___fladd@a+2)^0,w,c
 11588   001CCE  5A1C               	subwfb	(___fladd@b+2)^0,f,c
 11589   001CD0  5021               	movf	(___fladd@a+3)^0,w,c
 11590   001CD2  5A1D               	subwfb	(___fladd@b+3)^0,f,c
 11591   001CD4                     l929:
 11592   001CD4  501A               	movf	___fladd@b^0,w,c
 11593   001CD6  101B               	iorwf	(___fladd@b+1)^0,w,c
 11594   001CD8  101C               	iorwf	(___fladd@b+2)^0,w,c
 11595   001CDA  101D               	iorwf	(___fladd@b+3)^0,w,c
 11596   001CDC  A4D8               	btfss	status,2,c
 11597   001CDE  EF73  F00E         	goto	u5291
 11598   001CE2  EF75  F00E         	goto	u5290
 11599   001CE6                     u5291:
 11600   001CE6  EFAA  F00E         	goto	l5225
 11601   001CEA                     u5290:
 11602   001CEA  5029               	movf	___fladd@grs^0,w,c
 11603   001CEC  A4D8               	btfss	status,2,c
 11604   001CEE  EF7B  F00E         	goto	u5301
 11605   001CF2  EF7D  F00E         	goto	u5300
 11606   001CF6                     u5301:
 11607   001CF6  EFAA  F00E         	goto	l5225
 11608   001CFA                     u5300:
 11609   001CFA  0E00               	movlw	0
 11610   001CFC  6E1A               	movwf	?___fladd^0,c
 11611   001CFE  0E00               	movlw	0
 11612   001D00  6E1B               	movwf	(?___fladd+1)^0,c
 11613   001D02  0E00               	movlw	0
 11614   001D04  6E1C               	movwf	(?___fladd+2)^0,c
 11615   001D06  0E00               	movlw	0
 11616   001D08  6E1D               	movwf	(?___fladd+3)^0,c
 11617   001D0A  EF45  F00F         	goto	l921
 11618   001D0E                     l5209:
 11619   001D0E  90D8               	bcf	status,0,c
 11620   001D10  361A               	rlcf	___fladd@b^0,f,c
 11621   001D12  361B               	rlcf	(___fladd@b+1)^0,f,c
 11622   001D14  361C               	rlcf	(___fladd@b+2)^0,f,c
 11623   001D16  361D               	rlcf	(___fladd@b+3)^0,f,c
 11624   001D18  AE29               	btfss	___fladd@grs^0,7,c
 11625   001D1A  EF91  F00E         	goto	u5311
 11626   001D1E  EF93  F00E         	goto	u5310
 11627   001D22                     u5311:
 11628   001D22  EF94  F00E         	goto	l5215
 11629   001D26                     u5310:
 11630   001D26  801A               	bsf	___fladd@b^0,0,c
 11631   001D28                     l5215:
 11632   001D28  A029               	btfss	___fladd@grs^0,0,c
 11633   001D2A  EF99  F00E         	goto	u5321
 11634   001D2E  EF9B  F00E         	goto	u5320
 11635   001D32                     u5321:
 11636   001D32  EF9F  F00E         	goto	l5219
 11637   001D36                     u5320:
 11638   001D36  80D8               	bsf	status,0,c
 11639   001D38  3629               	rlcf	___fladd@grs^0,f,c
 11640   001D3A  EFA1  F00E         	goto	l5221
 11641   001D3E                     l5219:
 11642   001D3E  90D8               	bcf	status,0,c
 11643   001D40  3629               	rlcf	___fladd@grs^0,f,c
 11644   001D42                     l5221:
 11645   001D42  5028               	movf	___fladd@bexp^0,w,c
 11646   001D44  B4D8               	btfsc	status,2,c
 11647   001D46  EFA7  F00E         	goto	u5331
 11648   001D4A  EFA9  F00E         	goto	u5330
 11649   001D4E                     u5331:
 11650   001D4E  EFAA  F00E         	goto	l5225
 11651   001D52                     u5330:
 11652   001D52  0628               	decf	___fladd@bexp^0,f,c
 11653   001D54                     l5225:
 11654   001D54  AE1C               	btfss	(___fladd@b+2)^0,7,c
 11655   001D56  EFAF  F00E         	goto	u5341
 11656   001D5A  EFB1  F00E         	goto	u5340
 11657   001D5E                     u5341:
 11658   001D5E  EF87  F00E         	goto	l5209
 11659   001D62                     u5340:
 11660   001D62                     l5227:
 11661   001D62  0E00               	movlw	0
 11662   001D64  6E27               	movwf	___fladd@aexp^0,c
 11663   001D66  AE29               	btfss	___fladd@grs^0,7,c
 11664   001D68  EFB8  F00E         	goto	u5351
 11665   001D6C  EFBA  F00E         	goto	u5350
 11666   001D70                     u5351:
 11667   001D70  EFD2  F00E         	goto	l938
 11668   001D74                     u5350:
 11669   001D74  C029  F022         	movff	___fladd@grs,??___fladd
 11670   001D78  0E7F               	movlw	127
 11671   001D7A  1622               	andwf	??___fladd^0,f,c
 11672   001D7C  B4D8               	btfsc	status,2,c
 11673   001D7E  EFC3  F00E         	goto	u5361
 11674   001D82  EFC5  F00E         	goto	u5360
 11675   001D86                     u5361:
 11676   001D86  EFC9  F00E         	goto	l939
 11677   001D8A                     u5360:
 11678   001D8A                     l5233:
 11679   001D8A  0E01               	movlw	1
 11680   001D8C  6E27               	movwf	___fladd@aexp^0,c
 11681   001D8E  EFD2  F00E         	goto	l938
 11682   001D92                     l939:
 11683   001D92  A01A               	btfss	___fladd@b^0,0,c
 11684   001D94  EFCE  F00E         	goto	u5371
 11685   001D98  EFD0  F00E         	goto	u5370
 11686   001D9C                     u5371:
 11687   001D9C  EFD2  F00E         	goto	l938
 11688   001DA0                     u5370:
 11689   001DA0  EFC5  F00E         	goto	l5233
 11690   001DA4                     l938:
 11691   001DA4  5027               	movf	___fladd@aexp^0,w,c
 11692   001DA6  B4D8               	btfsc	status,2,c
 11693   001DA8  EFD8  F00E         	goto	u5381
 11694   001DAC  EFDA  F00E         	goto	u5380
 11695   001DB0                     u5381:
 11696   001DB0  EF05  F00F         	goto	l5245
 11697   001DB4                     u5380:
 11698   001DB4  0E01               	movlw	1
 11699   001DB6  261A               	addwf	___fladd@b^0,f,c
 11700   001DB8  0E00               	movlw	0
 11701   001DBA  221B               	addwfc	(___fladd@b+1)^0,f,c
 11702   001DBC  221C               	addwfc	(___fladd@b+2)^0,f,c
 11703   001DBE  221D               	addwfc	(___fladd@b+3)^0,f,c
 11704   001DC0  A01D               	btfss	(___fladd@b+3)^0,0,c
 11705   001DC2  EFE5  F00E         	goto	u5391
 11706   001DC6  EFE7  F00E         	goto	u5390
 11707   001DCA                     u5391:
 11708   001DCA  EF05  F00F         	goto	l5245
 11709   001DCE                     u5390:
 11710   001DCE  C01A  F022         	movff	___fladd@b,??___fladd
 11711   001DD2  C01B  F023         	movff	___fladd@b+1,??___fladd+1
 11712   001DD6  C01C  F024         	movff	___fladd@b+2,??___fladd+2
 11713   001DDA  C01D  F025         	movff	___fladd@b+3,??___fladd+3
 11714   001DDE  3425               	rlcf	(??___fladd+3)^0,w,c
 11715   001DE0  3225               	rrcf	(??___fladd+3)^0,f,c
 11716   001DE2  3224               	rrcf	(??___fladd+2)^0,f,c
 11717   001DE4  3223               	rrcf	(??___fladd+1)^0,f,c
 11718   001DE6  3222               	rrcf	??___fladd^0,f,c
 11719   001DE8  C022  F01A         	movff	??___fladd,___fladd@b
 11720   001DEC  C023  F01B         	movff	??___fladd+1,___fladd@b+1
 11721   001DF0  C024  F01C         	movff	??___fladd+2,___fladd@b+2
 11722   001DF4  C025  F01D         	movff	??___fladd+3,___fladd@b+3
 11723   001DF8  2828               	incf	___fladd@bexp^0,w,c
 11724   001DFA  B4D8               	btfsc	status,2,c
 11725   001DFC  EF02  F00F         	goto	u5401
 11726   001E00  EF04  F00F         	goto	u5400
 11727   001E04                     u5401:
 11728   001E04  EF05  F00F         	goto	l5245
 11729   001E08                     u5400:
 11730   001E08  2A28               	incf	___fladd@bexp^0,f,c
 11731   001E0A                     l5245:
 11732   001E0A  2828               	incf	___fladd@bexp^0,w,c
 11733   001E0C  B4D8               	btfsc	status,2,c
 11734   001E0E  EF0B  F00F         	goto	u5411
 11735   001E12  EF0D  F00F         	goto	u5410
 11736   001E16                     u5411:
 11737   001E16  EF15  F00F         	goto	l5249
 11738   001E1A                     u5410:
 11739   001E1A  5028               	movf	___fladd@bexp^0,w,c
 11740   001E1C  A4D8               	btfss	status,2,c
 11741   001E1E  EF13  F00F         	goto	u5421
 11742   001E22  EF15  F00F         	goto	u5420
 11743   001E26                     u5421:
 11744   001E26  EF27  F00F         	goto	l5253
 11745   001E2A                     u5420:
 11746   001E2A                     l5249:
 11747   001E2A  0E00               	movlw	0
 11748   001E2C  6E1A               	movwf	___fladd@b^0,c
 11749   001E2E  0E00               	movlw	0
 11750   001E30  6E1B               	movwf	(___fladd@b+1)^0,c
 11751   001E32  0E00               	movlw	0
 11752   001E34  6E1C               	movwf	(___fladd@b+2)^0,c
 11753   001E36  0E00               	movlw	0
 11754   001E38  6E1D               	movwf	(___fladd@b+3)^0,c
 11755   001E3A  5028               	movf	___fladd@bexp^0,w,c
 11756   001E3C  A4D8               	btfss	status,2,c
 11757   001E3E  EF23  F00F         	goto	u5431
 11758   001E42  EF25  F00F         	goto	u5430
 11759   001E46                     u5431:
 11760   001E46  EF27  F00F         	goto	l5253
 11761   001E4A                     u5430:
 11762   001E4A  0E00               	movlw	0
 11763   001E4C  6E26               	movwf	___fladd@signs^0,c
 11764   001E4E                     l5253:
 11765   001E4E  A028               	btfss	___fladd@bexp^0,0,c
 11766   001E50  EF2C  F00F         	goto	u5441
 11767   001E54  EF2E  F00F         	goto	u5440
 11768   001E58                     u5441:
 11769   001E58  EF31  F00F         	goto	l5257
 11770   001E5C                     u5440:
 11771   001E5C  8E1C               	bsf	(___fladd@b+2)^0,7,c
 11772   001E5E  EF32  F00F         	goto	l5259
 11773   001E62                     l5257:
 11774   001E62  9E1C               	bcf	(___fladd@b+2)^0,7,c
 11775   001E64                     l5259:
 11776   001E64  90D8               	bcf	status,0,c
 11777   001E66  3028               	rrcf	___fladd@bexp^0,w,c
 11778   001E68  6E1D               	movwf	(___fladd@b+3)^0,c
 11779   001E6A  AE26               	btfss	___fladd@signs^0,7,c
 11780   001E6C  EF3A  F00F         	goto	u5451
 11781   001E70  EF3C  F00F         	goto	u5450
 11782   001E74                     u5451:
 11783   001E74  EF3D  F00F         	goto	l5265
 11784   001E78                     u5450:
 11785   001E78  8E1D               	bsf	(___fladd@b+3)^0,7,c
 11786   001E7A                     l5265:
 11787   001E7A  C01A  F01A         	movff	___fladd@b,?___fladd
 11788   001E7E  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
 11789   001E82  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
 11790   001E86  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
 11791   001E8A                     l921:
 11792   001E8A  0012               	return		;funcret
 11793   001E8C                     __end_of___fladd:
 11794                           	callstack 0
 11795                           
 11796 ;; *************** function ___flmul *****************
 11797 ;; Defined at:
 11798 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
 11799 ;; Parameters:    Size  Location     Type
 11800 ;;  b               4    0[COMRAM] unsigned char 
 11801 ;;  a               4    4[COMRAM] unsigned char 
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;  prod            4   19[COMRAM] struct .
 11804 ;;  grs             4   14[COMRAM] unsigned long 
 11805 ;;  temp            2   23[COMRAM] struct .
 11806 ;;  bexp            1   18[COMRAM] unsigned char 
 11807 ;;  aexp            1   13[COMRAM] unsigned char 
 11808 ;;  sign            1   12[COMRAM] unsigned char 
 11809 ;; Return value:  Size  Location     Type
 11810 ;;                  4    0[COMRAM] unsigned char 
 11811 ;; Registers used:
 11812 ;;		wreg, status,2, status,0, prodl, prodh
 11813 ;; Tracked objects:
 11814 ;;		On entry : 0/0
 11815 ;;		On exit  : 0/0
 11816 ;;		Unchanged: 0/0
 11817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11818 ;;      Params:         8       0       0       0       0       0       0       0       0
 11819 ;;      Locals:        13       0       0       0       0       0       0       0       0
 11820 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11821 ;;      Totals:        25       0       0       0       0       0       0       0       0
 11822 ;;Total ram usage:       25 bytes
 11823 ;; Hardware stack levels used: 1
 11824 ;; This function calls:
 11825 ;;		Nothing
 11826 ;; This function is called by:
 11827 ;;		_ArmBalancePID
 11828 ;;		_WheelBalancePID
 11829 ;;		_WheelKalmanFilter
 11830 ;;		_WheelMPU6050_Read
 11831 ;;		_ArmKalmanFilter
 11832 ;;		_ArmMPU6050_Read
 11833 ;;		_atanf
 11834 ;;		_efgtoa
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           	psect	text54
 11839   001E8C                     __ptext54:
 11840                           	callstack 0
 11841   001E8C                     ___flmul:
 11842                           	callstack 26
 11843   001E8C  5004               	movf	(___flmul@b+3)^0,w,c
 11844   001E8E  0B80               	andlw	128
 11845   001E90  6E0D               	movwf	___flmul@sign^0,c
 11846   001E92  5004               	movf	(___flmul@b+3)^0,w,c
 11847   001E94  2404               	addwf	(___flmul@b+3)^0,w,c
 11848   001E96  6E13               	movwf	___flmul@bexp^0,c
 11849   001E98  AE03               	btfss	(___flmul@b+2)^0,7,c
 11850   001E9A  EF51  F00F         	goto	u5731
 11851   001E9E  EF53  F00F         	goto	u5730
 11852   001EA2                     u5731:
 11853   001EA2  EF54  F00F         	goto	l5435
 11854   001EA6                     u5730:
 11855   001EA6  8013               	bsf	___flmul@bexp^0,0,c
 11856   001EA8                     l5435:
 11857   001EA8  5013               	movf	___flmul@bexp^0,w,c
 11858   001EAA  B4D8               	btfsc	status,2,c
 11859   001EAC  EF5A  F00F         	goto	u5741
 11860   001EB0  EF5C  F00F         	goto	u5740
 11861   001EB4                     u5741:
 11862   001EB4  EF6F  F00F         	goto	l5443
 11863   001EB8                     u5740:
 11864   001EB8  2813               	incf	___flmul@bexp^0,w,c
 11865   001EBA  A4D8               	btfss	status,2,c
 11866   001EBC  EF62  F00F         	goto	u5751
 11867   001EC0  EF64  F00F         	goto	u5750
 11868   001EC4                     u5751:
 11869   001EC4  EF6C  F00F         	goto	l5441
 11870   001EC8                     u5750:
 11871   001EC8  0E00               	movlw	0
 11872   001ECA  6E01               	movwf	___flmul@b^0,c
 11873   001ECC  0E00               	movlw	0
 11874   001ECE  6E02               	movwf	(___flmul@b+1)^0,c
 11875   001ED0  0E00               	movlw	0
 11876   001ED2  6E03               	movwf	(___flmul@b+2)^0,c
 11877   001ED4  0E00               	movlw	0
 11878   001ED6  6E04               	movwf	(___flmul@b+3)^0,c
 11879   001ED8                     l5441:
 11880   001ED8  8E03               	bsf	(___flmul@b+2)^0,7,c
 11881   001EDA  EF77  F00F         	goto	l5445
 11882   001EDE                     l5443:
 11883   001EDE  0E00               	movlw	0
 11884   001EE0  6E01               	movwf	___flmul@b^0,c
 11885   001EE2  0E00               	movlw	0
 11886   001EE4  6E02               	movwf	(___flmul@b+1)^0,c
 11887   001EE6  0E00               	movlw	0
 11888   001EE8  6E03               	movwf	(___flmul@b+2)^0,c
 11889   001EEA  0E00               	movlw	0
 11890   001EEC  6E04               	movwf	(___flmul@b+3)^0,c
 11891   001EEE                     l5445:
 11892   001EEE  5008               	movf	(___flmul@a+3)^0,w,c
 11893   001EF0  0B80               	andlw	128
 11894   001EF2  1A0D               	xorwf	___flmul@sign^0,f,c
 11895   001EF4  5008               	movf	(___flmul@a+3)^0,w,c
 11896   001EF6  2408               	addwf	(___flmul@a+3)^0,w,c
 11897   001EF8  6E0E               	movwf	___flmul@aexp^0,c
 11898   001EFA  AE07               	btfss	(___flmul@a+2)^0,7,c
 11899   001EFC  EF82  F00F         	goto	u5761
 11900   001F00  EF84  F00F         	goto	u5760
 11901   001F04                     u5761:
 11902   001F04  EF85  F00F         	goto	l5453
 11903   001F08                     u5760:
 11904   001F08  800E               	bsf	___flmul@aexp^0,0,c
 11905   001F0A                     l5453:
 11906   001F0A  500E               	movf	___flmul@aexp^0,w,c
 11907   001F0C  B4D8               	btfsc	status,2,c
 11908   001F0E  EF8B  F00F         	goto	u5771
 11909   001F12  EF8D  F00F         	goto	u5770
 11910   001F16                     u5771:
 11911   001F16  EFA0  F00F         	goto	l5461
 11912   001F1A                     u5770:
 11913   001F1A  280E               	incf	___flmul@aexp^0,w,c
 11914   001F1C  A4D8               	btfss	status,2,c
 11915   001F1E  EF93  F00F         	goto	u5781
 11916   001F22  EF95  F00F         	goto	u5780
 11917   001F26                     u5781:
 11918   001F26  EF9D  F00F         	goto	l5459
 11919   001F2A                     u5780:
 11920   001F2A  0E00               	movlw	0
 11921   001F2C  6E05               	movwf	___flmul@a^0,c
 11922   001F2E  0E00               	movlw	0
 11923   001F30  6E06               	movwf	(___flmul@a+1)^0,c
 11924   001F32  0E00               	movlw	0
 11925   001F34  6E07               	movwf	(___flmul@a+2)^0,c
 11926   001F36  0E00               	movlw	0
 11927   001F38  6E08               	movwf	(___flmul@a+3)^0,c
 11928   001F3A                     l5459:
 11929   001F3A  8E07               	bsf	(___flmul@a+2)^0,7,c
 11930   001F3C  EFA8  F00F         	goto	l998
 11931   001F40                     l5461:
 11932   001F40  0E00               	movlw	0
 11933   001F42  6E05               	movwf	___flmul@a^0,c
 11934   001F44  0E00               	movlw	0
 11935   001F46  6E06               	movwf	(___flmul@a+1)^0,c
 11936   001F48  0E00               	movlw	0
 11937   001F4A  6E07               	movwf	(___flmul@a+2)^0,c
 11938   001F4C  0E00               	movlw	0
 11939   001F4E  6E08               	movwf	(___flmul@a+3)^0,c
 11940   001F50                     l998:
 11941   001F50  500E               	movf	___flmul@aexp^0,w,c
 11942   001F52  B4D8               	btfsc	status,2,c
 11943   001F54  EFAE  F00F         	goto	u5791
 11944   001F58  EFB0  F00F         	goto	u5790
 11945   001F5C                     u5791:
 11946   001F5C  EFB8  F00F         	goto	l5465
 11947   001F60                     u5790:
 11948   001F60  5013               	movf	___flmul@bexp^0,w,c
 11949   001F62  A4D8               	btfss	status,2,c
 11950   001F64  EFB6  F00F         	goto	u5801
 11951   001F68  EFB8  F00F         	goto	u5800
 11952   001F6C                     u5801:
 11953   001F6C  EFC2  F00F         	goto	l5469
 11954   001F70                     u5800:
 11955   001F70                     l5465:
 11956   001F70  0E00               	movlw	0
 11957   001F72  6E01               	movwf	?___flmul^0,c
 11958   001F74  0E00               	movlw	0
 11959   001F76  6E02               	movwf	(?___flmul+1)^0,c
 11960   001F78  0E00               	movlw	0
 11961   001F7A  6E03               	movwf	(?___flmul+2)^0,c
 11962   001F7C  0E00               	movlw	0
 11963   001F7E  6E04               	movwf	(?___flmul+3)^0,c
 11964   001F80  EF5A  F011         	goto	l1002
 11965   001F84                     l5469:
 11966   001F84  5007               	movf	(___flmul@a+2)^0,w,c
 11967   001F86  0201               	mulwf	___flmul@b^0,c
 11968   001F88  CFF3 F018          	movff	prodl,___flmul@temp
 11969   001F8C  CFF4 F019          	movff	prodh,___flmul@temp+1
 11970   001F90  5018               	movf	___flmul@temp^0,w,c
 11971   001F92  6E0F               	movwf	___flmul@grs^0,c
 11972   001F94  6A10               	clrf	(___flmul@grs+1)^0,c
 11973   001F96  6A11               	clrf	(___flmul@grs+2)^0,c
 11974   001F98  6A12               	clrf	(___flmul@grs+3)^0,c
 11975   001F9A  5019               	movf	(___flmul@temp+1)^0,w,c
 11976   001F9C  6E14               	movwf	___flmul@prod^0,c
 11977   001F9E  6A15               	clrf	(___flmul@prod+1)^0,c
 11978   001FA0  6A16               	clrf	(___flmul@prod+2)^0,c
 11979   001FA2  6A17               	clrf	(___flmul@prod+3)^0,c
 11980   001FA4  5006               	movf	(___flmul@a+1)^0,w,c
 11981   001FA6  0202               	mulwf	(___flmul@b+1)^0,c
 11982   001FA8  CFF3 F018          	movff	prodl,___flmul@temp
 11983   001FAC  CFF4 F019          	movff	prodh,___flmul@temp+1
 11984   001FB0  5018               	movf	___flmul@temp^0,w,c
 11985   001FB2  260F               	addwf	___flmul@grs^0,f,c
 11986   001FB4  0E00               	movlw	0
 11987   001FB6  2210               	addwfc	(___flmul@grs+1)^0,f,c
 11988   001FB8  2211               	addwfc	(___flmul@grs+2)^0,f,c
 11989   001FBA  2212               	addwfc	(___flmul@grs+3)^0,f,c
 11990   001FBC  5019               	movf	(___flmul@temp+1)^0,w,c
 11991   001FBE  2614               	addwf	___flmul@prod^0,f,c
 11992   001FC0  0E00               	movlw	0
 11993   001FC2  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11994   001FC4  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11995   001FC6  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11996   001FC8  5005               	movf	___flmul@a^0,w,c
 11997   001FCA  0203               	mulwf	(___flmul@b+2)^0,c
 11998   001FCC  CFF3 F018          	movff	prodl,___flmul@temp
 11999   001FD0  CFF4 F019          	movff	prodh,___flmul@temp+1
 12000   001FD4  5018               	movf	___flmul@temp^0,w,c
 12001   001FD6  260F               	addwf	___flmul@grs^0,f,c
 12002   001FD8  0E00               	movlw	0
 12003   001FDA  2210               	addwfc	(___flmul@grs+1)^0,f,c
 12004   001FDC  2211               	addwfc	(___flmul@grs+2)^0,f,c
 12005   001FDE  2212               	addwfc	(___flmul@grs+3)^0,f,c
 12006   001FE0  5019               	movf	(___flmul@temp+1)^0,w,c
 12007   001FE2  2614               	addwf	___flmul@prod^0,f,c
 12008   001FE4  0E00               	movlw	0
 12009   001FE6  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12010   001FE8  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12011   001FEA  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12012   001FEC  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
 12013   001FF0  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
 12014   001FF4  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
 12015   001FF8  6A0F               	clrf	___flmul@grs^0,c
 12016   001FFA  5005               	movf	___flmul@a^0,w,c
 12017   001FFC  0202               	mulwf	(___flmul@b+1)^0,c
 12018   001FFE  CFF3 F018          	movff	prodl,___flmul@temp
 12019   002002  CFF4 F019          	movff	prodh,___flmul@temp+1
 12020   002006  5018               	movf	___flmul@temp^0,w,c
 12021   002008  260F               	addwf	___flmul@grs^0,f,c
 12022   00200A  5019               	movf	(___flmul@temp+1)^0,w,c
 12023   00200C  2210               	addwfc	(___flmul@grs+1)^0,f,c
 12024   00200E  0E00               	movlw	0
 12025   002010  2211               	addwfc	(___flmul@grs+2)^0,f,c
 12026   002012  0E00               	movlw	0
 12027   002014  2212               	addwfc	(___flmul@grs+3)^0,f,c
 12028   002016  5006               	movf	(___flmul@a+1)^0,w,c
 12029   002018  0201               	mulwf	___flmul@b^0,c
 12030   00201A  CFF3 F018          	movff	prodl,___flmul@temp
 12031   00201E  CFF4 F019          	movff	prodh,___flmul@temp+1
 12032   002022  5018               	movf	___flmul@temp^0,w,c
 12033   002024  260F               	addwf	___flmul@grs^0,f,c
 12034   002026  5019               	movf	(___flmul@temp+1)^0,w,c
 12035   002028  2210               	addwfc	(___flmul@grs+1)^0,f,c
 12036   00202A  0E00               	movlw	0
 12037   00202C  2211               	addwfc	(___flmul@grs+2)^0,f,c
 12038   00202E  0E00               	movlw	0
 12039   002030  2212               	addwfc	(___flmul@grs+3)^0,f,c
 12040   002032  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
 12041   002036  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
 12042   00203A  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
 12043   00203E  6A0F               	clrf	___flmul@grs^0,c
 12044   002040  5005               	movf	___flmul@a^0,w,c
 12045   002042  0201               	mulwf	___flmul@b^0,c
 12046   002044  CFF3 F018          	movff	prodl,___flmul@temp
 12047   002048  CFF4 F019          	movff	prodh,___flmul@temp+1
 12048   00204C  5018               	movf	___flmul@temp^0,w,c
 12049   00204E  260F               	addwf	___flmul@grs^0,f,c
 12050   002050  5019               	movf	(___flmul@temp+1)^0,w,c
 12051   002052  2210               	addwfc	(___flmul@grs+1)^0,f,c
 12052   002054  0E00               	movlw	0
 12053   002056  2211               	addwfc	(___flmul@grs+2)^0,f,c
 12054   002058  0E00               	movlw	0
 12055   00205A  2212               	addwfc	(___flmul@grs+3)^0,f,c
 12056   00205C  5007               	movf	(___flmul@a+2)^0,w,c
 12057   00205E  0202               	mulwf	(___flmul@b+1)^0,c
 12058   002060  CFF3 F018          	movff	prodl,___flmul@temp
 12059   002064  CFF4 F019          	movff	prodh,___flmul@temp+1
 12060   002068  5018               	movf	___flmul@temp^0,w,c
 12061   00206A  2614               	addwf	___flmul@prod^0,f,c
 12062   00206C  5019               	movf	(___flmul@temp+1)^0,w,c
 12063   00206E  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12064   002070  0E00               	movlw	0
 12065   002072  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12066   002074  0E00               	movlw	0
 12067   002076  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12068   002078  5006               	movf	(___flmul@a+1)^0,w,c
 12069   00207A  0203               	mulwf	(___flmul@b+2)^0,c
 12070   00207C  CFF3 F018          	movff	prodl,___flmul@temp
 12071   002080  CFF4 F019          	movff	prodh,___flmul@temp+1
 12072   002084  5018               	movf	___flmul@temp^0,w,c
 12073   002086  2614               	addwf	___flmul@prod^0,f,c
 12074   002088  5019               	movf	(___flmul@temp+1)^0,w,c
 12075   00208A  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12076   00208C  0E00               	movlw	0
 12077   00208E  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12078   002090  0E00               	movlw	0
 12079   002092  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12080   002094  5007               	movf	(___flmul@a+2)^0,w,c
 12081   002096  0203               	mulwf	(___flmul@b+2)^0,c
 12082   002098  CFF3 F018          	movff	prodl,___flmul@temp
 12083   00209C  CFF4 F019          	movff	prodh,___flmul@temp+1
 12084   0020A0  5018               	movf	___flmul@temp^0,w,c
 12085   0020A2  6E09               	movwf	??___flmul^0,c
 12086   0020A4  5019               	movf	(___flmul@temp+1)^0,w,c
 12087   0020A6  6E0A               	movwf	(??___flmul+1)^0,c
 12088   0020A8  6A0B               	clrf	(??___flmul+2)^0,c
 12089   0020AA  6A0C               	clrf	(??___flmul+3)^0,c
 12090   0020AC  C00B  F00C         	movff	??___flmul+2,??___flmul+3
 12091   0020B0  C00A  F00B         	movff	??___flmul+1,??___flmul+2
 12092   0020B4  C009  F00A         	movff	??___flmul,??___flmul+1
 12093   0020B8  6A09               	clrf	??___flmul^0,c
 12094   0020BA  5009               	movf	??___flmul^0,w,c
 12095   0020BC  2614               	addwf	___flmul@prod^0,f,c
 12096   0020BE  500A               	movf	(??___flmul+1)^0,w,c
 12097   0020C0  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12098   0020C2  500B               	movf	(??___flmul+2)^0,w,c
 12099   0020C4  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12100   0020C6  500C               	movf	(??___flmul+3)^0,w,c
 12101   0020C8  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12102   0020CA  C00F  F009         	movff	___flmul@grs,??___flmul
 12103   0020CE  C010  F00A         	movff	___flmul@grs+1,??___flmul+1
 12104   0020D2  C011  F00B         	movff	___flmul@grs+2,??___flmul+2
 12105   0020D6  C012  F00C         	movff	___flmul@grs+3,??___flmul+3
 12106   0020DA  0E19               	movlw	25
 12107   0020DC  EF75  F010         	goto	u5810
 12108   0020E0                     u5815:
 12109   0020E0  90D8               	bcf	status,0,c
 12110   0020E2  320C               	rrcf	(??___flmul+3)^0,f,c
 12111   0020E4  320B               	rrcf	(??___flmul+2)^0,f,c
 12112   0020E6  320A               	rrcf	(??___flmul+1)^0,f,c
 12113   0020E8  3209               	rrcf	??___flmul^0,f,c
 12114   0020EA                     u5810:
 12115   0020EA  2EE8               	decfsz	wreg,f,c
 12116   0020EC  EF70  F010         	goto	u5815
 12117   0020F0  5009               	movf	??___flmul^0,w,c
 12118   0020F2  2614               	addwf	___flmul@prod^0,f,c
 12119   0020F4  500A               	movf	(??___flmul+1)^0,w,c
 12120   0020F6  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12121   0020F8  500B               	movf	(??___flmul+2)^0,w,c
 12122   0020FA  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12123   0020FC  500C               	movf	(??___flmul+3)^0,w,c
 12124   0020FE  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12125   002100  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
 12126   002104  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
 12127   002108  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
 12128   00210C  6A0F               	clrf	___flmul@grs^0,c
 12129   00210E  500E               	movf	___flmul@aexp^0,w,c
 12130   002110  C013  F009         	movff	___flmul@bexp,??___flmul
 12131   002114  6A0A               	clrf	(??___flmul+1)^0,c
 12132   002116  2609               	addwf	??___flmul^0,f,c
 12133   002118  0E00               	movlw	0
 12134   00211A  220A               	addwfc	(??___flmul+1)^0,f,c
 12135   00211C  0E82               	movlw	130
 12136   00211E  2409               	addwf	??___flmul^0,w,c
 12137   002120  6E18               	movwf	___flmul@temp^0,c
 12138   002122  0EFF               	movlw	255
 12139   002124  200A               	addwfc	(??___flmul+1)^0,w,c
 12140   002126  6E19               	movwf	(___flmul@temp+1)^0,c
 12141   002128  EFAB  F010         	goto	l5517
 12142   00212C                     l5511:
 12143   00212C  90D8               	bcf	status,0,c
 12144   00212E  3614               	rlcf	___flmul@prod^0,f,c
 12145   002130  3615               	rlcf	(___flmul@prod+1)^0,f,c
 12146   002132  3616               	rlcf	(___flmul@prod+2)^0,f,c
 12147   002134  3617               	rlcf	(___flmul@prod+3)^0,f,c
 12148   002136  AE12               	btfss	(___flmul@grs+3)^0,7,c
 12149   002138  EFA0  F010         	goto	u5821
 12150   00213C  EFA2  F010         	goto	u5820
 12151   002140                     u5821:
 12152   002140  EFA3  F010         	goto	l1005
 12153   002144                     u5820:
 12154   002144  8014               	bsf	___flmul@prod^0,0,c
 12155   002146                     l1005:
 12156   002146  90D8               	bcf	status,0,c
 12157   002148  360F               	rlcf	___flmul@grs^0,f,c
 12158   00214A  3610               	rlcf	(___flmul@grs+1)^0,f,c
 12159   00214C  3611               	rlcf	(___flmul@grs+2)^0,f,c
 12160   00214E  3612               	rlcf	(___flmul@grs+3)^0,f,c
 12161   002150  0618               	decf	___flmul@temp^0,f,c
 12162   002152  A0D8               	btfss	status,0,c
 12163   002154  0619               	decf	(___flmul@temp+1)^0,f,c
 12164   002156                     l5517:
 12165   002156  AE16               	btfss	(___flmul@prod+2)^0,7,c
 12166   002158  EFB0  F010         	goto	u5831
 12167   00215C  EFB2  F010         	goto	u5830
 12168   002160                     u5831:
 12169   002160  EF96  F010         	goto	l5511
 12170   002164                     u5830:
 12171   002164  0E00               	movlw	0
 12172   002166  6E0E               	movwf	___flmul@aexp^0,c
 12173   002168  AE12               	btfss	(___flmul@grs+3)^0,7,c
 12174   00216A  EFB9  F010         	goto	u5841
 12175   00216E  EFBB  F010         	goto	u5840
 12176   002172                     u5841:
 12177   002172  EFDF  F010         	goto	l1007
 12178   002176                     u5840:
 12179   002176  0EFF               	movlw	255
 12180   002178  140F               	andwf	___flmul@grs^0,w,c
 12181   00217A  6E09               	movwf	??___flmul^0,c
 12182   00217C  0EFF               	movlw	255
 12183   00217E  1410               	andwf	(___flmul@grs+1)^0,w,c
 12184   002180  6E0A               	movwf	(??___flmul+1)^0,c
 12185   002182  0EFF               	movlw	255
 12186   002184  1411               	andwf	(___flmul@grs+2)^0,w,c
 12187   002186  6E0B               	movwf	(??___flmul+2)^0,c
 12188   002188  0E7F               	movlw	127
 12189   00218A  1412               	andwf	(___flmul@grs+3)^0,w,c
 12190   00218C  6E0C               	movwf	(??___flmul+3)^0,c
 12191   00218E  5009               	movf	??___flmul^0,w,c
 12192   002190  100A               	iorwf	(??___flmul+1)^0,w,c
 12193   002192  100B               	iorwf	(??___flmul+2)^0,w,c
 12194   002194  100C               	iorwf	(??___flmul+3)^0,w,c
 12195   002196  B4D8               	btfsc	status,2,c
 12196   002198  EFD0  F010         	goto	u5851
 12197   00219C  EFD2  F010         	goto	u5850
 12198   0021A0                     u5851:
 12199   0021A0  EFD6  F010         	goto	l1008
 12200   0021A4                     u5850:
 12201   0021A4                     l5525:
 12202   0021A4  0E01               	movlw	1
 12203   0021A6  6E0E               	movwf	___flmul@aexp^0,c
 12204   0021A8  EFDF  F010         	goto	l1007
 12205   0021AC                     l1008:
 12206   0021AC  A014               	btfss	___flmul@prod^0,0,c
 12207   0021AE  EFDB  F010         	goto	u5861
 12208   0021B2  EFDD  F010         	goto	u5860
 12209   0021B6                     u5861:
 12210   0021B6  EFDF  F010         	goto	l1007
 12211   0021BA                     u5860:
 12212   0021BA  EFD2  F010         	goto	l5525
 12213   0021BE                     l1007:
 12214   0021BE  500E               	movf	___flmul@aexp^0,w,c
 12215   0021C0  B4D8               	btfsc	status,2,c
 12216   0021C2  EFE5  F010         	goto	u5871
 12217   0021C6  EFE7  F010         	goto	u5870
 12218   0021CA                     u5871:
 12219   0021CA  EF0B  F011         	goto	l5537
 12220   0021CE                     u5870:
 12221   0021CE  0E01               	movlw	1
 12222   0021D0  2614               	addwf	___flmul@prod^0,f,c
 12223   0021D2  0E00               	movlw	0
 12224   0021D4  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12225   0021D6  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12226   0021D8  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12227   0021DA  A017               	btfss	(___flmul@prod+3)^0,0,c
 12228   0021DC  EFF2  F010         	goto	u5881
 12229   0021E0  EFF4  F010         	goto	u5880
 12230   0021E4                     u5881:
 12231   0021E4  EF0B  F011         	goto	l5537
 12232   0021E8                     u5880:
 12233   0021E8  C014  F009         	movff	___flmul@prod,??___flmul
 12234   0021EC  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
 12235   0021F0  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
 12236   0021F4  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
 12237   0021F8  340C               	rlcf	(??___flmul+3)^0,w,c
 12238   0021FA  320C               	rrcf	(??___flmul+3)^0,f,c
 12239   0021FC  320B               	rrcf	(??___flmul+2)^0,f,c
 12240   0021FE  320A               	rrcf	(??___flmul+1)^0,f,c
 12241   002200  3209               	rrcf	??___flmul^0,f,c
 12242   002202  C009  F014         	movff	??___flmul,___flmul@prod
 12243   002206  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
 12244   00220A  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
 12245   00220E  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
 12246   002212  4A18               	infsnz	___flmul@temp^0,f,c
 12247   002214  2A19               	incf	(___flmul@temp+1)^0,f,c
 12248   002216                     l5537:
 12249   002216  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 12250   002218  EF16  F011         	goto	u5891
 12251   00221C  5019               	movf	(___flmul@temp+1)^0,w,c
 12252   00221E  E108               	bnz	u5890
 12253   002220  2818               	incf	___flmul@temp^0,w,c
 12254   002222  A0D8               	btfss	status,0,c
 12255   002224  EF16  F011         	goto	u5891
 12256   002228  EF18  F011         	goto	u5890
 12257   00222C                     u5891:
 12258   00222C  EF22  F011         	goto	l5541
 12259   002230                     u5890:
 12260   002230  0E00               	movlw	0
 12261   002232  6E14               	movwf	___flmul@prod^0,c
 12262   002234  0E00               	movlw	0
 12263   002236  6E15               	movwf	(___flmul@prod+1)^0,c
 12264   002238  0E80               	movlw	128
 12265   00223A  6E16               	movwf	(___flmul@prod+2)^0,c
 12266   00223C  0E7F               	movlw	127
 12267   00223E  6E17               	movwf	(___flmul@prod+3)^0,c
 12268   002240  EF50  F011         	goto	l5553
 12269   002244                     l5541:
 12270   002244  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 12271   002246  EF2F  F011         	goto	u5900
 12272   00224A  5019               	movf	(___flmul@temp+1)^0,w,c
 12273   00224C  E106               	bnz	u5901
 12274   00224E  0418               	decf	___flmul@temp^0,w,c
 12275   002250  B0D8               	btfsc	status,0,c
 12276   002252  EF2D  F011         	goto	u5901
 12277   002256  EF2F  F011         	goto	u5900
 12278   00225A                     u5901:
 12279   00225A  EF3B  F011         	goto	l1015
 12280   00225E                     u5900:
 12281   00225E  0E00               	movlw	0
 12282   002260  6E14               	movwf	___flmul@prod^0,c
 12283   002262  0E00               	movlw	0
 12284   002264  6E15               	movwf	(___flmul@prod+1)^0,c
 12285   002266  0E00               	movlw	0
 12286   002268  6E16               	movwf	(___flmul@prod+2)^0,c
 12287   00226A  0E00               	movlw	0
 12288   00226C  6E17               	movwf	(___flmul@prod+3)^0,c
 12289   00226E  0E00               	movlw	0
 12290   002270  6E0D               	movwf	___flmul@sign^0,c
 12291   002272  EF50  F011         	goto	l5553
 12292   002276                     l1015:
 12293   002276  C018  F013         	movff	___flmul@temp,___flmul@bexp
 12294   00227A  0EFF               	movlw	255
 12295   00227C  1614               	andwf	___flmul@prod^0,f,c
 12296   00227E  0EFF               	movlw	255
 12297   002280  1615               	andwf	(___flmul@prod+1)^0,f,c
 12298   002282  0E7F               	movlw	127
 12299   002284  1616               	andwf	(___flmul@prod+2)^0,f,c
 12300   002286  0E00               	movlw	0
 12301   002288  1617               	andwf	(___flmul@prod+3)^0,f,c
 12302   00228A  A013               	btfss	___flmul@bexp^0,0,c
 12303   00228C  EF4A  F011         	goto	u5911
 12304   002290  EF4C  F011         	goto	u5910
 12305   002294                     u5911:
 12306   002294  EF4D  F011         	goto	l5551
 12307   002298                     u5910:
 12308   002298  8E16               	bsf	(___flmul@prod+2)^0,7,c
 12309   00229A                     l5551:
 12310   00229A  90D8               	bcf	status,0,c
 12311   00229C  3013               	rrcf	___flmul@bexp^0,w,c
 12312   00229E  6E17               	movwf	(___flmul@prod+3)^0,c
 12313   0022A0                     l5553:
 12314   0022A0  500D               	movf	___flmul@sign^0,w,c
 12315   0022A2  1217               	iorwf	(___flmul@prod+3)^0,f,c
 12316   0022A4  C014  F001         	movff	___flmul@prod,?___flmul
 12317   0022A8  C015  F002         	movff	___flmul@prod+1,?___flmul+1
 12318   0022AC  C016  F003         	movff	___flmul@prod+2,?___flmul+2
 12319   0022B0  C017  F004         	movff	___flmul@prod+3,?___flmul+3
 12320   0022B4                     l1002:
 12321   0022B4  0012               	return		;funcret
 12322   0022B6                     __end_of___flmul:
 12323                           	callstack 0
 12324                           
 12325 ;; *************** function ___flge *****************
 12326 ;; Defined at:
 12327 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
 12328 ;; Parameters:    Size  Location     Type
 12329 ;;  ff1             4   25[COMRAM] unsigned char 
 12330 ;;  ff2             4   29[COMRAM] unsigned char 
 12331 ;; Auto vars:     Size  Location     Type
 12332 ;;		None
 12333 ;; Return value:  Size  Location     Type
 12334 ;;		None               void
 12335 ;; Registers used:
 12336 ;;		wreg, status,2, status,0
 12337 ;; Tracked objects:
 12338 ;;		On entry : 0/0
 12339 ;;		On exit  : 0/0
 12340 ;;		Unchanged: 0/0
 12341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12342 ;;      Params:         8       0       0       0       0       0       0       0       0
 12343 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12344 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12345 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12346 ;;Total ram usage:       12 bytes
 12347 ;; Hardware stack levels used: 1
 12348 ;; This function calls:
 12349 ;;		Nothing
 12350 ;; This function is called by:
 12351 ;;		_ArmBalancePID
 12352 ;;		_WheelBalancePID
 12353 ;;		_main
 12354 ;;		_efgtoa
 12355 ;; This function uses a non-reentrant model
 12356 ;;
 12357                           
 12358                           	psect	text55
 12359   004636                     __ptext55:
 12360                           	callstack 0
 12361   004636                     ___flge:
 12362                           	callstack 26
 12363   004636  0E00               	movlw	0
 12364   004638  141A               	andwf	___flge@ff1^0,w,c
 12365   00463A  6E22               	movwf	??___flge^0,c
 12366   00463C  0E00               	movlw	0
 12367   00463E  141B               	andwf	(___flge@ff1+1)^0,w,c
 12368   004640  6E23               	movwf	(??___flge+1)^0,c
 12369   004642  0E80               	movlw	128
 12370   004644  141C               	andwf	(___flge@ff1+2)^0,w,c
 12371   004646  6E24               	movwf	(??___flge+2)^0,c
 12372   004648  0E7F               	movlw	127
 12373   00464A  141D               	andwf	(___flge@ff1+3)^0,w,c
 12374   00464C  6E25               	movwf	(??___flge+3)^0,c
 12375   00464E  5022               	movf	??___flge^0,w,c
 12376   004650  1023               	iorwf	(??___flge+1)^0,w,c
 12377   004652  1024               	iorwf	(??___flge+2)^0,w,c
 12378   004654  1025               	iorwf	(??___flge+3)^0,w,c
 12379   004656  A4D8               	btfss	status,2,c
 12380   004658  EF30  F023         	goto	u6071
 12381   00465C  EF32  F023         	goto	u6070
 12382   004660                     u6071:
 12383   004660  EF3A  F023         	goto	l5665
 12384   004664                     u6070:
 12385   004664  0E00               	movlw	0
 12386   004666  6E1A               	movwf	___flge@ff1^0,c
 12387   004668  0E00               	movlw	0
 12388   00466A  6E1B               	movwf	(___flge@ff1+1)^0,c
 12389   00466C  0E00               	movlw	0
 12390   00466E  6E1C               	movwf	(___flge@ff1+2)^0,c
 12391   004670  0E00               	movlw	0
 12392   004672  6E1D               	movwf	(___flge@ff1+3)^0,c
 12393   004674                     l5665:
 12394   004674  0E00               	movlw	0
 12395   004676  141E               	andwf	___flge@ff2^0,w,c
 12396   004678  6E22               	movwf	??___flge^0,c
 12397   00467A  0E00               	movlw	0
 12398   00467C  141F               	andwf	(___flge@ff2+1)^0,w,c
 12399   00467E  6E23               	movwf	(??___flge+1)^0,c
 12400   004680  0E80               	movlw	128
 12401   004682  1420               	andwf	(___flge@ff2+2)^0,w,c
 12402   004684  6E24               	movwf	(??___flge+2)^0,c
 12403   004686  0E7F               	movlw	127
 12404   004688  1421               	andwf	(___flge@ff2+3)^0,w,c
 12405   00468A  6E25               	movwf	(??___flge+3)^0,c
 12406   00468C  5022               	movf	??___flge^0,w,c
 12407   00468E  1023               	iorwf	(??___flge+1)^0,w,c
 12408   004690  1024               	iorwf	(??___flge+2)^0,w,c
 12409   004692  1025               	iorwf	(??___flge+3)^0,w,c
 12410   004694  A4D8               	btfss	status,2,c
 12411   004696  EF4F  F023         	goto	u6081
 12412   00469A  EF51  F023         	goto	u6080
 12413   00469E                     u6081:
 12414   00469E  EF59  F023         	goto	l5669
 12415   0046A2                     u6080:
 12416   0046A2  0E00               	movlw	0
 12417   0046A4  6E1E               	movwf	___flge@ff2^0,c
 12418   0046A6  0E00               	movlw	0
 12419   0046A8  6E1F               	movwf	(___flge@ff2+1)^0,c
 12420   0046AA  0E00               	movlw	0
 12421   0046AC  6E20               	movwf	(___flge@ff2+2)^0,c
 12422   0046AE  0E00               	movlw	0
 12423   0046B0  6E21               	movwf	(___flge@ff2+3)^0,c
 12424   0046B2                     l5669:
 12425   0046B2  AE1D               	btfss	(___flge@ff1+3)^0,7,c
 12426   0046B4  EF5E  F023         	goto	u6091
 12427   0046B8  EF60  F023         	goto	u6090
 12428   0046BC                     u6091:
 12429   0046BC  EF69  F023         	goto	l5673
 12430   0046C0                     u6090:
 12431   0046C0  6C1A               	negf	___flge@ff1^0,c
 12432   0046C2  1E1B               	comf	(___flge@ff1+1)^0,f,c
 12433   0046C4  B0D8               	btfsc	status,0,c
 12434   0046C6  2A1B               	incf	(___flge@ff1+1)^0,f,c
 12435   0046C8  1E1C               	comf	(___flge@ff1+2)^0,f,c
 12436   0046CA  B0D8               	btfsc	status,0,c
 12437   0046CC  2A1C               	incf	(___flge@ff1+2)^0,f,c
 12438   0046CE  0E80               	movlw	128
 12439   0046D0  561D               	subfwb	(___flge@ff1+3)^0,f,c
 12440   0046D2                     l5673:
 12441   0046D2  AE21               	btfss	(___flge@ff2+3)^0,7,c
 12442   0046D4  EF6E  F023         	goto	u6101
 12443   0046D8  EF70  F023         	goto	u6100
 12444   0046DC                     u6101:
 12445   0046DC  EF79  F023         	goto	l649
 12446   0046E0                     u6100:
 12447   0046E0  6C1E               	negf	___flge@ff2^0,c
 12448   0046E2  1E1F               	comf	(___flge@ff2+1)^0,f,c
 12449   0046E4  B0D8               	btfsc	status,0,c
 12450   0046E6  2A1F               	incf	(___flge@ff2+1)^0,f,c
 12451   0046E8  1E20               	comf	(___flge@ff2+2)^0,f,c
 12452   0046EA  B0D8               	btfsc	status,0,c
 12453   0046EC  2A20               	incf	(___flge@ff2+2)^0,f,c
 12454   0046EE  0E80               	movlw	128
 12455   0046F0  5621               	subfwb	(___flge@ff2+3)^0,f,c
 12456   0046F2                     l649:
 12457   0046F2  0E00               	movlw	0
 12458   0046F4  1A1A               	xorwf	___flge@ff1^0,f,c
 12459   0046F6  0E00               	movlw	0
 12460   0046F8  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
 12461   0046FA  0E00               	movlw	0
 12462   0046FC  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
 12463   0046FE  0E80               	movlw	128
 12464   004700  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
 12465   004702  0E00               	movlw	0
 12466   004704  1A1E               	xorwf	___flge@ff2^0,f,c
 12467   004706  0E00               	movlw	0
 12468   004708  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
 12469   00470A  0E00               	movlw	0
 12470   00470C  1A20               	xorwf	(___flge@ff2+2)^0,f,c
 12471   00470E  0E80               	movlw	128
 12472   004710  1A21               	xorwf	(___flge@ff2+3)^0,f,c
 12473   004712  501E               	movf	___flge@ff2^0,w,c
 12474   004714  5C1A               	subwf	___flge@ff1^0,w,c
 12475   004716  501F               	movf	(___flge@ff2+1)^0,w,c
 12476   004718  581B               	subwfb	(___flge@ff1+1)^0,w,c
 12477   00471A  5020               	movf	(___flge@ff2+2)^0,w,c
 12478   00471C  581C               	subwfb	(___flge@ff1+2)^0,w,c
 12479   00471E  5021               	movf	(___flge@ff2+3)^0,w,c
 12480   004720  581D               	subwfb	(___flge@ff1+3)^0,w,c
 12481   004722  B0D8               	btfsc	status,0,c
 12482   004724  EF96  F023         	goto	u6111
 12483   004728  EF98  F023         	goto	u6110
 12484   00472C                     u6111:
 12485   00472C  EF9B  F023         	goto	l5679
 12486   004730                     u6110:
 12487   004730  90D8               	bcf	status,0,c
 12488   004732  EF9C  F023         	goto	l654
 12489   004736                     l5679:
 12490   004736  80D8               	bsf	status,0,c
 12491   004738                     l654:
 12492   004738  0012               	return		;funcret
 12493   00473A                     __end_of___flge:
 12494                           	callstack 0
 12495                           
 12496                           	psect	rparam
 12497   000000                     
 12498                           	psect	idloc
 12499                           
 12500                           ;Config register IDLOC0 @ 0x200000
 12501                           ;	unspecified, using default values
 12502   200000                     	org	2097152
 12503   200000  FF                 	db	255
 12504                           
 12505                           ;Config register IDLOC1 @ 0x200001
 12506                           ;	unspecified, using default values
 12507   200001                     	org	2097153
 12508   200001  FF                 	db	255
 12509                           
 12510                           ;Config register IDLOC2 @ 0x200002
 12511                           ;	unspecified, using default values
 12512   200002                     	org	2097154
 12513   200002  FF                 	db	255
 12514                           
 12515                           ;Config register IDLOC3 @ 0x200003
 12516                           ;	unspecified, using default values
 12517   200003                     	org	2097155
 12518   200003  FF                 	db	255
 12519                           
 12520                           ;Config register IDLOC4 @ 0x200004
 12521                           ;	unspecified, using default values
 12522   200004                     	org	2097156
 12523   200004  FF                 	db	255
 12524                           
 12525                           ;Config register IDLOC5 @ 0x200005
 12526                           ;	unspecified, using default values
 12527   200005                     	org	2097157
 12528   200005  FF                 	db	255
 12529                           
 12530                           ;Config register IDLOC6 @ 0x200006
 12531                           ;	unspecified, using default values
 12532   200006                     	org	2097158
 12533   200006  FF                 	db	255
 12534                           
 12535                           ;Config register IDLOC7 @ 0x200007
 12536                           ;	unspecified, using default values
 12537   200007                     	org	2097159
 12538   200007  FF                 	db	255
 12539                           
 12540                           	psect	config
 12541                           
 12542                           ;Config register CONFIG1L @ 0x300000
 12543                           ;	PLL Prescaler Selection bits
 12544                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12545                           ;	System Clock Postscaler Selection bits
 12546                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12547                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12548                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12549   300000                     	org	3145728
 12550   300000  00                 	db	0
 12551                           
 12552                           ;Config register CONFIG1H @ 0x300001
 12553                           ;	Oscillator Selection bits
 12554                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
 12555                           ;	Fail-Safe Clock Monitor Enable bit
 12556                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12557                           ;	Internal/External Oscillator Switchover bit
 12558                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12559   300001                     	org	3145729
 12560   300001  08                 	db	8
 12561                           
 12562                           ;Config register CONFIG2L @ 0x300002
 12563                           ;	Power-up Timer Enable bit
 12564                           ;	PWRT = OFF, PWRT disabled
 12565                           ;	Brown-out Reset Enable bits
 12566                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12567                           ;	Brown-out Reset Voltage bits
 12568                           ;	BORV = 3, Minimum setting 2.05V
 12569                           ;	USB Voltage Regulator Enable bit
 12570                           ;	VREGEN = OFF, USB voltage regulator disabled
 12571   300002                     	org	3145730
 12572   300002  19                 	db	25
 12573                           
 12574                           ;Config register CONFIG2H @ 0x300003
 12575                           ;	Watchdog Timer Enable bit
 12576                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12577                           ;	Watchdog Timer Postscale Select bits
 12578                           ;	WDTPS = 32768, 1:32768
 12579   300003                     	org	3145731
 12580   300003  1E                 	db	30
 12581                           
 12582                           ; Padding undefined space
 12583   300004                     	org	3145732
 12584   300004  FF                 	db	255
 12585                           
 12586                           ;Config register CONFIG3H @ 0x300005
 12587                           ;	CCP2 MUX bit
 12588                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12589                           ;	PORTB A/D Enable bit
 12590                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12591                           ;	Low-Power Timer 1 Oscillator Enable bit
 12592                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12593                           ;	MCLR Pin Enable bit
 12594                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12595   300005                     	org	3145733
 12596   300005  81                 	db	129
 12597                           
 12598                           ;Config register CONFIG4L @ 0x300006
 12599                           ;	Stack Full/Underflow Reset Enable bit
 12600                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 12601                           ;	Single-Supply ICSP Enable bit
 12602                           ;	LVP = ON, Single-Supply ICSP enabled
 12603                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12604                           ;	ICPRT = OFF, ICPORT disabled
 12605                           ;	Extended Instruction Set Enable bit
 12606                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12607                           ;	Background Debugger Enable bit
 12608                           ;	DEBUG = 0x1, unprogrammed default
 12609   300006                     	org	3145734
 12610   300006  84                 	db	132
 12611                           
 12612                           ; Padding undefined space
 12613   300007                     	org	3145735
 12614   300007  FF                 	db	255
 12615                           
 12616                           ;Config register CONFIG5L @ 0x300008
 12617                           ;	Code Protection bit
 12618                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12619                           ;	Code Protection bit
 12620                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12621                           ;	Code Protection bit
 12622                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12623                           ;	Code Protection bit
 12624                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 12625   300008                     	org	3145736
 12626   300008  0F                 	db	15
 12627                           
 12628                           ;Config register CONFIG5H @ 0x300009
 12629                           ;	Boot Block Code Protection bit
 12630                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12631                           ;	Data EEPROM Code Protection bit
 12632                           ;	CPD = OFF, Data EEPROM is not code-protected
 12633   300009                     	org	3145737
 12634   300009  C0                 	db	192
 12635                           
 12636                           ;Config register CONFIG6L @ 0x30000A
 12637                           ;	Write Protection bit
 12638                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12639                           ;	Write Protection bit
 12640                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12641                           ;	Write Protection bit
 12642                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12643                           ;	Write Protection bit
 12644                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 12645   30000A                     	org	3145738
 12646   30000A  0F                 	db	15
 12647                           
 12648                           ;Config register CONFIG6H @ 0x30000B
 12649                           ;	Configuration Register Write Protection bit
 12650                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12651                           ;	Boot Block Write Protection bit
 12652                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12653                           ;	Data EEPROM Write Protection bit
 12654                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12655   30000B                     	org	3145739
 12656   30000B  E0                 	db	224
 12657                           
 12658                           ;Config register CONFIG7L @ 0x30000C
 12659                           ;	Table Read Protection bit
 12660                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12661                           ;	Table Read Protection bit
 12662                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12663                           ;	Table Read Protection bit
 12664                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12665                           ;	Table Read Protection bit
 12666                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12667   30000C                     	org	3145740
 12668   30000C  0F                 	db	15
 12669                           
 12670                           ;Config register CONFIG7H @ 0x30000D
 12671                           ;	Boot Block Table Read Protection bit
 12672                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12673   30000D                     	org	3145741
 12674   30000D  40                 	db	64
 12675                           tosu	equ	0xFFF
 12676                           tosh	equ	0xFFE
 12677                           tosl	equ	0xFFD
 12678                           stkptr	equ	0xFFC
 12679                           pclatu	equ	0xFFB
 12680                           pclath	equ	0xFFA
 12681                           pcl	equ	0xFF9
 12682                           tblptru	equ	0xFF8
 12683                           tblptrh	equ	0xFF7
 12684                           tblptrl	equ	0xFF6
 12685                           tablat	equ	0xFF5
 12686                           prodh	equ	0xFF4
 12687                           prodl	equ	0xFF3
 12688                           indf0	equ	0xFEF
 12689                           postinc0	equ	0xFEE
 12690                           postdec0	equ	0xFED
 12691                           preinc0	equ	0xFEC
 12692                           plusw0	equ	0xFEB
 12693                           fsr0h	equ	0xFEA
 12694                           fsr0l	equ	0xFE9
 12695                           wreg	equ	0xFE8
 12696                           indf1	equ	0xFE7
 12697                           postinc1	equ	0xFE6
 12698                           postdec1	equ	0xFE5
 12699                           preinc1	equ	0xFE4
 12700                           plusw1	equ	0xFE3
 12701                           fsr1h	equ	0xFE2
 12702                           fsr1l	equ	0xFE1
 12703                           bsr	equ	0xFE0
 12704                           indf2	equ	0xFDF
 12705                           postinc2	equ	0xFDE
 12706                           postdec2	equ	0xFDD
 12707                           preinc2	equ	0xFDC
 12708                           plusw2	equ	0xFDB
 12709                           fsr2h	equ	0xFDA
 12710                           fsr2l	equ	0xFD9
 12711                           status	equ	0xFD8

Data Sizes:
    Strings     54
    Constant    52
    Data        52
    BSS         275
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    112     153
    BANK1           256     13     219
    BANK2           256     46     126
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1337$buffer	PTR unsigned char  size(2) Largest target is 0

    S1337$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 46
		 -> STR_1(CODE[46]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buffer(BANK2[40]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), STR_5(CODE[4]), 

    UART_Write_String@buf	PTR unsigned char  size(2) Largest target is 40
		 -> main@buffer(BANK2[40]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 46
		 -> STR_1(CODE[46]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 46
		 -> STR_1(CODE[46]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 46
		 -> STR_1(CODE[46]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___fltol
    _WheelMPU6050_Read->_atanf
    _WheelKalmanFilter->___fldiv
    _ArmMPU6050_Read->_atanf
    _sqrtf->___fladd
    _atanf->___fldiv
    _ArmKalmanFilter->___fldiv
    ___fldiv->_sqrtf
    _WheelBalancePID->___flsub
    _UART_Write_String->_UART_Write
    _MPU6050_Init->_I2C_Start
    _I2C_Start->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _ArmMotor->___lwdiv
    _ArmBalancePID->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flge->___flmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _calibrate_wheel_gyro->_WheelMPU6050_Read
    _WheelMPU6050_Read->_atanf
    _WheelKalmanFilter->___fldiv
    _calibrate_arm_gyro->_ArmMPU6050_Read
    _ArmMPU6050_Read->_atanf
    _atanf->___fldiv
    _ArmKalmanFilter->___fldiv

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0  536646
                                              0 BANK2     46    46      0
                      _ArmBalancePID
                    _ArmMPU6050_Read
                           _ArmMotor
                         _BothWheels
                       _MPU6050_Init
                       _UART_TX_Init
                  _UART_Write_String
                    _WheelBalancePID
                  _WheelMPU6050_Read
                             ___flge
                            ___fltol
                                _abs
                 _calibrate_arm_gyro
               _calibrate_wheel_gyro
                      _initializeCLK
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    15     13   63182
                                             99 BANK0     13     0     13
                                              0 BANK1     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   62488
                                             93 BANK0      6     1      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     8      5   61816
                                             94 COMRAM     1     1      0
                                             82 BANK0     11     6      5
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   6     3      3     984
                                              6 COMRAM     6     3      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   51407
                                             29 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             90 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     787
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    6687
                                             25 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     3      6    4076
                                             16 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1470
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1064
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     363
                                             10 COMRAM     4     2      2
                            ___awmod (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initializeCLK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate_wheel_gyro                                 6     6      0  100876
                                             71 BANK0      2     2      0
                  _WheelMPU6050_Read
 ---------------------------------------------------------------------------------
 (2) _WheelMPU6050_Read                                   16    12      4  100802
                                             55 BANK0     16    12      4
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                  _WheelKalmanFilter
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                              _atanf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _WheelKalmanFilter                                   20     4     16   36000
                                             90 COMRAM     4     4      0
                                             13 BANK0     16     0     16
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (1) _calibrate_arm_gyro                                   6     6      0  100876
                                             71 BANK0      2     2      0
                    _ArmMPU6050_Read
 ---------------------------------------------------------------------------------
 (2) _ArmMPU6050_Read                                     16    12      4  100802
                                             55 BANK0     16    12      4
                    _ArmKalmanFilter
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                              _atanf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               41    37      4    1247
                                             41 COMRAM    37    33      4
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _atanf                                               47    43      4   38571
                                             90 COMRAM     5     1      4
                                             13 BANK0     42    42      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     161
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     465
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     791
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1196
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      65
                                              0 COMRAM     2     2      0
                            _I2C_ACK
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (4) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ArmKalmanFilter                                     20     4     16   36000
                                             90 COMRAM     4     4      0
                                             13 BANK0     16     0     16
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    5603
                                             78 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _sqrtf (ARG)
 ---------------------------------------------------------------------------------
 (1) _WheelBalancePID                                     12     8      4   32265
                                             49 COMRAM    12     8      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (1) _UART_Write_String                                    4     2      2     251
                                              1 COMRAM     4     2      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         2     2      0      93
                                              3 COMRAM     2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      62
                                              2 COMRAM     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     1     1      0      31
                                              1 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BothWheels                                           8     6      2     313
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ArmMotor                                            10     8      2     985
                                              7 COMRAM    10     8      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     601
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ArmBalancePID                                       12     8      4   32265
                                             49 COMRAM    12     8      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8   11691
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    8662
                                             25 COMRAM    16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    9297
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    2426
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ArmBalancePID
     ___fladd
       ___flmul (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
       ___fladd
       ___flmul (ARG)
   _ArmMPU6050_Read
     _ArmKalmanFilter
       ___fladd
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
         _sqrtf (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
       ___flmul
       ___flsub
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
     ___fladd
     ___fldiv
     ___flmul
     ___xxtofl
     _atanf
       ___fladd
       ___fldiv
       ___flmul
       ___flneg
       ___flsub
       ___fpclassifyf
       _fabsf
     _sqrtf
   _ArmMotor
     ___lwdiv
   _BothWheels
   _MPU6050_Init
     _I2C_Master_Init
     _I2C_Master_Stop
     _I2C_Master_Write
     _I2C_Start
   _UART_TX_Init
   _UART_Write_String
     _UART_Write
   _WheelBalancePID
     ___fladd
     ___flge
     ___flmul
     ___flsub
   _WheelMPU6050_Read
     _I2C_Master_Stop
     _I2C_Master_Write
     _I2C_Read
     _I2C_Start
     _WheelKalmanFilter
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
     ___fladd
     ___fldiv
     ___flmul
     ___xxtofl
     _atanf
     _sqrtf
   ___flge
   ___fltol
   _abs
     ___awmod (ARG)
     ___fltol (ARG)
   _calibrate_arm_gyro
     _ArmMPU6050_Read
   _calibrate_wheel_gyro
     _WheelMPU6050_Read
   _initializeCLK
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2E      7E       9       49.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      DB       7       85.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     70      99       5       95.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhh         2C      0       0      20        0.0%
BITBIGSFRll         2A      0       0      28        0.0%
BITBIGSFRhllhhh      C      0       0      22        0.0%
BITBIGSFRhllhll      B      0       0      25        0.0%
BITBIGSFRhlh         9      0       0      21        0.0%
BITBIGSFRhllhhl      7      0       0      23        0.0%
BITBIGSFRhlll        7      0       0      26        0.0%
BITBIGSFRlh          6      0       0      27        0.0%
BITBIGSFRhllhlh      1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     251      29        0.0%
DATA                 0      0     251       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat May 04 16:03:34 2024

                       ___fldiv@aexp 006C                         ___fldiv@bexp 006B  
                       ___fldiv@sign 0064                                   _BF 7E38  
                                 l92 38A0                                   _KD 01BE  
                                 _AX 0160            WheelBalancePID@InputAngle 0032  
                                 _AY 015C                                   l96 4C00  
                                 _AZ 0158                                   l98 4C0E  
                                 _KI 01C2                                   _KP 01C6  
                                 _GX 0154                                   _Ax 00F6  
                                 _Ay 00F4                                   _Az 00F2  
                                 _Gx 00F0                         ___awdiv@sign 0006  
                ___wmul@multiplicand 0003                                  l101 4C62  
                                l110 33F0                                  l201 522C  
                                l115 4DA2                                  l203 523A  
                                l116 4DA6                                  l204 523C  
                                l220 4F76                                  l221 4F7A  
                                l213 4F3A                                  l301 3CC4  
                                l215 4F48                                  l119 52AA  
                                l304 3116                                  l250 5252  
                                l218 4F68                                  l171 51DE  
                                l180 52A0                                  l244 5220  
                                l309 5184                                  l174 5202  
                                l247 5240                                  l168 5268  
                                l256 5044                                  l360 3ED2  
                                l192 5290                                  l186 52B2  
                                l195 526E                                  l363 2DB4  
                                l381 452E                                  l189 5282  
                                l198 527C                                  l615 49C4  
                                l368 51B6                                  l384 51DC  
                                l643 4B1E                                  l628 4A74  
                                l654 4738                                  l912 1BBA  
                                l649 46F2                                  l921 1E8A  
                                l913 1BA8                                  l681 4634  
                                l914 1B6E                                  l658 50B6  
                                l929 1CD4                                  l938 1DA4  
                                l954 4FC0                                  l882 4CD6  
                                l939 1D92                                  l875 4CCE  
                                l971 2852                                  l980 293A  
                                l966 2A2E                                  l968 288E  
                                l977 28D4                                  l979 294C  
                                l998 1F50                                  _PEN 7E2A  
                                _SEN 7E28                      _ArmMPU6050_Read 2A30  
                                _aT0 0831                                  _aT1 082D  
                                _aT2 0829                                  _aT3 0825  
                                _aT4 0821                                  _Max 01CA  
                    __end_of_I2C_ACK 5292                                  _abs 50EC  
                                _pad 4CD8                         ___awmod@sign 0006  
                      _armstateAngle 0124                                  wreg 0FE8  
                       ___flmul@aexp 000E                         ___flmul@bexp 0013  
                       ___flmul@sign 000D                         ___flmul@temp 0018  
                       ___flmul@prod 0014                         ___fltol@exp1 000A  
                               l1002 22B4                                 l1005 2146  
                               l1015 2276                                 l1007 21BE  
                               l1008 21AC                                 l1120 5152  
                               l1042 425E                                 l1114 4836  
                               ?_abs 000B                                 l1053 41F6  
                               l1046 419A                                 l1062 511E  
                               l1222 103E                                 l1039 4102  
                               l1127 4E4C                                 l1160 4D44  
                               l1330 249A                                 l1306 4900  
                               l1314 5004                                 l1234 4BBE  
                               l1091 1396                                 l1059 5106  
                               l1156 4CEE                                 l1164 4290  
                               l1085 19CA                                 l1317 52B4  
                               l1334 24F8                                 l1326 2692  
                               l1166 4298                                 l1238 4BC6  
                               l1246 3652                                 l1167 42DE  
                               l1192 0BF6                                 l1337 25BC  
                               l1178 43DC                                 l1274 3AB6  
                               l1194 0A3C                                 l1339 262A  
                               l1347 507E                                 l1268 4F34  
                               l1277 39FA                                 l1189 125A  
                               l1294 4E9C                                 l1288 4DFC  
                               l5101 1A82                                 l5111 1ABE  
                               l5103 1A92                                 l5201 1CC4  
                               l5121 1ADC                                 l5113 1ACC  
                               l5105 1A94                                 l5211 1D18  
                               l5203 1CEA                                 l5131 1AF0  
                               l5123 1AE0                                 l5115 1AD0  
                               l5107 1A9C                                 l5221 1D42  
                               l5213 1D26                                 l5205 1CFA  
                               l5141 1B04                                 l5133 1AF4  
                               l5125 1AE4                                 l5117 1AD4  
                               l5109 1AAC                                 l5301 26D2  
                               l5231 1D74                                 l5223 1D52  
                               l5215 1D28                                 l5151 1B56  
                               l5143 1B08                                 l5135 1AF8  
                               l5127 1AE8                                 l5119 1AD8  
                               l5071 19E6                                 l5311 2702  
                               l5303 26E2                                 l5241 1DCE  
                               l5233 1D8A                                 l5217 1D36  
                               l5209 1D0E                                 l5225 1D54  
                               l5161 1B9A                                 l5153 1B66  
                               l5137 1AFC                                 l5129 1AEC  
                               l5145 1B0C                                 l5081 1A1A  
                               l5073 19E8                                 l6121 52AC  
                               l5401 2976                                 l5321 2738  
                               l5313 2708                                 l5305 26E4  
                               l6201 25CC                                 l7001 08EA  
                               l5251 1E4A                                 l5243 1E08  
                               l5219 1D3E                                 l5227 1D62  
                               l5163 1B9C                                 l5155 1B7C  
                               l5147 1B10                                 l5139 1B00  
                               l5091 1A4C                                 l5075 19F8  
                               l5083 1A22                                 l5067 19CC  
                               l6123 52B0                                 l5411 29EE  
                               l5403 29A0                                 l5331 2778  
                               l5323 2748                                 l5315 2716  
                               l5307 26EC                                 l6131 4F64  
                               l6203 25D6                                 l7011 093A  
                               l7003 08F6                                 l5501 2084  
                               l5261 1E6A                                 l5253 1E4E  
                               l5237 1DB4                                 l5245 1E0A  
                               l5229 1D66                                 l5181 1C24  
                               l5173 1BEC                                 l5165 1BA6  
                               l5157 1B88                                 l5149 1B3A  
                               l5093 1A52                                 l5085 1A32  
                               l5077 1A08                                 l5069 19D8  
                               l6117 5294                                 l5421 2A24  
                               l5413 2A0A                                 l5405 29A4  
                               l5333 2788                                 l5341 27A8  
                               l5325 274A                                 l5317 2718  
                               l5309 26FC                                 l6125 4F38  
                               l6221 129A                                 l6213 125C  
                               l6205 25EC                                 l6141 3C18  
                               l6133 3AB8                                 l7101 0D68  
                               l7021 096A                                 l7013 093E  
                               l7005 08FE                                 ?_pad 0011  
                               l5511 212C                                 l5503 20A0  
                               l5431 1E98                                 l5263 1E78  
                               l5255 1E5C                                 l5247 1E1A  
                               l5239 1DC0                                 l5183 1C28  
                               l5175 1BFC                                 l5167 1BC8  
                               l5191 1C48                                 l5159 1B8C  
                               l5095 1A60                                 l5087 1A38  
                               l5079 1A18                                 l6119 5298  
                               l5415 2A0E                                 l5407 29BE  
                               l5351 27E6                                 l5343 27B8  
                               l5335 2790                                 l5319 2728  
                               l5327 2752                                 l6311 3E26  
                               l6303 3CC6                                 l6127 4F4C  
                               l6231 133E                                 l6223 12C0  
                               l6215 126C                                 l6207 2602  
                               l6151 22FA                                 l6143 3CA4  
                               l6135 3B10                                 l7111 0E26  
                               l7103 0D9C                                 l7031 09C6  
                               l7015 0944                                 l7007 0902  
                               l5521 2168                                 l5513 2136  
                               l5505 20CA                                 l5441 1ED8  
                               l5433 1EA6                                 l5265 1E7A  
                               l5257 1E62                                 l5249 1E2A  
                               l5193 1C6E                                 l5185 1C36  
                               l5177 1C0A                                 l5169 1BD8  
                               l5097 1A62                                 l5089 1A4A  
                               l5281 51DE                                 l5417 2A1C  
                               l5409 29D4                                 l5361 282E  
                               l5353 27F6                                 l5345 27B8  
                               l5337 2794                                 l5329 2762  
                               l6313 3EB2                                 l6305 3D1E  
                               l6129 4F5C                                 l6321 40CC  
                               l6241 139C                                 l6225 12D4  
                               l6217 1282                                 l6153 2328  
                               l6161 235A                                 l6145 3CB4  
                               l6137 3B44                                 l5601 49A4  
                               l7201 123A                                 l7121 0EC2  
                               l7113 0E3C                                 l7105 0DA2  
                               l7033 09CC                                 l7017 094C  
                               l7009 0928                                 l7025 098A  
                               l5531 21DA                                 l5523 2176  
                               l5515 2144                                 l5507 2100  
                               l5451 1F08                                 l5443 1EDE  
                               l5435 1EA8                                 l5259 1E64  
                               l5195 1CA2                                 l5187 1C38  
                               l5179 1C18                                 l5099 1A72  
                               l5283 51EC                                 l5419 2A22  
                               l5371 287C                                 l5363 2842  
                               l5355 2806                                 l5291 2694  
                               l6315 3EC2                                 l6307 3D52  
                               l6331 4144                                 l6323 4112  
                               l6251 1496                                 l6243 13C0  
                               l6227 1318                                 l6235 1366  
                               l6219 1284                                 l6171 23C8  
                               l6163 2378                                 l6155 2336  
                               l6147 22B6                                 l6139 3BC0  
                               l5603 49B4                                 l5611 49CA  
                               l7123 0F18                                 l7131 0F6A  
                               l7115 0E6E                                 l7107 0DC0  
                               l7051 0A52                                 l7035 09D4  
                               l7027 09B0                                 l7043 09EC  
                               l7019 0960                                 l7211 4B52  
                               l5541 2244                                 l5533 21E8  
                               l5525 21A4                                 l5517 2156  
                               l5509 210E                                 l5461 1F40  
                               l5453 1F0A                                 l5445 1EEE  
                               l5437 1EB8                                 l5429 1E8C  
                               l5197 1CA4                                 l5189 1C42  
                               l5381 28C4                                 l5373 288C  
                               l5365 2850                                 l5357 2816  
                               l5349 27CC                                 l5293 26A2  
                               l6309 3DCE                                 l6341 41CC  
                               l6333 4150                                 l6325 4128  
                               l6317 40AE                                 l6261 15D8  
                               l6253 149A                                 l6245 13D8  
                               l6237 137C                                 l6229 132A  
                               l6181 244E                                 l6165 23A6  
                               l6157 2346                                 l6149 22C6  
                               l6501 30A2                                 l5605 49BC  
                               l5621 49FA                                 l5613 49D8  
                               l5277 50EC                                 l5701 4586  
                               l7141 0F9C                                 l7133 0F7A  
                               l7125 0F1E                                 l7117 0E7E  
                               l7109 0DF4                                 l7061 0B48  
                               l7053 0A86                                 l7045 0A06  
                               l7029 09C2                                 l5285 51B8  
                               l7213 4B70                                 l7205 4B20  
                               l7221 3416                                 l7301 4DFE  
                               l5551 229A                                 l5543 225E  
                               l5535 2212                                 l5519 2164  
                               l5471 1F90                                 l5463 1F60  
                               l5455 1F1A                                 l5447 1EF4  
                               l5439 1EC8                                 l5199 1CB4  
                               l6511 5254                                 l5391 2904  
                               l5383 28D2                                 l5375 289E  
                               l5367 285C                                 l5359 281E  
                               l5295 26B0                                 l6351 420A  
                               l6343 41D8                                 l6335 4182  
                               l6319 40BE                                 l6271 16D0  
                               l6263 15DC                                 l6247 13EE  
                               l6255 151A                                 l6191 24E8  
                               l6183 2458                                 l6503 30E6  
                               l5631 4A40                                 l5623 4A0C  
                               l5615 49E0                                 l5279 50FA  
                               l5703 4596                                 l7151 106E  
                               l7143 1014                                 l7135 0F82  
                               l7127 0F52                                 l7119 0E8E  
                               l7071 0BFE                                 l7063 0B7C  
                               l7055 0AC4                                 l5287 51D4  
                               l7215 4B90                                 l7207 4B28  
                               l7231 3458                                 l7223 341E  
                               l7303 4E0C                                 l5545 227A  
                               l5553 22A0                                 l5529 21CE  
                               l5537 2216                                 l5481 1FE0  
                               l5473 1F9A                                 l5465 1F70  
                               l5457 1F2A                                 l5449 1EFA  
                               l5561 4F8C                                 l6521 4C64  
                               l6601 4C38                                 l6513 5264  
                               l5393 2932                                 l5377 28B4  
                               l5385 28E4                                 l5369 287A  
                               l5297 26B2                                 l6353 422E  
                               l6345 41E6                                 l6337 4184  
                               l6329 413C                                 l6281 17F8  
                               l6273 1728                                 l6257 1530  
                               l6249 13F2                                 l6265 1610  
                               l6193 2512                                 l6185 2464  
                               l6169 23BA                                 l6177 23E6  
                               l6441 2A70                                 l6505 30F6  
                               l5641 4A6C                                 l5633 4A48  
                               l5625 4A14                                 l5617 49E4  
                               l5609 49C6                                 l5713 45C0  
                               l5705 459A                                 l5801 3A6E  
                               l7161 1094                                 l7153 1072  
                               l7145 1034                                 l7137 0F88  
                               l7129 0F66                                 l7081 0C2E  
                               l7073 0C0E                                 l7065 0B84  
                               l7057 0AF6                                 l7049 0A4C  
                               l7209 4B4A                                 l7217 4B98  
                               l7241 34CE                                 l7233 3470  
                               l7225 342A                                 l7305 4E14  
                               l7321 3EE8                                 l7313 3ED4  
                               l5555 22A4                                 l5547 228A  
                               l5539 2230                                 l5491 2022  
                               l5483 1FEC                                 l5475 1FB0  
                               l5459 1F3A                                 l6531 4C9C  
                               l6523 4C6C                                 l6515 5266  
                               l6611 321A                                 l6603 3118  
                               l5387 28F2                                 l5379 28BA  
                               l5299 26C2                                 l6355 423E  
                               l6347 4204                                 l6339 4190  
                               l6291 1930                                 l6283 1850  
                               l6275 175C                                 l6267 1644  
                               l6259 1534                                 l6195 2532  
                               l6187 2472                                 l6179 243A  
                               l6451 2B2C                                 l6443 2A94  
                               l6435 2A30                                 l6507 3106  
                               l5571 491C                                 l5635 4A4E  
                               l5627 4A1C                                 l5619 49F2  
                               l5651 4AE2                                 l5731 4624  
                               l5723 45E8                                 l5715 45CA  
                               l5707 45A8                                 l5803 3A96  
                               l5811 4E62                                 l7171 10C8  
                               l7163 109A                                 l7155 1078  
                               l7147 1050                                 l7139 0F90  
                               l7083 0C40                                 l7091 0C80  
                               l7075 0C1A                                 l7059 0B34  
                               l7251 350C                                 l7243 34D8  
                               l7235 347C                                 l7227 342E  
                               l7219 33F2                                 l7307 4E1C  
                               l7331 3EF0                                 l7323 3EEA  
                               l7315 3EDC                                 l5661 4636  
                               l5549 2298                                 l5493 2032  
                               l5485 1FFA                                 l5477 1FBC  
                               l5469 1F84                                 l6541 4CC8  
                               l6533 4CA2                                 l6525 4C7E  
                               l5821 5224                                 l6701 4432  
                               l6517 5240                                 l6621 3300  
                               l6613 3230                                 l6605 3128  
                               l5397 295C                                 l5389 28F6  
                               l6357 424C                                 l6349 4206  
                               l5741 47C0                                 l6293 1964  
                               l6277 17B4                                 l6269 1678  
                               l6197 2546                                 l6189 24DA  
                               l6461 2CE8                                 l6453 2B78  
                               l6445 2AB8                                 l6437 2A46  
                               l5581 4942                                 l5573 4920  
                               l5565 4902                                 l5629 4A2A  
                               l5637 4A54                                 l5653 4AF2  
                               l5645 4A76                                 l5725 45F4  
                               l5717 45D4                                 l5805 3AA6  
                               l5813 4E6E                                 l7173 10CE  
                               l7157 1080                                 l7149 105E  
                               l7165 10A0                                 l7181 1166  
                               l7093 0C88                                 l7085 0C4E  
                               l7077 0C22                                 l7069 0BC4  
                               l7253 3512                                 l7261 3540  
                               l7237 3498                                 l7229 3450  
                               l7309 4E36                                 l7341 3F5A  
                               l7333 3EF0                                 l7325 3EEC  
                               l7317 3EE0                                 l5671 46C0  
                               l5663 4664                                 l5495 204C  
                               l5487 2006                                 l5479 1FD4  
                               l5559 4F7C                                 l6535 4CB8  
                               l6527 4C86                                 l5823 5228  
                               l6711 444E                                 l6703 4438  
                               l6519 524E                                 l6631 33C0  
                               l6623 3334                                 l6615 3262  
                               l6607 31B4                                 l5399 2968  
                               l6359 424E                                 l5743 47CC  
                               l5735 473A                                 l5831 5140  
                               l6295 19B4                                 l6287 1888  
                               l6279 17E8                                 l6199 2584  
                               l6463 2D40                                 l6455 2BC4  
                               l6447 2ADC                                 l6439 2A4C  
                               l5591 4978                                 l5583 4954  
                               l5575 492E                                 l5567 4906  
                               l5639 4A64                                 l5655 4B16  
                               l5647 4AA4                                 l5727 4604  
                               l5815 4E72                                 l7191 11E6  
                               l7183 1184                                 l7175 1126  
                               l7167 10B2                                 l7159 1090  
                               l7095 0C98                                 l7087 0C66  
                               l7079 0C2A                                 l7271 35CA  
                               l7263 3560                                 l7255 351A  
                               l7247 34F0                                 l7239 34B4  
                               l7351 3FE4                                 l7343 3F8C  
                               l7335 3EFA                                 l7327 3EEE  
                               l7319 3EE4                                 l5673 46D2  
                               l5665 4674                                 l5497 205C  
                               l5489 2016                                 l6561 3756  
                               l6553 3654                                 l6537 4CC0  
                               l6529 4C8E                                 l6641 4D52  
                               l6721 4468                                 l6713 4452  
                               l6705 443C                                 l6633 33D0  
                               l6625 3366                                 l6617 3274  
                               l6609 31E8                                 l5825 527E  
                               l5753 482E                                 l5737 475A  
                               l5833 5142                                 l6289 18E0  
                               l6465 2D84                                 l6457 2C10  
                               l6449 2AE0                                 l6801 5194  
                               l6481 2E1A                                 l6473 2DB6  
                               l5593 498E                                 l5585 495C  
                               l5577 4936                                 l5569 4914  
                               l5657 4B1C                                 l5649 4AB4  
                               l5729 4614                                 l5817 4E7E  
                               l5809 4E4E                                 l7193 11F4  
                               l7185 11A0                                 l7177 115A  
                               l7169 10C4                                 l7097 0CAC  
                               l7089 0C78                                 l7273 35D8  
                               l7265 358A                                 l7281 361E  
                               l7249 34FA                                 l7361 4098  
                               l7353 400C                                 l7345 3F9E  
                               l7337 3F0E                                 l7329 3EF0  
                               l5675 46E0                                 l5667 46A2  
                               l5499 2078                                 l6571 383C  
                               l6563 376C                                 l6555 3664  
                               l6539 4CC2                                 l6651 4D80  
                               l6643 4D68                                 l6731 4484  
                               l6723 446E                                 l6715 4458  
                               l6707 4442                                 l6635 33E0  
                               l6627 337C                                 l6619 32CC  
                               l5827 526A                                 l5683 5080  
                               l5739 4798                                 l5747 47D8  
                               l6467 2D94                                 l6459 2CC4  
                               l6803 519A                                 l6491 2EFE  
                               l6483 2E3E                                 l6475 2DCC  
                               l6811 515E                                 l5595 4996  
                               l5587 4964                                 l5579 493A  
                               l5691 4530                                 l5819 4E82  
                               l5771 504E                                 l7195 120C  
                               l7187 11A8                                 l7179 1162  
                               l7099 0D10                                 l7259 3522  
                               l7291 4EEC                                 l7355 403E  
                               l7347 3FAC                                 l7339 3F32  
                               l5677 4730                                 l5669 46B2  
                               l6573 3870                                 l6565 379E  
                               l6557 36F0                                 l6581 4BCA  
                               l6653 4D84                                 l6645 4D70  
                               l6741 44A0                                 l6733 448A  
                               l6725 4474                                 l6717 445E  
                               l6709 4448                                 l6661 5210  
                               l6629 33AE                                 l5685 5096  
                               l5749 47EA                                 l5829 5120  
                               l6469 2DA4                                 l6493 2F4A  
                               l6485 2E62                                 l6477 2DD2  
                               l6813 5162                                 l6805 5154  
                               l5597 4998                                 l5589 4972  
                               l5693 4546                                 l5781 38A2  
                               l5773 4DA8                                 l7197 121C  
                               l7189 11B6                                 l7269 35B4  
                               l7285 362C                                 l7293 4EF4  
                               l7357 4050                                 l7349 3FC0  
                               l5679 4736                                 l6575 3880  
                               l6567 37B0                                 l6559 3724  
                               l6591 4C02                                 l6583 4BCE  
                               l6647 4D72                                 l6639 4D48  
                               l6751 44BC                                 l6743 44A6  
                               l6735 4490                                 l6727 447A  
                               l6719 4464                                 l6671 521A  
                               l6663 5212                                 l6831 5012  
                               l5687 50A6                                 l6495 2F96  
                               l6487 2E66                                 l6479 2DF6  
                               l6815 5168                                 l6655 52A2  
                               l5599 499E                                 l6911 4866  
                               l5783 38C2                                 l5775 4DB6  
                               l7199 1232                                 l7279 3606  
                               l7295 4F0E                                 l7359 405E  
                               l6577 3890                                 l6569 3808  
                               l6593 4C10                                 l6585 4BD8  
                               l6649 4D74                                 l6761 44D6  
                               l6753 44C0                                 l6745 44AA  
                               l6737 4494                                 l6729 447E  
                               l6681 43FA                                 l6673 521C  
                               l6665 5214                                 l6657 5204  
                               l6833 5024                                 l6497 304A  
                               l6489 2EB2                                 l6913 4884  
                               l6905 4838                                 l6921 4FCE  
                               l5697 455A                                 l5793 39AE  
                               l5785 391A                                 l5777 4DCA  
                               l5769 5046                                 l7297 4F2A  
                               l6595 4C14                                 l6587 4BF4  
                               l6771 44F2                                 l6763 44DC  
                               l6755 44C6                                 l6747 44B0  
                               l6739 449A                                 l6691 4416  
                               l6683 4400                                 l6675 521E  
                               l6667 5216                                 l6659 5208  
                               l6835 5028                                 l6499 306E  
                               l6915 48BA                                 l6907 484A  
                               l6923 4FE0                                 l6931 4CFA  
                               l5699 4584                                 l5795 39EA  
                               l5787 392E                                 l6597 4C32  
                               l6589 4BF4                                 l6781 450E  
                               l6773 44F8                                 l6765 44E2  
                               l6757 44CC                                 l6749 44B6  
                               l6693 441C                                 l6685 4406  
                               l6677 43DE                                 l6669 5218  
                               l6829 5006                                 l6909 485C  
                               l6925 4FE4                                 l6933 4D0E  
                               l6941 4284                                 l5789 393C  
                               l5797 3A1E                                 l6599 4C36  
                               l6791 452A                                 l6783 4514  
                               l6775 44FE                                 l6767 44E8  
                               l6759 44D2                                 l6695 4422  
                               l6687 440C                                 l6679 43F6  
                               l6919 4FC2                                 l6935 4D12  
                               l6927 4CD8                                 l6951 42D2  
                               l6943 42A0                                 l5799 3A5A  
                               l6785 4518                                 l6777 4502  
                               l6769 44EC                                 l6697 4426  
                               l6689 4410                                 l6793 5186  
                               l6937 4D30                                 l6929 4CE6  
                               l6961 4328                                 l6953 42DA  
                               l6945 42B0                                 l6787 451E  
                               l6779 4508                                 l6699 442C  
                               l6971 437C                                 l6963 432E  
                               l6955 42E6                                 l6947 42B6  
                               l6939 4260                                 l6789 4524  
                               l6973 4396                                 l6965 4334  
                               l6957 42F0                                 l6949 42C6  
                               l6799 5190                                 l6975 43A6  
                               l6959 42F6                                 l6967 4350  
                               l6991 0894                                 l6983 086C  
                               l6977 43AC                                 l6969 436A  
                               l6993 08B8                                 l6985 0872  
                               l6979 43BC                                 l6995 08C2  
                               l6987 0882                                 l6997 08CA  
                               l6989 0890                                 l6999 08DA  
                               STR_1 0835                                 STR_2 0863  
                               STR_5 0867                                 u5100 1A4A  
                               u5101 1A46                                 u5110 1A60  
                               u5111 1A5C                                 u5200 1B9A  
                               u5120 1A72                                 u6000 4A0C  
                               u5201 1B96                                 u5121 1A6E  
                               u6001 4A08                                 u5210 1BBA  
                               u5130 1A82                                 u6010 4A2A  
                               u5211 1BB6                                 u5131 1A7E  
                               u6011 4A26                                 u6100 46E0  
                               u5300 1CFA                                 u5220 1BC8  
                               u5140 1ABE                                 u6020 4A40  
                               u6101 46DC                                 u5301 1CF6  
                               u5221 1BC4                                 u5141 1ABA  
                               u6021 4A3C                                 u6110 4730  
                               u5310 1D26                                 u5230 1BD8  
                               u5150 1ACC                                 u5070 19E6  
                               u6030 4A64                                 u6111 472C  
                               u5311 1D22                                 u5231 1BD4  
                               u5151 1AC8                                 u5071 19E2  
                               u6031 4A60                                 u5400 1E08  
                               u5320 1D36                                 u5240 1C0A  
                               u5160 1B3A                                 u5080 19F8  
                               u6120 5096                                 u6200 477A  
                               u7000 24E8                                 u6040 4AA4  
                               u5401 1E04                                 u5321 1D32  
                               u5241 1C06                                 u5161 1B36  
                               u5081 19F4                                 u6121 5092  
                               u7001 24E4                                 u6041 4AA0  
                               u5410 1E1A                                 u5330 1D52  
                               u5250 1C18                                 u5170 1B52  
                               u5090 1A08                                 u6210 4798  
                               u7010 2584                                 u6050 4AE2  
                               u6130 4546                                 u5411 1E16  
                               u5331 1D4E                                 u5251 1C14  
                               u5171 1B4C                                 u5091 1A04  
                               u6211 4794                                 u7011 2580  
                               u6051 4ADE                                 u6131 4542  
                               u5420 1E2A                                 u5340 1D62  
                               u5260 1C36                                 u5180 1B54  
                               u5500 26B0                                 u6220 47C0  
                               u7100 137C                                 u7020 25EC  
                               u6060 4B16                                 u6140 457A  
                               u6300 4DB6                                 u5421 1E26  
                               u5341 1D5E                                 u5261 1C32  
                               u5501 26AC                                 u6221 47BC  
                               u6205 4770                                 u7101 1378  
                               u7021 25E8                                 u6061 4B12  
                               u6301 4DB2                                 u6070 4664  
                               u5430 1E4A                                 u5350 1D74  
                               u5270 1C6E                                 u5190 1B7C  
                               u5510 26C2                                 u6230 47EA  
                               u7110 1392                                 u7030 2602  
                               u6150 45A8                                 u6310 38EC  
                               u6071 4660                                 u5431 1E46  
                               u5351 1D70                                 u5271 1C6A  
                               u5191 1B78                                 u5511 26BE  
                               u6231 47E6                                 u7111 138E  
                               u7031 25FE                                 u6151 45A4  
                               u6080 46A2                                 u5440 1E5C  
                               u5360 1D8A                                 u5280 1CB4  
                               u5600 287A                                 u5520 26D2  
                               u7200 417E                                 u7120 13D8  
                               u6160 45BC                                 u6400 3A96  
                               u6320 391A                                 u8000 1208  
                               u6081 469E                                 u5441 1E58  
                               u5361 1D86                                 u5281 1CB0  
                               u5601 2876                                 u5521 26CE  
                               u7201 417A                                 u7121 13D4  
                               u6161 45B8                                 u6145 4570  
                               u6401 3A92                                 u6321 3916  
                               u6090 46C0                                 u5450 1E78  
                               u5370 1DA0                                 u5290 1CEA  
                               u5610 289E                                 u5530 2716  
                               u7210 41C8                                 u6250 4824  
                               u7130 13EE                                 u7050 127E  
                               u6170 45E4                                 u6330 393C  
                               u6410 4E9C                                 u8010 121C  
                               u6091 46BC                                 u5451 1E74  
                               u5371 1D9C                                 u5291 1CE6  
                               u5611 289A                                 u5531 2712  
                               u7211 41C4                                 u6251 481E  
                               u7131 13EA                                 u7051 1278  
                               u6171 45E0                                 u6331 3938  
                               u6315 38E2                                 u6411 4E98  
                               u8011 1218                                 u5380 1DB4  
                               u6420 523A                                 u5700 29BE  
                               u5620 28B4                                 u5540 2728  
                               u7220 41E6                                 u6260 4826  
                               u7140 1530                                 u7060 1280  
                               u6180 4604                                 u8020 4B4A  
                               u8100 3F8C                                 _RCEN 7E2B  
                               u5381 1DB0                                 u6421 5236  
                               u5701 29BA                                 u5621 28B0  
                               u5541 2724                                 u7221 41E2  
                               u6245 47FC                                 u7141 152C  
                               u7045 266E                                 u6181 4600  
                               u8021 4B46                                 u8101 3F88  
                               u5390 1DCE                                 u5710 29EE  
                               u5630 28D2                                 u5550 2738  
                               u6430 5290                                 u7230 41F6  
                               u7150 17F8                                 u7070 129A  
                               u5470 50FA                                 u6190 4614  
                               u6350 39AA                                 u8030 4BBE  
                               u8110 403E                                 u5391 1DCA  
                               u5711 29EA                                 u5631 28CE  
                               u5551 2734                                 u6431 528C  
                               u7231 41F2                                 u7151 17F4  
                               u7071 1296                                 u5471 50F6  
                               u6191 4610                                 u6351 39A6  
                               u8031 4BBA                                 u8111 403A  
                               u5800 1F70                                 u7400 4C32  
                               u5480 51EC                                 u7320 524E  
                               u5720 2A1C                                 u5640 28F2  
                               u5560 2778                                 u6440 527C  
                               u7240 4204                                 u7160 19C6  
                               u7080 12C0                                 u6360 39CE  
                               u8040 3416                                 u5801 1F6C  
                               u7401 4C2E                                 u5481 51E8  
                               u7321 524A                                 u5721 2A18  
                               u5641 28EE                                 u5561 2774  
                               u6441 5278                                 u7241 4200  
                               u7161 19C2                                 u7081 12BC  
                               u6345 3950                                 u8041 3412  
                               u5810 20EA                                 u5730 1EA6  
                               u7330 4C7E                                 u7410 4C62  
                               u5490 5202                                 u5650 2904  
                               u5570 27B8                                 u7250 423E  
                               u7170 40BE                                 u7090 132A  
                               u6370 39EA                                 u6346 395A  
                               u6290 507E                                 u8050 3450  
                               u5731 1EA2                                 u7331 4C7A  
                               u7411 4C5E                                 u5491 51FE  
                               u5651 2900                                 u5571 27B4  
                               u7251 423A                                 u7171 40BA  
                               u7091 1326                                 u6371 39E6  
                               u6347 396A                                 u6291 507A  
                               u8051 344C                                 u5900 225E  
                               u5820 2144                                 u5740 1EB8  
                               u7340 4C9C                                 u7500 5044  
                               u7420 321A                                 u5660 2932  
                               u5580 282E                                 u7260 424C  
                               u7180 40CC                                 u6380 3A3E  
                               u8060 3498                                 u5901 225A  
                               u5821 2140                                 u5741 1EB4  
                               u7341 4C98                                 u7501 5040  
                               u7421 3216                                 u5661 292E  
                               u5581 282A                                 u7261 4248  
                               u7181 40C8                                 u6365 39C4  
                               u8061 3494                                 u5910 2298  
                               u5830 2164                                 u5750 1EC8  
                               u7350 4CB8                                 u7430 3262  
                               u5670 2948                                 u5590 2850  
                               u7190 4128                                 u6390 3A5A  
                               u8070 34B4                                 u5911 2294  
                               u5831 2160                                 u5815 20E0  
                               u5751 1EC4                                 u7351 4CB4  
                               u8127 43E8                                 u7431 325E  
                               u5671 2944                                 u5591 284C  
                               u7191 4124                                 u6391 3A56  
                               u8071 34B0                                 u5840 2176  
                               u5760 1F08                                 u7440 3366  
                               u5680 295C                                 u5920 4914  
                               u7600 4D30                                 u8080 355C  
                               u5841 2172                                 u5761 1F04  
                               u7441 3362                                 u5681 2958  
                               u5921 4910                                 u7601 4D2C  
                               u6385 3A34                                 u8081 3558  
                               u5850 21A4                                 u5770 1F1A  
                               u7370 3756                                 u7450 33AE  
                               u5690 2976                                 u5930 492E  
                               u7610 4270                                 u8090 4F2A  
                               u5851 21A0                                 u5771 1F16  
                               u7371 3752                                 u7451 33AA  
                               u5691 2972                                 u5931 492A  
                               u7611 426A                                 u8091 4F26  
                               u5860 21BA                                 u5780 1F2A  
                               u7380 379E                                 u6900 4F76  
                               u5940 4954                                 u7540 484A  
                               u7620 4272                                 u7700 0890  
                               u5861 21B6                                 u5781 1F26  
                               u7381 379A                                 u6901 4F72  
                               u5941 4950                                 u7541 4846  
                               u7701 088C                                 u5870 21CE  
                               u5790 1F60                                 u7470 4DA2  
                               u6910 22FA                                 u5950 4972  
                               u7550 485C                                 u7630 4284  
                               u7710 08DA                                 u5871 21CA  
                               u5791 1F5C                                 u7471 4D9E  
                               u6911 22F6                                 u5951 496E  
                               u7551 4858                                 u7631 4280  
                               u7711 08D6                                 u5880 21E8  
                               u6920 2328                                 u7480 51B6  
                               u5960 498E                                 u7560 4884  
                               u7640 42B0                                 u7800 0B34  
                               u7720 08EA                                 u5881 21E4  
                               u7465 4D50                                 u6921 2324  
                               u7481 51B2                                 u5961 498A  
                               u7561 4880                                 u7641 42AC  
                               u7801 0B30                                 u7721 08E6  
                               u5890 2230                                 u7466 4D52  
                               u6930 2336                                 u7490 5184  
                               u5970 49B4                                 u7570 48BA  
                               u7650 42C6                                 u7810 0BC0  
                               u7730 0928                                 u5891 222C  
                               u7395 4BD6                                 u6931 2332  
                               u7491 5180                                 u5971 49B0  
                               u7571 48B6                                 u7651 42C2  
                               u7811 0BBC                                 u7731 0924  
                               u7396 4BD8                                 u6940 2378  
                               u5980 49D8                                 u7580 5004  
                               u7660 436A                                 u7900 0E7E  
                               u7820 0BF6                                 u7740 093A  
                               u6941 2374                                 u5981 49D4  
                               u7581 5000                                 u7661 4366  
                               u7901 0E7A                                 u7821 0BF2  
                               u7741 0936                                 u6950 23A6  
                               u5990 49F2                                 u7590 4CE6  
                               u7670 437C                                 u7910 0F18  
                               u7830 0C0E                                 u7750 09B0  
                               u6951 23A2                                 u5991 49EE  
                               u7591 4CE2                                 u7671 4378  
                               u7911 0F14                                 u7831 0C0A  
                               u7751 09AC                                 u6880 4F48  
                               u6960 23C8                                 u7680 4396  
                               u7920 0F66                                 u7840 0C40  
                               u7760 09C2                                 u6881 4F44  
                               u6961 23C4                                 u7681 4392  
                               u7921 0F62                                 u7841 0C3C  
                               u7761 09BE                                 u6890 4F5C  
                               u7690 43A6                                 u7930 1014  
                               u7850 0C4E                                 u7770 0A38  
                               u6891 4F58                                 u7691 43A2  
                               u7931 1010                                 u7851 0C4A  
                               u7771 0A34                                 u6980 243A  
                               u7940 1050                                 u7860 0C78  
                               u7780 0AC4                                 u6981 2436  
                               u7941 104C                                 u7861 0C74  
                               u7781 0AC0                                 u6990 2472  
                               u7950 105E                                 u7870 0DC0  
                               u7790 0AF6                                 u6991 246E  
                               u6975 23FA                                 u7951 105A  
                               u7871 0DBC                                 u7791 0AF2  
                               u6976 2404                                 u7960 10B2  
                               u7880 0E26                                 u6977 2414  
                               u7961 10AE                                 u7881 0E22  
                               u7970 1184                                 u7890 0E6E  
                               u7971 1180                                 u7891 0E6A  
                               u7980 11A0                                 u7981 119C  
                               u7990 1206                                 u7991 1200  
                               _RSEN 7E29                                 _TRMT 7D61  
                   __end_of_I2C_NACK 527E                                 abs@a 000B  
                               _dbuf 0200                                 _labs 4DA8  
                               _armt 0134                                 _main 3ED4  
                               _dtoa 4260                                 _prec 00E6  
                   __end_of_I2C_Read 4F7C                                 pad@i 0018  
                               pad@p 0015                                 fsr1h 0FE2  
                               fsr2h 0FDA                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                        main@wheel_u 027C                           _AngleError 00E0  
                      ___fpclassifyf 473A                                 prodh 0FF4  
                               prodl 0FF3                                 start 0000  
                    ___fldiv@new_exp 0065                         ___param_bank 0000  
                              ??_abs 000D                                ??_pad 0017  
                   ?_I2C_Master_Init 0001                     ?_I2C_Master_Wait 0001  
                   ?_I2C_Master_Stop 0001                        ___fltol@sign1 0009  
                              ?_labs 0001                      __end_of___fladd 1E8C  
                              ?_main 0001                                ?_dtoa 001A  
                              _ACKEN 7E2C                                _ACKDT 7E2D  
                    __end_of___fldiv 2A30                      __end_of___awdiv 49C6  
                    __end_of___flneg 50B8                      __end_of___awmod 4A76  
                    __end_of___flmul 22B6                      __end_of___flsub 4FC2  
                    __end_of___fltol 4636                      ___awdiv@divisor 0003  
                    __end_of___lwdiv 4CD8                      ___awdiv@counter 0005  
                              _PID_U 0180                         vfpfcnvrt@fmt 00B4  
                         _BothWheels 4D46                                _SPBRG 0FAF  
                              _SSPIF 7CF3                                _TXREG 0FAD  
                              _Dterm 0184                                _Iterm 00D8  
                        ?_UART_Write 0001                           _KalmanGain 0144  
                              _Pterm 0188                                _armKD 01AE  
                              _armAX 0140                                _armAY 013C  
                              _armAZ 0138                                _armKI 01B2  
                              _armKP 01B6                                _armGX 0130  
                              _armGY 012C                                _armGZ 0128  
                              _fabsf 5120                                _armAx 00EE  
                              _armAy 00EC                                _armAz 00EA  
                              _armGy 00E8                                _atanf 125C  
                 _ArmBalancePID$1810 003A                   _ArmBalancePID$1809 0036  
                              _flags 00F8                        ?_MPU6050_Init 0001  
                   ?_ArmKalmanFilter 006D                  read_prec_or_width@c 000A  
                              _errno 0198                  read_prec_or_width@n 000B  
                              _fputc 4838                                _fputs 4FC2  
                              labs@a 0001                                pad@fp 0011  
                              _width 00E4                                _putch 52B4  
                              main@h 0278                                dtoa@d 001C  
                              dtoa@i 0025                                dtoa@p 0022  
                              _sqrtf 22B6                                dtoa@s 0024  
                              dtoa@w 0020                    __end_of_I2C_Start 52A2  
                              tablat 0FF5                                status 0FD8  
                    __end_of_sprintf 4E4E                       ?___fpclassifyf 0001  
                   __end_of_ArmMotor 4C64                      __initialization 4E9E  
 WheelKalmanFilter@KalmanUncertainty 0071                         __end_of_labs 4DFE  
                       __end_of_main 40AC                         __end_of_dtoa 43DE  
            __end_of_ArmMPU6050_Read 2DB6                   _calibrate_arm_gyro 5186  
                          ??_I2C_ACK 0001                       _PrevAngleError 00DC  
                             ??_labs 0005                               ??_main 0060  
                             ??_dtoa 001E                        __activetblptr 0002  
                ?_calibrate_arm_gyro 0001           __end_of_read_prec_or_width 4BC8  
                  ?_I2C_Master_Write 0001                       ??_MPU6050_Init 0004  
                             ?_fabsf 0001                               ?_atanf 005B  
                 ??_I2C_Master_Write 0002                               ?_fputc 0001  
                             ?_fputs 000A                     ___awdiv@dividend 0001  
                             ?_putch 0001                               ?_sqrtf 002A  
                             _SPBRGH 0FB0                               _SSPADD 0FC8  
                             _TRISB0 7C98                               _TRISB1 7C99  
                             _SSPBUF 0FC9                     __end_of___xxtofl 4260  
               ??_calibrate_arm_gyro 0060                          _KalmanAngle 0148  
             _WheelMPU6050_Read$1814 009F               _WheelMPU6050_Read$1815 00A3  
                       vfprintf@cfmt 00C2                               ___flge 4636  
                             ___fleq 4A76                     I2C_Read@ACK_NACK 0001  
                          ??___fladd 0022                               ___wmul 51B8  
                          ??___fldiv 0057                            ??___awdiv 0005  
                          ??___flneg 0005                            ??___awmod 0005  
                          ??___flmul 0009                            ??___flsub 0032  
                          ??___fltol 0005                               _armMax 01BA  
                             _efgtoa 086C                               _atanhi 0811  
                          ??___lwdiv 0005                               _atanlo 0801  
                             _floorf 38A2                               fabsf@u 0005  
                             fabsf@x 0001                               _memcpy 4E4E  
               read_prec_or_width@ap 0008                               clear_0 4EC4  
                             clear_1 4ED0                               clear_2 4EDC  
                   ___awdiv@quotient 0007                      ___awmod@divisor 0003  
                             atanf@w 008A                               atanf@x 005B  
                             atanf@z 008F                               isa$std 0001  
                    ___awmod@counter 0005                               pad@buf 0013  
               _WheelBalancePID$1811 0036                 _WheelBalancePID$1812 003A  
                             dtoa@fp 001A                               _strcpy 5046  
                          ?_I2C_NACK 0001                               fputc@c 0001  
                        ?_BothWheels 0001                               fputs@c 000E  
                             fputs@i 000F                               fputs@s 000A  
                          ?_I2C_Read 0001                      ___fpclassifyf@e 0009  
                    ___fpclassifyf@u 000B                      ___fpclassifyf@x 0001  
                  ArmMotor@direction 000B                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                               putch@c 0001  
                   __end_of_vfprintf 4F36                               sqrtf@i 0037  
                             sqrtf@m 0043                               sqrtf@q 003B  
                             sqrtf@r 0047                               sqrtf@s 0033  
                             sqrtf@t 003F                               sqrtf@x 002A  
                          ??_sprintf 0060                    _CurrentWheelAngle 0194  
                         ___flge@ff1 001A                           ___flge@ff2 001E  
                    ??___fpclassifyf 0005                         ___xxtofl@arg 000B  
                       ___xxtofl@exp 000A                         ___xxtofl@val 0001  
                         ___fleq@ff1 0001                           ___fleq@ff2 0005  
                         __accesstop 0060              __end_of__initialization 4EE2  
                  ArmMotor@frequency 000C                           ___flneg@f1 0001  
       WheelKalmanFilter@KalmanInput 0075         WheelKalmanFilter@KalmanState 006D  
                      ___rparam_used 0001                           ___fltol@f1 0001  
                     _armKalmanAngle 0120                       __pcstackCOMRAM 0001  
                       __pidataBANK1 50B8                        __end_of_fabsf 5154  
                      __end_of_atanf 19CC                     ?_ArmMPU6050_Read 0097  
                      __end_of_fputc 4902                        __end_of_fputs 5006  
                      __end_of_putch 52B6                        __end_of_sqrtf 2694  
                         ??_I2C_NACK 0001                           ??_I2C_Read 0001  
                          ?_ArmMotor 0008                              ??_fabsf 0005  
                            ??_atanf 005F                              ??_fputc 0005  
                            ??_fputs 000E                         _DesiredAngle 0190  
                            ??_putch 0001                              ??_sqrtf 002E  
                         __pbssBANK0 00D0                           __pbssBANK1 0100  
                         __pbssBANK2 0200                 _ArmKalmanFilter$1816 005B  
                         _atanf$1820 006D                           _atanf$1821 0085  
                         _atanf$1822 0071                           _atanf$1823 0075  
                         _atanf$1819 0081                         I2C_Read@Data 0002  
                      _initializeCLK 52A2                              ?___flge 001A  
                            ?___fleq 0001                 __end_of_MPU6050_Init 4530  
                            ?___wmul 0001                              ?_efgtoa 007D  
                            _I2C_ACK 527E                              ?_floorf 005B  
                            ?_memcpy 0001                              _ACKSTAT 7E2E  
                            ?_strcpy 0001                    ??_WheelBalancePID 0036  
                          ?___xxtofl 0001                         ??_UART_Write 0001  
                       _armPrevIterm 0170                           ??_ArmMotor 000A  
                            _SSPCON1 0FC6                              _SSPCON2 0FC5  
                            _SSPSTAT 0FC7                        ?_UART_TX_Init 0001  
                      _ArmBalancePID 3654              ArmBalancePID@InputAngle 0032  
                       I2C_Start@add 0003                            _I2C_Start 5292  
                      ArmMotor@steps 0008                       ?_initializeCLK 0001  
                            __Hparam 0000                              __Lparam 0000  
                            ___fladd 19CC                              ___fldiv 2694  
                            ___awdiv 4902                              ___flneg 5080  
                            ___awmod 49C6                              ___flmul 1E8C  
                            ___flsub 4F7C                              ___fltol 4530  
                 __end_of_UART_Write 5254                              ___lwdiv 4C64  
                          ?_vfprintf 00BD                         __psmallconst 0800  
          _armKalmanUncertaintyAngle 019A                         _KalmanOutput 0108  
                            __pcinit 4E9E                              __ramtop 0800  
                            __ptext0 3ED4                              __ptext1 4DFE  
                            __ptext2 4EEC                              __ptext3 33F2  
                            __ptext4 4B20                              __ptext5 51B8  
                            __ptext6 086C                              __ptext7 5046  
                            __ptext8 4E4E                              __ptext9 4DA8  
                    _armDesiredAngle 0178                read_prec_or_width@fmt 0007  
                       _armdegreeVar 019E                           ??___xxtofl 0005  
                   ___awmod@dividend 0001                              atanf@s1 0079  
                            atanf@s2 007D                              atanf@id 008E  
                            atanf@ix 0093                              efgtoa@c 0083  
                            efgtoa@d 0091                              efgtoa@e 0095  
                            efgtoa@f 007F                              efgtoa@g 00A8  
                            efgtoa@h 009F                              efgtoa@i 009D  
                            efgtoa@l 00A3                              efgtoa@m 0093  
                            efgtoa@n 00AC                              efgtoa@p 0088  
                            efgtoa@t 008A                              efgtoa@u 00AE  
                            efgtoa@w 0097                       ??_UART_TX_Init 0001  
                            _sprintf 4DFE                       ?_ArmBalancePID 0032  
               end_of_initialization 4EE2                              floorf@e 0077  
                            floorf@m 0073                              floorf@u 0079  
                            floorf@x 005B                              memcpy@d 0008  
                            memcpy@n 0005                              memcpy@s 000A  
                            fputc@fp 0003                        __Lmediumconst 0000  
                            fputs@fp 000C                   _read_prec_or_width 4B20  
                         ?_I2C_Start 0001                            ArmMotor@i 0010  
                          ArmMotor@k 000E                    __end_of_vfpfcnvrt 3654  
                         efgtoa@mode 008F                           efgtoa@sign 00A7  
                          _RCSTAbits 0FAB                              postdec1 0FE5  
                            postdec2 0FDD                  ?_read_prec_or_width 0007  
                            postinc0 0FEE                              postinc1 0FE6  
                            postinc2 0FDE                     vfpfcnvrt@convarg 00B7  
                         ??_vfprintf 0060                              sqrtf@ix 004B  
                            strcpy@d 0005                       UART_Write@data 0001  
                       ??_BothWheels 0003                          ___fladd@grs 0029  
                      ___xxtofl@sign 0009                            _TRISBbits 0F93  
                          _TRISCbits 0F94                           _stateAngle 0150  
                          _TRISDbits 0F95                 ??_read_prec_or_width 000A  
                        ___fldiv@grs 0067                          ___fldiv@rem 0060  
                        ___flmul@grs 000F                           main@buffer 0250  
                    ??_initializeCLK 0001                      _CurrentArmAngle 017C  
                          _TXSTAbits 0FAC                      _armKalmanOutput 0100  
       __end_of_calibrate_wheel_gyro 5186                   __end_of_BothWheels 4DA8  
                     __end_of___flge 473A                       __end_of___fleq 4B20  
                        vfpfcnvrt@ap 00B5                          vfpfcnvrt@cp 00BC  
                        vfpfcnvrt@fp 00B2                       __end_of___wmul 51DE  
                        _BAUDCONbits 0FB8                       __end_of_efgtoa 125C  
                     __end_of_atanhi 0821                       __end_of_atanlo 0811  
                     __end_of_floorf 3AB8                       __end_of_memcpy 4E9E  
                         floorf@F521 0110        ArmKalmanFilter@armKalmanInput 0075  
      ArmKalmanFilter@armKalmanState 006D                       __end_of_strcpy 5080  
                start_initialization 4E9E                          __end_of_aT0 0835  
                        __end_of_aT1 0831                          __end_of_aT2 082D  
                        __end_of_aT3 0829                          __end_of_aT4 0825  
                    ??_ArmBalancePID 0036                          __end_of_abs 5120  
                        __end_of_pad 4D46                         _MPU6050_Init 43DE  
                  ??_I2C_Master_Init 0001                    ??_I2C_Master_Wait 0001  
                  ??_I2C_Master_Stop 0002                        _armAngleError 00D4  
              __end_of___fpclassifyf 4838                          ??_I2C_Start 0003  
                        vfprintf@fmt 00BF                      _WheelBalancePID 3118  
                          _PrevIterm 018C                             ??___flge 0022  
                           ??___fleq 0009                             ??___wmul 0005  
                           ??_efgtoa 0084                 __end_of_UART_TX_Init 5222  
                  ??_ArmKalmanFilter 005B                          __pdataBANK1 019A  
                           ?_I2C_ACK 0001                             ??_floorf 006D  
                           ??_memcpy 0007                    _armPrevAngleError 0174  
                           ??_strcpy 0004                            ___fladd@a 001E  
                          ___fladd@b 001A                            ___fldiv@a 0053  
                          ___fldiv@b 004F                            ___flmul@a 0005  
                          ___flmul@b 0001                        _armKalmanGain 011C  
                          ___flsub@a 002E                            ___flsub@b 002A  
                      __pcstackBANK0 0060                        __pcstackBANK1 01CE  
                      __pcstackBANK2 0250                     _I2C_Master_Write 5222  
                          _degreeVar 01AA                          _efgtoa$1470 008C  
                   ___lwdiv@dividend 0001                            _dtoa$1439 001E  
                          _armOffset 01A2               _KalmanUncertaintyAngle 01A6  
                           ?___fladd 001A                             ?___fldiv 004F  
                           ?___awdiv 0001                             ?___flneg 0001  
                           ?___awmod 0001                             ?___flmul 0001  
                           ?___flsub 002A                             ?___fltol 0001  
                           ?___lwdiv 0001                 I2C_Master_Write@data 0002  
                           _I2C_NACK 526A                            fabsf@F465 0114  
                        __smallconst 0800                             _I2C_Read 4F36  
               _calibrate_wheel_gyro 5154                     ___lwdiv@quotient 0006  
                           ?_sprintf 00C3              __end_of_WheelBalancePID 33F2  
                     ___wmul@product 0005                             _LATBbits 0F8A  
                           _LATCbits 0F8B                             _LATDbits 0F8C  
                           _IPR1bits 0F9F                             _PIE1bits 0F9D  
                          atanf@sign 0089                 _ArmMPU6050_Read$1817 009F  
               _ArmMPU6050_Read$1818 00A3                    _WheelKalmanFilter 3AB8  
                          _vfpfcnvrt 33F2                 UART_Write_String@buf 0002  
                 ?_WheelKalmanFilter 006D                    ___wmul@multiplier 0001  
                          main@arm_u 027A                ?_calibrate_wheel_gyro 0001  
                           _ArmMotor 4BC8                  ??_WheelKalmanFilter 005B  
ArmKalmanFilter@armKalmanMeasurement 0079                           vfpfcnvrt@c 00BB  
                          copy_data0 4EB2               _WheelKalmanFilter$1813 005B  
                  ??_ArmMPU6050_Read 009B                             __Hrparam 0000  
                          memcpy@tmp 0007                           vfprintf@ap 00C0  
                           __Lrparam 0000                           vfprintf@fp 00BD  
          __end_of_WheelKalmanFilter 3CC6                           ?_vfpfcnvrt 00B2  
                 ___fpclassifyf@F465 0118                    _UART_Write_String 5006  
                         sprintf@fmt 00C5                             _armPID_U 0164  
                    _I2C_Master_Init 5254                             ___xxtofl 40AC  
                    _I2C_Master_Wait 51DE                      _I2C_Master_Stop 52AC  
                 ?_UART_Write_String 0002                             _armDterm 0168  
                    ___lwdiv@divisor 0003                             _armIterm 00D0  
                    ___lwdiv@counter 0005                             _armPterm 016C  
                           __ptext10 38A2                             __ptext11 4530  
                           __ptext20 4902                             __ptext12 4A76  
                           __ptext21 52A2                             __ptext13 4260  
                           __ptext30 473A                             __ptext22 5154  
                           __ptext14 4CD8                             __ptext31 5080  
                           __ptext23 2DB6                             __ptext15 4FC2  
                           __ptext40 523E                             __ptext32 40AC  
                           __ptext24 3AB8                             __ptext16 4838  
                           __ptext41 5204                             __ptext33 4F36  
                           __ptext25 5186                             __ptext17 52B4  
                           __ptext50 4C64                             __ptext42 43DE  
                           __ptext34 526A                             __ptext26 2A30  
                           __ptext18 50EC                             __ptext51 3654  
                           __ptext43 5292                             __ptext35 527E  
                           __ptext27 22B6                             __ptext19 49C6  
                           __ptext52 4F7C                             __ptext44 5222  
                           __ptext36 3CC6                             __ptext28 125C  
                           __ptext53 19CC                             __ptext45 52AC  
                           __ptext37 2694                             __ptext29 5120  
                           __ptext54 1E8C                             __ptext46 51DE  
                           __ptext38 3118                             __ptext55 4636  
                           __ptext47 5254                             __ptext39 5006  
                           __ptext48 4D46                             __ptext49 4BC8  
                       _UART_TX_Init 5204                           strcpy@dest 0001  
                ??_UART_Write_String 0004           __end_of_calibrate_arm_gyro 51B8  
                   ?_WheelBalancePID 0032                      _ArmKalmanFilter 3CC6  
                calibrate_arm_gyro@i 00A7                __end_of_initializeCLK 52AC  
                           efgtoa@fp 007D                             efgtoa@ne 0086  
                           efgtoa@pp 008E                             efgtoa@ou 0099  
                           isa$xinst 0000                  BothWheels@direction 0008  
                           _vfprintf 4EEC            __end_of_UART_Write_String 5046  
           __end_of_I2C_Master_Write 523E                  BothWheels@frequency 0004  
             ??_calibrate_wheel_gyro 0060                             memcpy@d1 0001  
                           memcpy@s1 0003                __end_of_ArmBalancePID 38A2  
                          sprintf@ap 01CE                    _WheelMPU6050_Read 2DB6  
                 ?_WheelMPU6050_Read 0097                            strcpy@src 0003  
                         _OSCCONbits 0FD3                          BothWheels@i 0006  
                ??_WheelMPU6050_Read 009B                          efgtoa@nmode 0090  
                 UART_Write_String@i 0004              __end_of_I2C_Master_Init 526A  
            __end_of_I2C_Master_Wait 5204              __end_of_I2C_Master_Stop 52B4  
                        ??_vfpfcnvrt 005F   WheelKalmanFilter@KalmanMeasurement 0079  
              calibrate_wheel_gyro@i 00A7                             sprintf@f 01CF  
                           sprintf@s 00C3  ArmKalmanFilter@armKalmanUncertainty 0071  
                        _wheelOffset 014C                           _UART_Write 523E  
            __end_of_ArmKalmanFilter 3ED4            __end_of_WheelMPU6050_Read 3118  
                      ___fladd@signs 0026                         ___fladd@aexp 0027  
                       ___fladd@bexp 0028                      BothWheels@steps 0001  
